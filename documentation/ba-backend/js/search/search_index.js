var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.813,1,2.504]],["body/controllers/AppController.html",[0,1.393,1,4.292,2,2.079,3,0.294,4,0.294,5,0.26,6,4.426,7,0.195,8,1.633,9,5.924,10,0.983,11,0.02,12,0.477,13,5.171,14,1.222,15,0.396,16,0.67,17,3.276,18,3.276,19,1.158,20,3.912,21,4.426,22,0.294,23,0.133,24,2.079,25,2.479,26,1.222,27,5.171,28,0.017,29,0.017]],["title/modules/AppModule.html",[30,2.761,31,2.504]],["body/modules/AppModule.html",[1,3.374,2,1.656,3,0.159,4,0.159,5,0.141,11,0.021,16,0.795,19,0.627,20,3.525,21,2.396,22,0.159,23,0.072,28,0.011,29,0.011,30,3.136,31,5.011,32,2.13,33,2.844,34,2.396,35,2.396,36,3.525,37,3.283,38,3.525,39,3.283,40,3.525,41,3.283,42,3.283,43,3.07,44,3.525,45,3.527,46,2.396,47,2.396,48,2.799,49,4.12,50,3.374,51,3.374,52,3.374,53,3.374,54,3.374,55,3.374,56,3.374,57,3.098,58,3.374,59,2.799,60,2.799,61,0.697,62,2.799,63,2.799,64,2.585,65,2.61,66,2.13,67,2.799,68,2.844,69,2.799,70,1.774,71,2.844,72,2.799,73,1.125,74,2.61,75,2.799,76,1.43,77,2.844,78,2.799,79,2.799,80,4.12,81,1.774,82,2.799,83,2.799,84,2.799,85,2.799,86,1.642,87,2.105,88,2.844,89,2.799,90,1.642,91,2.61,92,2.799,93,2.396,94,2.416,95,2.61,96,4.889,97,2.867,98,1.859,99,2.416,100,1.774,101,2.844,102,2.799,103,2.61,104,2.844,105,2.25,106,2.61,107,2.13,108,2.799,109,1.529,110,2.61,111,2.799,112,1.642,113,2.844,114,2.799,115,2.799,116,2.799,117,2.799,118,4.12,119,2.799,120,1.146,121,2.13,122,2.564,123,2.396,124,2.799,125,2.799,126,2.799,127,2.799,128,2.799,129,2.799,130,2.799]],["title/injectables/AppService.html",[20,2.128,131,0.904]],["body/injectables/AppService.html",[3,0.304,4,0.304,5,0.269,7,0.201,8,1.666,9,5.991,11,0.02,12,0.493,14,1.264,15,0.404,16,0.576,19,1.198,20,3.722,22,0.304,23,0.138,26,1.264,28,0.017,29,0.017,131,1.581,132,2.276,133,4.578,134,5.349,135,5.349,136,5.349]],["title/classes/ClusterMetric.html",[23,0.093,70,2.299]],["body/classes/ClusterMetric.html",[3,0.253,4,0.253,5,0.224,7,0.168,10,1.289,11,0.021,12,0.625,15,0.454,16,0.61,22,0.355,23,0.115,28,0.015,29,0.015,61,1.109,70,3.952,71,3.073,122,2.508,137,1.298,138,3.073,139,0.962,140,4.747,141,2.372,142,3.186,143,4.747,144,5.339,145,0.401,146,3.087,147,4.453,148,4.453,149,2.814,150,2.275,151,1.895,152,4.453,153,4.453,154,4.453,155,1.895,156,2.413,157,2.009,158,1.604,159,1.169,160,3.389,161,1.169,162,3.811]],["title/controllers/ClusterMetricsController.html",[0,0.813,53,2.504]],["body/controllers/ClusterMetricsController.html",[0,1.21,2,1.345,3,0.19,4,0.19,5,0.168,7,0.126,8,1.23,10,0.89,11,0.021,12,0.432,14,1.383,15,0.344,16,0.63,17,2.12,18,2.12,19,0.75,22,0.19,23,0.086,24,1.345,25,1.604,26,1.107,28,0.013,29,0.013,36,3.169,53,3.233,94,2.747,97,1.963,103,4.045,104,3.729,120,0.842,140,3.565,142,2.76,143,3.565,145,0.266,163,4.112,164,2.12,165,1.604,166,2.846,167,0.975,168,2.747,169,2.428,170,3.233,171,4.04,172,1.993,173,3.233,174,5.01,175,4.009,176,4.009,177,3.233,178,4.009,179,2.067,180,3.233,181,3.565,182,2.31,183,3.196,184,3.347,185,3.196,186,2.967,187,2.967,188,2.967,189,4.04,190,1.23,191,1.23,192,1.749,193,1.883,194,2.864,195,3.233,196,3.347,197,2.967,198,2.967,199,2.12,200,2.179,201,2.31,202,1.963,203,2.31,204,1.963,205,1.963,206,2.31,207,3.347,208,3.423,209,2.113,210,2.591,211,3.169,212,2.31,213,2.31,214,2.31,215,2.31,216,2.31,217,6.554,218,1.205,219,3.347,220,2.31,221,2.12,222,3.347,223,2.31,224,2.31,225,2.547,226,3.347]],["title/injectables/ClusterMetricsService.html",[36,2.128,131,0.904]],["body/injectables/ClusterMetricsService.html",[3,0.126,4,0.126,5,0.111,7,0.083,8,0.904,10,0.42,11,0.021,12,0.561,14,1.645,15,0.396,16,0.638,19,0.495,22,0.126,23,0.057,26,1.353,28,0.009,29,0.009,36,2.019,61,0.55,70,1.399,81,1.399,86,1.295,94,2.019,98,2.861,103,4.267,104,4.296,120,0.858,131,0.857,132,0.94,140,2.62,142,2.44,143,2.62,144,2.947,145,0.312,158,0.796,159,0.58,160,1.681,161,1.556,163,4.737,166,2.649,167,0.644,172,1.465,174,4.089,175,1.89,176,1.89,177,2.376,178,1.89,179,2.284,190,1.254,191,1.254,192,2.161,200,1.631,218,2.134,227,1.524,228,1.88,229,2.947,230,4.296,231,2.947,232,2.44,233,4.089,234,4.777,235,4.777,236,4.777,237,3.443,238,3.443,239,4.777,240,3.621,241,4.777,242,1.059,243,2.209,244,2.44,245,4.36,246,2.209,247,3.443,248,1.89,249,3.874,250,2.209,251,2.209,252,3.443,253,2.209,254,1.309,255,2.996,256,3.443,257,2.209,258,2.62,259,2.947,260,2.209,261,2.209,262,2.947,263,2.209,264,2.947,265,2.376,266,2.209,267,2.376,268,1.89,269,1.128,270,2.209,271,1.89,272,2.209,273,1.681,274,1.524,275,1.524,276,2.209,277,1.65,278,2.209,279,2.209,280,2.209,281,3.027,282,2.209,283,1.128,284,1.89,285,1.768,286,2.209,287,1.524,288,2.209,289,1.295,290,2.209,291,2.209,292,2.209,293,1.524,294,2.209,295,1.524,296,2.209,297,2.209,298,2.209,299,2.209,300,2.209,301,2.209,302,2.209,303,5.486,304,3.621,305,4.695,306,4.23,307,1.681,308,1.89,309,2.209,310,1.89,311,3.443,312,4.23,313,3.443,314,1.89,315,1.89,316,1.89,317,1.399,318,1.89,319,1.524,320,2.209,321,2.209,322,1.89,323,1.89,324,1.524,325,1.524,326,1.681,327,2.209]],["title/classes/Condition.html",[23,0.093,328,2.299]],["body/classes/Condition.html",[3,0.231,4,0.231,5,0.204,7,0.153,10,1.286,11,0.021,12,0.623,15,0.466,16,0.575,22,0.375,23,0.138,28,0.015,29,0.015,61,1.011,90,3.132,91,2.572,122,2.549,137,1.183,139,0.906,141,1.544,145,0.412,146,3.149,149,2.693,150,2.073,151,1.727,155,1.727,156,2.272,157,1.832,158,1.462,159,1.066,161,1.402,328,3.383,329,2.572,330,2.549,331,5.108,332,4.118,333,3.259,334,3.048,335,4.059,336,4.059,337,4.059,338,4.059,339,4.059,340,4.059,341,2.802,342,3.685,343,3.089,344,1.946,345,1.011,346,2.073,347,1.946,348,2.217,349,2.381,350,3.089]],["title/classes/ContainerInformation.html",[23,0.093,351,2.299]],["body/classes/ContainerInformation.html",[3,0.198,4,0.198,5,0.175,7,0.131,10,1.303,11,0.021,12,0.632,15,0.458,16,0.593,22,0.355,23,0.124,28,0.013,29,0.013,61,0.865,109,2.625,110,2.2,120,0.99,122,2.391,137,1.012,139,0.815,141,1.321,145,0.419,146,3.065,149,2.818,150,3.5,151,1.478,155,1.478,156,2.531,157,1.567,158,1.251,159,0.912,161,1.262,330,2.51,334,2.815,345,0.865,347,1.665,349,2.037,351,3.492,352,2.2,353,3.317,354,4.194,355,4.194,356,4.194,357,4.194,358,4.194,359,3.804,360,3.473,361,3.473,362,3.473,363,5.865,364,3.473,365,3.473,366,3.686,367,3.473,368,1.734,369,3.473,370,3.473,371,3.473,372,1.665,373,1.665,374,2.397,375,3.317,376,2.643,377,2.643,378,2.643]],["title/classes/CrudFilters.html",[23,0.093,379,2.128]],["body/classes/CrudFilters.html",[3,0.206,4,0.206,5,0.182,7,0.136,11,0.021,12,0.519,15,0.314,22,0.206,23,0.093,28,0.015,29,0.013,120,0.65,137,1.054,139,0.838,145,0.344,167,1.44,258,4.821,284,4.818,287,3.885,379,2.898,380,4.176,381,3.095,382,1.975,383,6.05,384,2.752,385,3.095,386,5.422,387,4.821,388,3.095,389,1.946,390,3.616,391,5.629,392,6.05,393,5.629,394,5.629,395,4.942,396,5.629,397,4.942,398,4.942,399,2.524,400,5.629,401,6.335,402,5.629,403,4.942,404,5.629,405,6.539,406,6.539,407,5.629,408,5.629,409,5.422,410,5.629,411,5.629,412,4.942,413,5.629,414,3.131,415,5.629,416,5.629,417,5.629,418,4.942,419,5.629,420,3.131,421,5.629,422,5.629,423,3.616,424,3.616,425,3.616]],["title/classes/CrudSorting.html",[23,0.093,426,2.128]],["body/classes/CrudSorting.html",[3,0.285,4,0.285,5,0.252,7,0.188,11,0.02,12,0.562,15,0.388,22,0.285,23,0.129,28,0.018,29,0.017,120,0.899,137,1.459,139,1.034,145,0.374,167,1.777,210,3.153,380,4.539,382,2.733,384,3.809,385,4.284,386,6.006,426,3.576,427,4.284,428,7.224,429,5.005,430,6.576,431,5.005,432,6.576,433,5.005,434,5.005,435,5.005]],["title/interfaces/Data.html",[436,1.739,437,2.299]],["body/interfaces/Data.html",[3,0.284,4,0.284,5,0.251,7,0.188,11,0.02,15,0.446,22,0.399,28,0.017,29,0.017,139,1.033,145,0.374,254,2.498,281,3.723,334,2.55,368,1.455,389,1.533,399,2.55,436,3.279,437,4.333,438,3.163,439,3.163,440,5.205,441,2.928,442,3.799]],["title/classes/DeploymentInformation.html",[23,0.093,112,2.128]],["body/classes/DeploymentInformation.html",[3,0.218,4,0.218,5,0.193,7,0.144,10,1.313,11,0.021,12,0.637,15,0.457,16,0.625,22,0.33,23,0.099,28,0.014,29,0.014,61,0.955,112,3.402,113,2.647,122,2.332,137,1.118,139,0.872,141,2.207,145,0.418,146,2.978,149,2.618,150,3.529,151,1.632,155,1.632,156,2.188,157,1.731,158,1.382,159,1.007,161,1.007,330,2.332,344,2.782,345,1.445,348,3.168,368,2.093,372,1.839,373,1.839,399,3.166,443,2.647,444,4.966,445,4.415,446,4.966,447,3.836,448,3.836,449,3.836,450,3.836,451,3.836,452,3.836,453,3.836,454,3.836,455,3.836,456,2.919,457,3.283]],["title/controllers/DeploymentInformationController.html",[0,0.813,58,2.504]],["body/controllers/DeploymentInformationController.html",[0,1.315,2,1.578,3,0.223,4,0.223,5,0.198,7,0.148,8,1.371,10,0.746,11,0.021,12,0.362,14,1.478,15,0.447,16,0.562,19,0.879,22,0.223,23,0.101,24,1.578,25,1.882,26,0.927,28,0.014,29,0.014,37,3.205,58,3.604,105,3.936,106,3.309,107,2.987,112,3.063,120,1.17,142,2.668,145,0.223,165,1.882,167,1.144,187,3.309,190,1.03,191,1.03,200,2.136,228,2.852,255,3.417,283,3.422,285,1.34,344,3,345,1.73,348,2.852,368,1.952,445,5.098,458,3.604,459,3.36,460,4.9,461,4.47,462,3.36,463,4.47,464,3.925,465,3.604,466,2.852,467,5.223,468,5.223,469,3.925,470,3.925,471,3.36,472,3.36,473,3.925,474,2.487]],["title/injectables/DeploymentInformationService.html",[37,1.981,131,0.904]],["body/injectables/DeploymentInformationService.html",[3,0.127,4,0.127,5,0.112,7,0.084,8,0.909,11,0.021,12,0.548,14,1.594,15,0.425,16,0.559,19,0.499,22,0.127,23,0.057,26,1.228,28,0.009,29,0.009,37,1.891,61,0.554,98,2.592,105,3.65,106,3.866,112,2.813,120,1.032,131,0.863,132,0.947,139,0.587,141,1.617,145,0.296,158,0.802,159,0.584,161,1.755,166,0.947,167,1.009,169,2.093,172,1.474,173,2.39,179,2.164,190,1.364,191,1.364,193,1.928,200,1.879,210,1.067,218,1.872,228,1.891,230,3.311,232,2.811,242,1.067,244,2.45,255,2.62,269,1.137,277,2.754,283,2.45,285,1.774,287,1.536,289,1.305,293,1.536,295,1.536,317,2.194,330,0.895,344,2.926,345,1.68,348,1.891,372,1.067,373,1.067,387,1.694,389,0.684,444,2.964,445,3.651,446,2.964,456,2.636,458,4.212,460,4.305,461,2.964,462,2.964,465,2.39,466,1.891,474,2.693,475,1.905,476,3.227,477,2.39,478,2.693,479,2.964,480,4.797,481,3.463,482,2.964,483,4.797,484,2.226,485,3.463,486,3.463,487,2.964,488,3.639,489,2.226,490,2.964,491,2.964,492,5.036,493,2.636,494,2.964,495,2.636,496,2.636,497,3.639,498,2.964,499,3.235,500,3.639,501,4.106,502,2.226,503,2.226,504,2.636,505,2.964,506,3.463,507,3.463,508,3.463,509,2.226,510,2.964,511,2.194,512,2.964,513,2.226,514,2.226,515,2.39,516,1.137,517,2.194,518,1.41,519,2.226,520,2.226,521,1.41,522,2.226,523,2.226,524,2.964,525,1.905,526,1.905,527,2.226,528,1.305,529,1.905,530,1.905,531,2.226,532,3.463,533,2.226,534,2.226,535,2.226,536,2.226,537,2.226,538,2.226,539,2.226,540,2.39,541,2.964,542,1.905,543,1.905,544,1.905,545,1.905,546,2.636,547,2.964,548,2.636,549,1.905,550,1.905,551,1.905,552,1.905,553,1.905,554,2.226,555,2.226,556,2.226,557,2.226,558,2.226,559,2.226]],["title/controllers/DerivativeController.html",[0,0.813,52,2.504]],["body/controllers/DerivativeController.html",[0,1.076,2,1.931,3,0.273,4,0.273,5,0.242,7,0.181,8,1.561,10,0.913,11,0.02,12,0.443,14,1.135,15,0.449,16,0.64,19,1.076,22,0.273,23,0.124,24,1.931,26,1.135,28,0.016,29,0.016,38,3.787,52,4.103,120,1.068,145,0.273,165,2.302,190,1.261,191,1.261,192,1.555,345,1.608,368,2.059,560,4.11,561,4.11,562,5.088,563,4.11,564,4.914,565,4.456,566,4.802,567,4.802,568,4.802,569,4.802,570,4.802,571,4.802,572,4.802,573,4.802,574,4.802]],["title/injectables/DerivativeService.html",[38,2.128,131,0.904]],["body/injectables/DerivativeService.html",[3,0.196,4,0.196,5,0.173,7,0.13,8,1.254,11,0.021,12,0.574,14,1.4,15,0.47,16,0.638,19,0.771,22,0.196,23,0.089,24,1.384,26,0.814,28,0.013,29,0.013,38,2.802,81,2.182,94,2.019,98,2.156,120,1.21,131,1.19,132,1.465,145,0.354,166,1.465,179,1.776,190,1.634,191,1.634,193,1.384,218,1.24,242,1.651,245,4.903,273,2.621,274,2.377,277,2.63,281,2.803,305,4.09,317,2.182,319,2.377,324,2.377,325,2.377,326,2.621,345,1.678,366,1.88,368,2.057,399,1.759,420,2.182,441,2.802,562,4.09,563,4.09,564,4.51,565,4.09,575,2.947,576,4.778,577,4.778,578,4.778,579,3.444,580,3.444,581,5.205,582,3.444,583,4.778,584,5.072,585,5.926,586,3.444,587,5.487,588,3.444,589,3.444,590,3.444,591,3.444,592,3.444,593,3.444,594,3.444,595,3.444,596,3.444,597,3.444,598,3.444,599,3.444,600,3.787,601,3.444,602,3.444,603,3.444,604,3.444,605,3.444,606,3.444]],["title/classes/Event.html",[23,0.093,64,1.739]],["body/classes/Event.html",[3,0.215,4,0.215,5,0.19,7,0.142,10,1.352,11,0.021,12,0.656,15,0.461,16,0.548,22,0.328,23,0.097,28,0.014,29,0.014,61,0.941,64,2.76,68,2.608,120,1.034,122,2.315,137,1.101,139,0.863,141,2.19,145,0.41,146,3.166,149,2.902,150,1.93,151,1.608,155,1.608,156,2.166,157,1.705,159,0.992,161,0.992,330,2.315,332,3.974,333,3.144,345,1.434,368,1.796,581,4.382,607,2.608,608,4.928,609,5.758,610,4.928,611,3.974,612,3.778,613,3.778,614,3.778,615,3.778,616,3.778,617,3.778,618,3.778,619,3.778,620,3.778,621,3.778,622,3.778,623,2.876,624,3.234]],["title/classes/EventDto.html",[23,0.093,625,2.299]],["body/classes/EventDto.html",[3,0.271,4,0.271,5,0.24,7,0.18,11,0.021,12,0.621,15,0.476,22,0.271,23,0.123,28,0.016,29,0.016,120,0.857,137,1.39,139,1.004,141,2.448,145,0.394,177,3.291,185,3.515,262,4.081,332,3.291,333,2.604,345,1.188,625,3.75,626,4.081,627,6.436,628,6.436,629,4.768,630,4.768,631,4.768,632,4.768,633,4.768,634,4.768,635,4.081,636,4.768,637,4.081,638,4.768]],["title/controllers/EventSetController.html",[0,0.813,51,2.504]],["body/controllers/EventSetController.html",[0,1.011,2,1.814,3,0.257,4,0.257,5,0.227,7,0.17,8,1.501,10,1.193,11,0.021,12,0.579,14,1.483,15,0.442,16,0.616,19,1.011,22,0.257,23,0.116,24,1.814,26,1.483,28,0.016,29,0.016,39,3.428,51,3.946,64,2.164,65,4.181,66,3.434,76,2.305,120,1.027,145,0.257,165,2.164,190,1.185,191,1.185,192,1.461,199,3.977,345,1.644,639,3.604,640,3.863,641,5.648,642,5.648,643,4.894,644,4.513,645,4.513,646,3.863,647,5.718,648,4.513,649,4.513,650,4.513,651,4.513,652,4.513,653,4.513,654,4.513]],["title/injectables/EventSetService.html",[39,1.981,131,0.904]],["body/injectables/EventSetService.html",[3,0.202,4,0.202,5,0.179,7,0.134,8,1.282,11,0.021,12,0.6,14,1.487,15,0.414,16,0.678,19,0.796,22,0.202,23,0.092,26,1.318,28,0.013,29,0.013,39,2.666,61,0.885,64,3.301,65,4.221,76,2.494,120,1.169,121,2.704,123,3.041,131,1.216,132,1.512,145,0.342,159,0.933,161,1.282,179,2.106,190,1.576,191,1.576,193,1.428,218,1.28,242,1.703,244,3.068,269,1.815,277,1.703,285,1.213,289,2.083,345,1.496,528,3.271,565,2.452,639,3.638,641,5.14,642,5.14,643,4.178,646,4.178,655,3.041,656,4.882,657,4.882,658,3.553,659,3.553,660,4.882,661,4.882,662,3.553,663,4.882,664,3.553,665,2.704,666,3.553,667,3.553,668,3.553,669,2.704,670,3.553,671,2.704,672,3.553,673,3.553,674,3.553,675,4.774,676,3.553,677,4.774,678,4.882,679,5.577,680,3.553,681,3.041,682,3.553,683,3.041,684,4.882,685,4.882,686,4.882,687,3.553,688,3.553,689,3.553,690,3.553,691,3.553,692,3.553]],["title/controllers/EventsController.html",[0,0.813,50,2.504]],["body/controllers/EventsController.html",[0,1.131,2,1.19,3,0.168,4,0.168,5,0.149,7,0.111,8,1.126,10,1.117,11,0.021,12,0.542,14,1.53,15,0.39,16,0.596,17,1.875,18,3.198,19,0.663,22,0.168,23,0.076,24,1.19,25,1.419,26,1.014,28,0.012,29,0.012,40,2.96,50,2.961,64,2.818,120,0.995,142,3.23,145,0.315,165,1.419,167,0.863,169,2.55,179,2.222,180,2.961,181,3.265,182,2.042,183,3.023,185,3.661,186,3.508,187,2.719,188,3.508,189,4.47,190,1.453,191,1.453,192,1.634,193,1.725,194,2.533,195,2.961,197,3.508,198,3.508,199,4.006,200,2.211,201,2.042,202,1.735,203,2.042,204,1.735,205,1.735,206,2.042,208,3.198,209,1.936,210,2.42,211,2.96,212,2.042,213,2.042,214,2.042,215,2.042,216,2.042,218,1.066,220,2.042,221,1.875,223,2.042,224,2.042,225,2.252,228,2.343,285,1.465,476,2.516,548,3.265,625,2.719,665,2.252,693,2.533,694,4.473,695,4.291,696,5.536,697,4.291,698,3.673,699,2.959,700,2.959,701,4.291,702,2.959,703,2.959,704,2.959,705,2.533,706,2.959,707,4.291,708,2.959,709,2.959,710,2.959,711,2.959,712,6.323,713,2.959,714,2.959,715,2.959,716,2.959,717,2.959,718,2.959,719,2.959]],["title/injectables/EventsService.html",[40,2.128,131,0.904]],["body/injectables/EventsService.html",[0,0.817,3,0.08,4,0.08,5,0.071,7,0.053,8,0.625,11,0.021,12,0.567,14,1.625,15,0.427,16,0.594,19,0.315,22,0.08,23,0.036,26,1.435,28,0.006,29,0.006,37,2.581,39,2.581,40,1.396,41,2.581,42,2.581,43,1.863,61,0.35,64,3.472,65,0.89,66,1.069,73,0.957,87,2.414,95,0.89,97,1.396,99,0.824,106,0.89,107,1.069,120,1.217,121,1.069,131,0.593,132,0.598,139,0.404,141,0.905,142,2.539,145,0.375,158,0.506,159,0.369,161,1.241,166,1.013,167,1.063,172,1.013,179,2.172,190,1.545,191,1.545,193,1.245,200,2.009,210,1.141,218,1.702,229,2.037,231,2.037,232,2.888,242,0.673,244,1.863,249,3.235,254,1.797,268,1.202,269,0.717,277,2.483,285,1.697,289,1.817,293,0.969,295,0.969,319,0.969,324,0.969,325,0.969,333,1.3,345,1.622,347,0.673,366,2.229,368,0.694,372,0.673,373,0.673,389,0.951,409,3.122,458,0.969,466,1.3,478,1.962,504,2.776,505,3.494,516,0.717,517,1.508,518,0.89,521,0.89,528,1.396,561,1.202,584,5.266,608,1.202,610,2.651,611,3.06,623,1.069,625,2.809,635,4.254,639,0.767,671,1.069,675,2.651,677,1.202,681,1.202,683,2.037,694,4.479,698,2.037,705,2.037,720,1.202,721,2.38,722,2.38,723,2.38,724,3.647,725,2.38,726,2.38,727,2.38,728,2.38,729,3.647,730,2.38,731,2.38,732,2.38,733,2.38,734,4.082,735,3.097,736,2.38,737,2.38,738,1.404,739,3.097,740,2.38,741,2.38,742,1.404,743,3.647,744,2.38,745,1.404,746,2.776,747,2.38,748,1.404,749,3.795,750,2.38,751,1.404,752,2.38,753,1.404,754,2.38,755,2.38,756,1.404,757,2.38,758,1.404,759,2.037,760,2.38,761,4.434,762,2.38,763,1.404,764,2.38,765,1.404,766,4.082,767,2.38,768,1.404,769,4.082,770,1.404,771,1.404,772,3.596,773,4.726,774,1.404,775,1.404,776,1.404,777,1.404,778,2.38,779,1.404,780,1.404,781,1.811,782,2.38,783,2.38,784,2.38,785,2.38,786,2.38,787,2.037,788,1.404,789,0.89,790,1.404,791,0.969,792,1.404,793,2.38,794,1.404,795,1.404,796,2.38,797,1.404,798,1.404,799,1.404,800,1.404,801,1.404,802,1.404,803,1.404,804,1.404,805,1.404,806,1.404,807,1.404,808,1.404,809,1.404,810,1.404,811,1.404,812,2.38,813,1.404,814,1.404,815,2.38,816,1.404,817,1.404,818,3.647,819,1.404,820,1.404,821,1.404,822,1.404,823,1.404,824,1.404,825,1.404,826,1.404,827,1.404,828,2.38,829,1.202,830,1.404,831,1.404,832,1.404,833,2.38,834,1.404,835,1.404,836,1.404,837,1.404,838,1.404,839,1.404,840,1.404,841,1.404,842,1.404,843,1.404,844,1.404,845,1.404,846,1.404,847,1.404,848,1.404,849,1.404,850,1.404,851,1.202,852,2.38,853,1.404,854,1.404,855,1.404,856,1.202,857,1.404,858,1.404,859,3.106,860,2.38,861,1.404,862,1.404,863,1.404,864,1.404,865,1.404,866,1.404,867,1.404,868,1.404,869,2.38,870,1.404,871,1.404]],["title/classes/Hpa.html",[23,0.093,73,1.459]],["body/classes/Hpa.html",[3,0.218,4,0.218,5,0.193,7,0.144,10,1.292,11,0.021,12,0.627,15,0.466,16,0.554,22,0.368,23,0.132,28,0.014,29,0.014,61,0.955,73,2.332,74,2.43,122,2.492,137,1.118,139,0.872,141,2.207,145,0.417,146,3.148,149,2.32,151,1.632,155,1.632,156,2.469,157,1.731,158,1.382,159,1.007,161,1.35,192,1.242,254,1.459,330,2.068,344,2.782,345,1.445,346,2.964,347,2.466,349,3.016,353,2.647,368,1.807,872,2.43,873,4.966,874,4.966,875,4.966,876,3.836,877,2.919,878,3.836,879,3.836,880,3.836,881,3.836,882,3.836,883,3.836,884,2.43,885,2.647,886,2.919,887,3.549,888,2.919,889,2.919]],["title/controllers/HpaController.html",[0,0.813,54,2.504]],["body/controllers/HpaController.html",[0,1.256,2,1.443,3,0.204,4,0.204,5,0.181,7,0.135,8,1.291,10,0.935,11,0.021,12,0.453,14,1.425,15,0.357,16,0.649,17,2.275,18,2.275,19,0.804,22,0.204,23,0.092,24,1.443,25,1.721,26,1.162,28,0.013,29,0.013,41,3.063,54,3.394,73,2.54,120,0.884,142,1.834,145,0.28,165,1.721,167,1.046,168,2.884,169,2.482,170,3.394,171,3.394,172,2.093,179,2.112,180,3.394,181,3.742,182,2.478,183,3.294,185,3.294,186,3.822,187,3.116,188,3.116,189,4.163,190,1.291,191,1.291,192,1.816,193,1.977,195,3.394,197,3.116,198,3.116,199,2.275,200,2.228,201,2.478,202,2.106,203,2.478,204,2.106,205,2.106,206,2.478,208,3.553,209,2.219,210,2.689,211,3.289,212,2.478,213,2.478,214,2.478,215,2.478,216,2.478,218,1.771,220,2.478,221,2.275,223,2.478,224,2.478,225,2.732,346,2.512,890,3.073,891,4.209,892,3.59,893,3.59,894,3.59,895,3.59,896,3.59,897,6.681,898,3.59,899,3.59,900,3.59]],["title/injectables/HpaService.html",[41,1.981,131,0.904]],["body/injectables/HpaService.html",[3,0.108,4,0.108,5,0.095,7,0.071,8,0.8,10,0.36,11,0.021,12,0.56,14,1.594,15,0.369,16,0.553,19,0.424,22,0.108,23,0.049,26,1.213,28,0.008,29,0.008,41,1.664,61,0.472,73,2.788,86,1.111,87,1.954,98,1.978,103,2.777,105,2.624,120,1.146,131,0.759,132,0.806,139,0.517,145,0.346,158,0.682,159,0.497,161,1.595,166,1.628,167,0.888,169,1.952,172,1.297,173,1.307,179,2.199,190,1.417,191,1.417,192,1.238,193,1.762,200,1.978,218,1.579,228,1.664,232,3.037,242,0.908,244,2.622,254,2.355,255,2.394,258,1.441,265,2.104,267,2.104,269,0.967,275,1.307,277,3.213,285,1.496,289,1.787,307,3.336,308,1.621,330,0.761,333,1.664,344,2.101,345,1.197,346,2.959,347,0.908,372,0.908,373,0.908,382,1.664,389,1.476,399,1.557,465,1.307,476,3.01,477,2.104,478,2.423,515,3.025,516,1.557,517,1.931,518,1.2,521,1.2,540,1.307,611,2.104,665,1.441,746,1.441,749,2.609,759,4.393,772,3.336,829,5.09,856,3.752,859,1.441,884,1.2,885,2.104,886,2.32,891,3.752,901,1.621,902,3.825,903,3.048,904,4.383,905,3.048,906,3.048,907,3.048,908,3.048,909,3.048,910,4.383,911,1.894,912,3.048,913,2.609,914,3.048,915,5.3,916,1.894,917,3.048,918,3.048,919,3.048,920,2.32,921,1.894,922,3.048,923,1.894,924,3.048,925,1.894,926,3.048,927,3.825,928,1.894,929,3.752,930,3.048,931,1.894,932,4.383,933,3.048,934,1.894,935,3.048,936,3.048,937,3.048,938,3.825,939,1.894,940,2.32,941,2.609,942,3.048,943,1.894,944,1.621,945,1.894,946,1.894,947,1.894,948,3.048,949,1.621,950,1.894,951,1.621,952,1.894,953,1.894,954,3.048,955,1.621,956,1.894,957,1.894,958,1.894,959,1.894,960,1.894,961,1.894,962,1.894,963,1.894,964,3.048,965,1.894,966,1.894,967,1.894,968,1.894,969,1.894,970,1.894,971,1.894,972,1.894,973,1.894,974,1.894,975,1.894,976,1.894,977,1.894,978,1.894,979,1.894,980,1.894,981,3.048,982,1.894,983,2.609,984,1.894,985,1.894,986,1.894,987,1.894,988,1.894,989,1.894,990,1.894,991,1.894,992,1.894,993,1.894,994,1.894,995,3.825,996,1.894,997,3.825,998,1.894,999,1.894,1000,3.048,1001,3.048,1002,1.894,1003,1.894,1004,3.048,1005,1.894,1006,1.894,1007,1.894,1008,1.894]],["title/classes/ListQueryDto.html",[23,0.093,183,1.981]],["body/classes/ListQueryDto.html",[3,0.234,4,0.234,5,0.207,7,0.155,10,1.211,11,0.021,12,0.587,16,0.73,22,0.234,23,0.155,28,0.015,29,0.015,137,1.198,139,0.913,145,0.362,183,2.939,202,3.878,208,3.803,209,3.061,210,2.878,211,3.52,366,2.939,379,3.52,384,4.096,426,3.52,1009,3.517,1010,7.257,1011,6.612,1012,7.013,1013,4.109,1014,4.109,1015,4.109,1016,4.109,1017,4.109,1018,5.383,1019,4.109,1020,4.109,1021,4.109,1022,3.517,1023,3.517,1024,3.127,1025,3.127,1026,3.127,1027,3.127,1028,3.127,1029,3.127,1030,3.127,1031,3.127,1032,4.109,1033,4.109,1034,3.517,1035,3.517,1036,6.37,1037,3.127,1038,3.127,1039,3.127,1040,3.517]],["title/classes/Metric.html",[23,0.093,254,1.38]],["body/classes/Metric.html",[3,0.225,4,0.225,5,0.199,7,0.149,10,1.242,11,0.021,12,0.602,15,0.473,16,0.565,22,0.372,23,0.135,28,0.014,29,0.014,61,0.985,73,2.111,74,2.506,122,2.523,137,1.153,139,0.89,141,1.505,145,0.417,146,3.089,149,2.658,150,3.336,151,1.683,155,1.683,156,2.671,157,1.785,158,1.425,159,1.039,161,1.378,192,1.907,254,1.997,330,2.523,344,1.897,345,0.985,346,2.021,347,1.897,349,2.32,353,3.623,368,1.53,872,2.506,873,3.386,874,3.386,875,3.386,884,2.506,885,4.066,886,4.484,887,3.623,888,3.011,889,3.011,1041,3.956,1042,3.956,1043,3.956,1044,3.956,1045,3.956]],["title/classes/Pagination.html",[23,0.093,209,1.637]],["body/classes/Pagination.html",[3,0.293,4,0.293,5,0.26,7,0.194,11,0.02,12,0.573,22,0.293,23,0.133,28,0.018,29,0.017,137,1.503,139,1.053,145,0.353,167,1.503,186,3.268,188,3.268,192,1.67,198,3.268,209,2.802,368,2.062,382,2.817,399,2.635,1046,4.415,1047,5.158,1048,4.883,1049,5.158,1050,5.158,1051,5.919,1052,5.158,1053,5.158,1054,5.158,1055,5.158]],["title/classes/PodInformation.html",[23,0.093,109,1.981]],["body/classes/PodInformation.html",[3,0.215,4,0.215,5,0.19,7,0.142,10,1.223,11,0.021,12,0.593,15,0.456,16,0.62,22,0.366,23,0.131,28,0.014,29,0.014,61,0.941,109,3.144,110,2.394,120,0.679,122,2.477,137,1.101,139,0.863,141,2.19,145,0.419,146,3.134,149,2.902,150,1.93,151,2.166,155,1.608,156,2.45,157,1.705,158,1.361,159,0.992,161,1.336,330,2.586,334,1.93,345,1.434,347,2.441,349,2.986,351,3.903,352,2.394,353,2.608,354,2.876,355,2.876,356,2.876,357,2.876,358,2.876,359,2.608,363,5.505,366,3.365,368,1.484,372,1.811,373,1.811,374,2.608,375,3.514,376,2.876,377,4.382,378,2.876,877,2.876,1056,3.778,1057,3.778,1058,3.778,1059,3.778,1060,3.778]],["title/controllers/PodMetricsController.html",[0,0.813,56,2.504]],["body/controllers/PodMetricsController.html",[0,1.329,2,1.613,3,0.228,4,0.228,5,0.202,7,0.151,8,1.391,10,0.763,11,0.021,12,0.37,14,1.402,15,0.449,16,0.57,19,0.898,22,0.228,23,0.103,24,1.613,25,1.923,26,0.948,28,0.014,29,0.014,42,3.24,56,3.656,94,4.031,95,3.357,97,2.352,105,3.68,109,2.19,120,0.721,145,0.228,161,1.053,164,2.541,165,1.923,166,2.868,167,1.169,168,3.107,169,2.015,170,3.656,171,3.656,172,2.254,179,1.92,190,1.053,191,1.053,193,1.613,200,2.154,218,1.908,255,2.893,283,3.442,285,1.369,345,1.712,460,3.656,463,4.535,471,3.433,472,3.433,791,3.656,1061,5.401,1062,4.535,1063,4.011,1064,4.011,1065,4.535,1066,4.011,1067,4.011,1068,4.535,1069,4.011,1070,5.298,1071,4.011,1072,4.011,1073,4.011]],["title/injectables/PodMetricsService.html",[42,1.981,131,0.904]],["body/injectables/PodMetricsService.html",[3,0.1,4,0.1,5,0.088,7,0.066,8,0.752,10,0.333,11,0.021,12,0.535,14,1.479,15,0.44,16,0.533,19,0.393,22,0.1,23,0.045,26,1.235,28,0.008,29,0.008,42,1.564,61,0.437,76,2.531,86,1.029,94,3.554,95,3.763,98,2.358,105,2.522,109,1.982,120,1.013,131,0.713,132,0.746,139,0.486,141,1.381,145,0.31,151,1.783,158,0.632,159,0.46,161,1.859,166,0.746,167,0.835,169,2.305,172,1.219,179,2.169,190,1.431,191,1.431,193,1.992,200,2.069,210,0.841,218,2.139,227,1.211,228,1.564,230,4.182,232,2.531,242,0.841,244,2.14,265,1.977,267,1.977,269,0.896,275,1.211,277,2.781,283,2.359,285,1.576,287,1.211,293,1.211,295,1.211,317,1.815,330,0.705,334,0.896,344,2.009,345,1.699,351,2.925,354,1.335,355,1.335,356,1.335,357,1.335,358,1.335,359,1.211,372,0.841,373,0.841,374,1.211,377,3.77,387,1.335,389,0.539,460,3.893,465,1.977,466,1.564,474,2.3,476,3.554,477,1.977,478,2.3,479,2.452,482,2.452,487,2.452,488,3.107,490,2.452,491,2.452,492,4.764,493,2.18,494,2.452,495,2.18,496,2.18,497,3.107,498,2.452,499,2.763,500,3.107,501,3.586,504,3.77,510,3.107,511,1.815,512,2.452,515,1.977,516,2.14,517,1.815,518,1.111,521,1.111,524,2.452,525,1.501,526,1.501,528,1.029,529,1.501,530,1.501,540,2.505,541,2.452,542,1.501,543,1.501,544,1.501,545,1.501,546,2.18,547,2.452,548,2.18,549,1.501,550,1.501,551,1.501,552,1.501,553,1.501,637,1.501,791,4.099,920,2.18,940,2.18,941,1.501,955,1.501,1061,2.452,1062,2.452,1065,4.666,1068,3.107,1074,2.864,1075,2.864,1076,2.864,1077,2.864,1078,4.19,1079,1.754,1080,2.452,1081,2.864,1082,1.754,1083,1.501,1084,2.864,1085,1.501,1086,2.864,1087,4.19,1088,1.754,1089,2.864,1090,1.754,1091,2.864,1092,1.754,1093,2.864,1094,1.754,1095,1.754,1096,2.452,1097,2.864,1098,1.754,1099,1.754,1100,1.754,1101,1.754,1102,1.754,1103,1.754,1104,1.754,1105,1.754,1106,1.754,1107,1.754,1108,1.754,1109,1.754,1110,1.754,1111,1.754,1112,2.864,1113,1.754,1114,1.754,1115,1.754,1116,1.754,1117,1.754,1118,1.754,1119,1.754,1120,1.754,1121,1.754,1122,1.754,1123,1.754,1124,1.754,1125,2.864,1126,1.754,1127,1.754,1128,1.754,1129,1.754,1130,2.864,1131,1.754,1132,1.754,1133,1.754,1134,1.754,1135,2.864,1136,1.754,1137,1.754,1138,1.754,1139,1.754,1140,1.754,1141,1.754,1142,2.864,1143,1.754,1144,2.864,1145,1.754,1146,1.754]],["title/classes/PrometheusMetric.html",[23,0.093,100,2.299]],["body/classes/PrometheusMetric.html",[3,0.245,4,0.245,5,0.217,7,0.162,10,1.275,11,0.021,12,0.619,15,0.472,16,0.597,22,0.349,23,0.111,28,0.015,29,0.015,61,1.071,100,3.888,101,2.969,122,2.467,137,1.254,139,0.94,145,0.413,146,2.923,149,2.769,150,3.427,151,1.83,155,1.83,156,2.36,157,1.941,158,1.549,159,1.129,161,1.129,192,1.987,330,2.467,389,1.885,885,4.235,1147,2.969,1148,6.137,1149,4.301,1150,4.301,1151,4.301,1152,4.301,1153,4.301,1154,3.273,1155,3.682]],["title/controllers/PrometheusMetricsController.html",[0,0.813,57,2.299]],["body/controllers/PrometheusMetricsController.html",[0,1.303,2,1.551,3,0.219,4,0.219,5,0.194,7,0.145,8,1.355,10,0.733,11,0.021,12,0.356,14,1.468,15,0.395,16,0.556,19,0.864,22,0.219,23,0.133,24,1.551,25,1.85,26,1.22,28,0.014,29,0.014,43,2.972,57,3.271,73,2.075,87,2.637,97,2.262,98,2.803,99,3.028,120,0.693,145,0.219,164,2.444,165,1.85,166,2.644,167,1.124,168,3.028,169,1.963,179,1.884,185,2.819,190,1.355,191,1.013,192,2.239,200,2.121,249,3.028,254,1.963,283,2.637,285,1.317,382,2.819,389,1.586,414,3.686,420,3.686,466,2.819,511,3.936,789,3.271,1156,5.162,1157,3.858,1158,3.858,1159,3.929,1160,3.929,1161,3.929,1162,3.929,1163,4.428,1164,3.302,1165,2.662,1166,4.419,1167,4.428,1168,3.302,1169,3.929,1170,3.302,1171,4.419,1172,5.318,1173,4.419,1174,4.419,1175,3.302,1176,3.302,1177,2.936,1178,3.302,1179,3.302]],["title/injectables/PrometheusMetricsService.html",[43,1.853,131,0.904]],["body/injectables/PrometheusMetricsService.html",[3,0.108,4,0.108,5,0.096,7,0.072,8,0.804,11,0.021,12,0.499,14,1.465,15,0.447,16,0.582,19,0.427,22,0.108,23,0.049,26,1.216,28,0.008,29,0.008,43,1.564,61,0.474,73,2.568,76,0.973,81,1.207,87,3.11,98,2.843,99,3.298,100,1.207,120,0.925,131,0.763,132,0.811,145,0.293,159,0.5,161,1.351,166,1.871,167,1.119,169,1.164,172,1.303,179,2.155,190,1.351,191,1.351,192,2.237,193,0.766,200,1.981,218,2.091,227,1.315,232,1.564,240,2.621,242,0.913,244,2.763,245,4.116,248,1.63,249,3.493,254,1.957,259,2.621,264,4.814,269,0.973,271,1.63,273,1.45,274,1.315,277,2.467,281,2.628,283,2.873,285,2.033,304,2.621,307,1.45,314,4.404,315,3.286,316,3.286,317,2.432,318,3.286,319,2.65,322,3.286,323,3.286,324,2.65,325,2.65,326,2.922,382,3.441,388,1.63,389,1.58,414,3.26,420,3.427,466,3.386,511,3.26,600,2.65,772,2.33,787,1.63,789,3.563,884,1.207,913,3.286,944,1.63,1048,3.035,1080,1.63,1083,1.63,1085,1.63,1154,1.45,1160,4.633,1161,4.116,1162,2.33,1163,3.347,1167,3.916,1169,4.533,1177,2.922,1180,3.062,1181,4.397,1182,4.397,1183,3.062,1184,3.062,1185,3.062,1186,1.905,1187,3.062,1188,1.905,1189,3.062,1190,3.062,1191,3.062,1192,3.062,1193,3.062,1194,1.905,1195,3.062,1196,1.905,1197,4.397,1198,1.905,1199,1.905,1200,1.905,1201,1.905,1202,1.905,1203,1.905,1204,3.062,1205,1.905,1206,1.905,1207,1.905,1208,1.905,1209,4.397,1210,1.905,1211,1.905,1212,1.905,1213,3.839,1214,3.062,1215,1.905,1216,3.286,1217,3.062,1218,1.905,1219,3.839,1220,1.905,1221,3.839,1222,1.905,1223,1.905,1224,1.905,1225,3.062,1226,1.905,1227,3.062,1228,1.905,1229,1.905,1230,1.905]],["title/classes/QueryDto.html",[23,0.093,1165,2.504]],["body/classes/QueryDto.html",[0,1.17,3,0.223,4,0.223,5,0.198,7,0.148,11,0.021,12,0.577,14,1.234,15,0.442,16,0.562,19,0.879,22,0.223,23,0.135,24,1.578,25,1.882,26,1.234,28,0.014,29,0.014,43,2.998,57,2.487,73,1.578,87,2.005,97,2.302,98,2.356,99,3.82,137,1.144,139,0.886,145,0.356,164,2.487,166,2.222,168,2.302,169,1.493,179,1.271,185,2.144,190,1.03,192,2.169,200,2.136,249,2.302,254,1.493,283,2.668,285,1.34,382,2.144,389,1.206,414,4.127,420,4.127,466,2.144,511,3.309,789,4.127,1159,2.987,1160,2.987,1161,2.987,1162,2.987,1163,3.975,1164,3.36,1165,3.604,1166,5.355,1167,4.958,1168,3.36,1169,3.975,1170,3.36,1171,4.47,1172,5.355,1173,4.47,1174,4.47,1175,3.36,1176,3.36,1177,2.987,1178,3.36,1179,3.36,1231,3.925,1232,3.925,1233,3.925,1234,3.925]],["title/interfaces/Result.html",[281,1.853,436,1.739]],["body/interfaces/Result.html",[3,0.284,4,0.284,5,0.251,7,0.188,11,0.02,15,0.418,22,0.399,28,0.017,29,0.017,139,1.033,145,0.374,254,2.772,281,3.493,334,2.55,368,1.455,389,1.533,399,3.355,436,3.279,437,4.162,438,3.163,439,3.163,440,3.799,441,2.928,442,5.205]],["title/interfaces/ResultDto.html",[436,1.739,441,2.128]],["body/interfaces/ResultDto.html",[3,0.284,4,0.284,5,0.251,7,0.188,11,0.02,15,0.446,22,0.399,28,0.017,29,0.017,139,1.033,145,0.374,254,2.498,281,3.355,334,3.493,368,1.455,389,1.533,399,2.55,436,3.279,437,4.618,438,3.163,439,3.163,440,3.799,441,3.57,442,3.799]],["title/classes/ScalingCondition.html",[23,0.093,90,2.128]],["body/classes/ScalingCondition.html",[3,0.235,4,0.235,5,0.208,7,0.155,10,1.259,11,0.021,12,0.61,15,0.464,16,0.581,22,0.377,23,0.139,28,0.015,29,0.015,61,1.028,90,3.527,91,2.614,122,2.565,137,1.202,139,0.915,141,2.288,145,0.408,146,3.145,149,2.435,151,1.756,155,1.756,156,2.297,157,1.862,158,1.486,159,1.083,161,1.417,328,2.614,329,2.614,330,2.17,331,3.531,332,2.847,333,2.253,334,2.107,341,2.847,342,3.725,343,3.14,344,2.884,345,1.498,346,3.072,347,2.587,348,3.285,349,3.165,350,3.14,877,3.14,1235,4.126,1236,4.126,1237,4.126,1238,4.126,1239,4.126]],["title/controllers/ScalingConditionsController.html",[0,0.813,55,2.504]],["body/controllers/ScalingConditionsController.html",[0,1.245,2,1.418,3,0.201,4,0.201,5,0.178,7,0.133,8,1.275,10,0.924,11,0.021,12,0.448,14,1.415,15,0.353,16,0.645,17,2.235,18,2.235,19,0.79,22,0.201,23,0.091,24,1.418,25,1.691,26,1.148,28,0.013,29,0.013,44,3.259,55,3.353,87,3.315,88,3.835,93,3.019,120,0.873,142,1.802,145,0.276,165,1.691,167,1.028,168,2.849,169,2.468,170,3.353,171,3.353,172,2.067,179,2.101,180,3.353,182,2.435,183,3.27,185,3.27,186,3.794,187,3.078,188,3.078,189,4.132,190,1.275,191,1.275,192,1.799,193,1.953,195,3.353,197,3.078,198,3.078,199,2.235,200,2.216,201,2.435,202,2.069,203,2.435,204,2.069,205,2.069,206,2.435,208,3.521,209,2.192,210,2.664,211,3.259,212,2.435,213,2.435,214,2.435,215,2.435,216,2.435,218,1.271,220,2.435,221,2.235,223,2.435,224,2.435,346,2.482,348,3.544,1240,4.229,1241,3.019,1242,3.528,1243,3.528,1244,3.528,1245,3.528,1246,6.65,1247,3.528,1248,3.528,1249,3.528,1250,3.528]],["title/injectables/ScalingConditionsService.html",[44,2.128,131,0.904]],["body/injectables/ScalingConditionsService.html",[3,0.154,4,0.154,5,0.136,7,0.102,8,1.055,10,0.514,11,0.021,12,0.567,14,1.593,15,0.41,16,0.639,19,0.606,22,0.154,23,0.07,26,1.253,28,0.011,29,0.011,44,2.356,61,0.674,73,1.615,86,1.587,87,3.444,88,4.358,90,3.11,105,3.357,120,1.159,131,1.001,132,1.151,139,0.681,145,0.322,159,0.71,161,1.055,167,1.171,169,1.528,172,1.71,179,2.244,190,1.392,191,1.392,197,2.546,200,1.811,218,1.447,228,2.194,230,3.66,232,2.709,233,3.439,242,1.297,244,2.709,249,3.482,255,2.194,265,2.773,267,2.773,269,1.382,275,1.867,277,2.947,285,1.811,289,2.811,310,3.439,328,4.001,341,2.773,345,1.573,346,3.14,348,3.585,372,1.297,373,1.297,389,0.831,476,2.356,477,2.773,478,3.036,492,3.058,515,2.773,516,1.382,517,2.546,518,1.714,521,1.714,540,1.867,915,4.102,920,3.058,949,2.316,951,2.316,1048,2.773,1240,4.805,1251,2.316,1252,5.304,1253,4.018,1254,4.018,1255,5.304,1256,4.018,1257,2.706,1258,4.018,1259,4.018,1260,2.706,1261,4.018,1262,2.706,1263,4.018,1264,2.706,1265,2.706,1266,4.018,1267,2.706,1268,2.706,1269,2.706,1270,2.706,1271,4.792,1272,2.706,1273,2.706,1274,2.706,1275,2.706,1276,2.706,1277,2.706,1278,2.706,1279,4.018,1280,2.706,1281,4.018,1282,2.706,1283,2.706,1284,2.706,1285,4.018,1286,2.706,1287,2.706,1288,2.706,1289,2.706,1290,2.706,1291,2.706]],["title/classes/Set.html",[23,0.093,76,1.853]],["body/classes/Set.html",[3,0.222,4,0.222,5,0.196,7,0.147,10,1.334,11,0.021,12,0.647,15,0.463,16,0.629,22,0.333,23,0.1,28,0.014,29,0.014,61,0.97,64,2.803,76,2.986,77,2.688,120,1.05,122,2.089,137,1.135,139,0.881,145,0.403,146,3.153,155,1.657,156,2.211,159,1.022,161,1.022,177,4.035,333,3.193,345,1.456,368,1.514,564,4.449,565,4.035,581,4.449,611,4.035,639,3.872,669,2.964,671,2.964,694,4.449,1292,2.688,1293,3.895,1294,3.895,1295,3.895,1296,3.895,1297,3.895,1298,3.895,1299,3.895,1300,3.895,1301,3.895,1302,3.334]],["title/interfaces/ToNumberOptions.html",[436,1.739,1303,2.504]],["body/interfaces/ToNumberOptions.html",[3,0.212,4,0.212,5,0.187,7,0.14,11,0.021,15,0.436,16,0.615,22,0.384,26,1.558,28,0.014,29,0.014,139,0.855,145,0.325,191,1.732,209,2.274,285,1.271,347,2.416,366,2.033,368,2.068,379,2.183,380,3.479,389,1.965,426,3.351,436,1.785,438,2.359,474,2.359,516,3.369,528,3.351,600,3.479,781,5.133,859,2.833,1034,3.186,1035,3.186,1037,2.833,1038,2.833,1039,2.833,1048,2.569,1051,3.186,1096,5.646,1216,3.186,1303,3.944,1304,2.833,1305,6.399,1306,3.723,1307,3.186,1308,5.04,1309,3.186,1310,3.723,1311,3.186,1312,3.723,1313,3.186,1314,3.186,1315,6.399,1316,3.723,1317,3.723,1318,4.314,1319,3.723,1320,3.723,1321,3.723,1322,5.04,1323,4.314,1324,5.04,1325,5.04,1326,3.723,1327,3.723,1328,3.186]],["title/coverage.html",[1329,4.239]],["body/coverage.html",[0,1.458,1,1.804,5,0.132,6,2.238,11,0.021,20,1.533,23,0.18,28,0.011,29,0.011,36,1.533,37,1.428,38,1.533,39,1.428,40,1.533,41,1.428,42,1.428,43,1.336,44,1.533,50,1.804,51,1.804,52,1.804,53,1.804,54,1.804,55,1.804,56,1.804,57,1.657,58,1.804,64,1.254,65,2.481,68,1.804,70,1.657,71,1.804,73,1.051,74,1.657,76,1.336,77,1.804,88,2.703,90,1.533,91,1.657,95,2.481,99,2.754,100,1.657,101,1.804,104,2.703,106,2.481,109,1.428,110,1.657,112,1.533,113,1.804,131,1.621,133,2.238,138,2.703,145,0.149,163,2.981,164,3.304,183,1.428,202,1.533,204,1.533,205,1.533,209,1.18,227,3.241,254,1.49,281,1.336,285,0.893,328,1.657,329,3.304,342,1.804,351,1.657,352,3.304,375,1.804,379,1.533,380,2.703,381,2.238,426,1.533,427,2.238,436,2.678,437,1.657,439,3.304,441,1.533,443,2.703,458,2.703,459,2.238,475,2.238,560,2.238,575,2.238,600,5.161,607,2.703,625,1.657,626,2.238,639,2.848,640,2.238,655,2.238,693,2.238,720,2.238,781,5.095,789,2.975,791,2.703,872,3.304,887,1.804,890,2.238,901,2.238,1009,2.238,1024,1.99,1025,1.99,1026,1.99,1027,1.99,1028,1.99,1029,1.99,1030,1.99,1031,1.99,1046,2.238,1147,2.703,1165,1.804,1240,2.981,1241,2.238,1251,2.238,1292,2.703,1303,1.804,1304,4.954,1329,2.238,1330,2.615,1331,2.615,1332,2.615,1333,4.696,1334,6.392,1335,4.696,1336,2.615,1337,2.615,1338,4.696,1339,2.615,1340,2.615,1341,5.863,1342,4.696,1343,7.156,1344,2.615,1345,2.615,1346,3.916,1347,3.916,1348,4.696,1349,3.916,1350,3.916,1351,3.916,1352,6.609,1353,2.615,1354,2.615,1355,2.615,1356,2.238,1357,3.352,1358,3.916,1359,3.916,1360,2.615,1361,2.238,1362,2.238,1363,2.615,1364,2.615,1365,2.615,1366,2.615,1367,2.615,1368,2.615,1369,2.615,1370,2.615,1371,2.615,1372,2.615]],["title/dependencies.html",[33,3.012,1373,2.593]],["body/dependencies.html",[11,0.021,19,1.135,23,0.17,28,0.017,29,0.017,33,3.497,61,1.262,81,3.211,86,2.972,98,2.286,159,1.33,192,1.64,274,3.497,372,2.429,373,2.429,929,4.337,1022,4.337,1023,4.337,1374,5.067,1375,5.067,1376,6.612,1377,5.067,1378,5.067,1379,5.067,1380,5.067,1381,5.067,1382,5.067,1383,5.067,1384,5.067,1385,5.067,1386,5.067,1387,5.067,1388,5.067,1389,5.067,1390,5.067,1391,5.067,1392,5.067,1393,5.067,1394,5.067]],["title/miscellaneous/functions.html",[1395,1.777,1396,3.735]],["body/miscellaneous/functions.html",[7,0.145,11,0.02,14,1.634,15,0.466,28,0.014,29,0.014,120,1.282,145,0.406,190,1.873,191,1.873,204,3.024,205,3.024,209,1.737,211,3.409,221,2.44,255,2.816,366,2.103,368,1.122,379,2.258,389,2.173,426,2.258,474,2.44,493,5.07,516,1.967,1024,3.924,1025,3.924,1026,3.924,1027,3.924,1028,3.924,1029,3.924,1030,3.924,1031,3.924,1037,2.93,1038,2.93,1039,2.93,1040,3.296,1303,3.558,1304,2.93,1307,3.296,1309,3.296,1311,3.296,1313,3.296,1314,4.413,1323,3.296,1328,3.296,1356,4.413,1357,3.296,1361,3.296,1362,4.975,1395,2.258,1396,3.296,1397,3.85,1398,7.002,1399,5.156,1400,5.156,1401,5.156,1402,3.85,1403,3.85,1404,3.85,1405,3.85]],["title/index.html",[7,0.114,359,2.091,1406,3.029]],["body/index.html",[11,0.02,28,0.015,29,0.015,103,4.256,169,1.643,173,2.981,232,2.207,414,2.737,476,2.533,495,4.941,496,5.531,499,3.287,546,4.232,746,3.287,851,3.697,983,3.697,1159,3.287,1407,5.56,1408,6.149,1409,4.32,1410,4.32,1411,6.149,1412,5.56,1413,4.32,1414,4.32,1415,5.56,1416,6.149,1417,6.149,1418,6.995,1419,6.149,1420,6.493,1421,4.32,1422,4.32,1423,5.56,1424,5.56,1425,5.56,1426,6.718,1427,4.32,1428,4.32,1429,4.32,1430,4.32,1431,4.32,1432,4.32,1433,4.32,1434,4.32,1435,4.32,1436,6.149,1437,4.32,1438,4.32,1439,4.32,1440,5.56,1441,6.149,1442,6.149,1443,4.32,1444,4.32,1445,5.56,1446,4.32,1447,4.32,1448,4.32,1449,4.32,1450,5.56,1451,4.32,1452,4.32,1453,4.32]],["title/modules.html",[32,3.769]],["body/modules.html",[11,0.018,28,0.018,29,0.018,31,3.999,32,4.409,1454,5.794,1455,5.794,1456,5.794,1457,5.794]],["title/overview.html",[1458,4.239]],["body/overview.html",[2,1.917,11,0.02,20,3.775,28,0.016,29,0.016,30,3.629,31,5.233,33,4.085,34,4.081,35,4.081,36,3.775,37,3.515,38,3.775,39,3.515,40,3.775,41,3.515,42,3.515,43,3.288,44,3.775,45,5.066,46,4.081,47,4.081,132,2.029,137,1.39,438,3.021,528,2.796,940,3.629,1318,5.066,1458,4.081,1459,4.768]],["title/properties.html",[139,0.74,1373,2.593]],["body/properties.html",[11,0.02,28,0.018,29,0.018,139,0.969,167,1.665,1460,5.712,1461,5.712,1462,5.712,1463,5.712,1464,5.712]],["title/miscellaneous/typealiases.html",[1395,1.777,1465,4.364]],["body/miscellaneous/typealiases.html",[7,0.197,11,0.018,15,0.332,28,0.017,29,0.017,138,3.606,145,0.297,160,4.763,329,3.31,341,4.319,352,3.31,368,1.523,374,4.319,389,1.922,439,3.31,443,3.606,456,4.763,607,3.606,623,4.763,639,2.853,669,4.763,872,3.31,884,3.965,1147,3.606,1154,4.763,1292,3.606,1395,3.064,1466,5.225,1467,4.472,1468,4.472,1469,4.472,1470,4.472,1471,4.472,1472,4.472,1473,4.472,1474,4.472,1475,5.225]],["title/miscellaneous/variables.html",[1395,1.777,1476,3.735]],["body/miscellaneous/variables.html",[7,0.176,11,0.02,28,0.016,29,0.016,68,4.038,71,4.038,74,3.706,77,4.038,91,3.706,101,4.038,110,3.706,113,4.038,138,3.23,162,4.006,329,2.965,342,4.038,343,3.562,350,3.562,352,2.965,375,4.038,376,3.562,378,3.562,389,2.259,443,3.23,457,4.006,516,3.757,607,3.23,624,4.006,639,2.556,872,2.965,887,4.038,888,3.562,889,3.562,1147,3.23,1155,4.006,1292,3.23,1302,4.006,1395,2.745,1467,4.006,1468,4.006,1469,4.006,1470,5.007,1471,5.007,1472,4.006,1473,5.007,1474,4.006,1476,4.006]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":600,"title":{},"body":{"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1461,"title":{},"body":{"properties.html":{}}}],["0.0.3",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["0.17.1",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":528,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/PodMetricsService.html":{},"interfaces/ToNumberOptions.html":{},"overview.html":{}}}],["1.0.1",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1318,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"overview.html":{}}}],["100",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1216,"title":{},"body":{"injectables/PrometheusMetricsService.html":{},"interfaces/ToNumberOptions.html":{}}}],["15/18",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1459,"title":{},"body":{"overview.html":{}}}],["1m]))&start",{"_index":594,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["2.1.0",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["240000",{"_index":525,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["25",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["300000",{"_index":864,"title":{},"body":{"injectables/EventsService.html":{}}}],["33",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1108,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["5",{"_index":940,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"overview.html":{}}}],["5min",{"_index":233,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["6.0.11",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["81",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":330,"title":{},"body":{"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{}}}],["above",{"_index":854,"title":{},"body":{"injectables/EventsService.html":{}}}],["above)/g",{"_index":839,"title":{},"body":{"injectables/EventsService.html":{}}}],["actions",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["active",{"_index":506,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["adaption",{"_index":722,"title":{},"body":{"injectables/EventsService.html":{}}}],["add",{"_index":955,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{}}}],["addeventtolatestset",{"_index":656,"title":{},"body":{"injectables/EventSetService.html":{}}}],["addeventtolatestset(event",{"_index":661,"title":{},"body":{"injectables/EventSetService.html":{}}}],["aliases",{"_index":1466,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allclustermetrics",{"_index":217,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["allclustermetrics.slice(pagination.current",{"_index":222,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["allevents",{"_index":712,"title":{},"body":{"controllers/EventsController.html":{}}}],["allevents.slice(pagination.current",{"_index":714,"title":{},"body":{"controllers/EventsController.html":{}}}],["allhpa",{"_index":897,"title":{},"body":{"controllers/HpaController.html":{}}}],["allhpa.slice(pagination.current",{"_index":899,"title":{},"body":{"controllers/HpaController.html":{}}}],["allscalingconditions",{"_index":1246,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["allscalingconditions.slice(pagination.current",{"_index":1248,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["already",{"_index":919,"title":{},"body":{"injectables/HpaService.html":{}}}],["always",{"_index":986,"title":{},"body":{"injectables/HpaService.html":{}}}],["annotation",{"_index":936,"title":{},"body":{"injectables/HpaService.html":{}}}],["annotations",{"_index":985,"title":{},"body":{"injectables/HpaService.html":{}}}],["another",{"_index":982,"title":{},"body":{"injectables/HpaService.html":{}}}],["api",{"_index":169,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"index.html":{}}}],["api/v1/query?query",{"_index":304,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["api/v1/query_range?query",{"_index":1220,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["api/v1/query_range?query=sum(rate(container_cpu_usage_seconds_total{namespace",{"_index":593,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["apigateway",{"_index":303,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["app",{"_index":1448,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":498,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["applied",{"_index":760,"title":{},"body":{"injectables/EventsService.html":{}}}],["appmodule",{"_index":31,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":20,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":399,"title":{},"body":{"classes/CrudFilters.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"injectables/DerivativeService.html":{},"injectables/HpaService.html":{},"classes/Pagination.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{}}}],["array.isarray(result.data.data.result",{"_index":604,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["asc",{"_index":430,"title":{},"body":{"classes/CrudSorting.html":{}}}],["ascending",{"_index":431,"title":{},"body":{"classes/CrudSorting.html":{}}}],["async",{"_index":179,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["author",{"_index":1464,"title":{},"body":{"properties.html":{}}}],["available",{"_index":467,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["availablereplicas",{"_index":444,"title":{},"body":{"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{}}}],["averagevalue",{"_index":999,"title":{},"body":{"injectables/HpaService.html":{}}}],["await",{"_index":218,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["ba",{"_index":546,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"index.html":{}}}],["backend",{"_index":496,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"index.html":{}}}],["badrequestexception",{"_index":1164,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["badrequestexception(\"please",{"_index":1178,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["based",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["below",{"_index":851,"title":{},"body":{"injectables/EventsService.html":{},"index.html":{}}}],["below)/g",{"_index":841,"title":{},"body":{"injectables/EventsService.html":{}}}],["better",{"_index":786,"title":{},"body":{"injectables/EventsService.html":{}}}],["between",{"_index":258,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"classes/CrudFilters.html":{},"injectables/HpaService.html":{}}}],["blackbox",{"_index":547,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["blacklist",{"_index":494,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["blacklisted",{"_index":491,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["body",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["boolean",{"_index":366,"title":{},"body":{"classes/ContainerInformation.html":{},"injectables/DerivativeService.html":{},"injectables/EventsService.html":{},"classes/ListQueryDto.html":{},"classes/PodInformation.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1431,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1457,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1454,"title":{},"body":{"modules.html":{}}}],["c.type",{"_index":1287,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["calculatederivative",{"_index":562,"title":{},"body":{"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{}}}],["calculatederivative(@query('name')name",{"_index":569,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["calculatederivative(name",{"_index":563,"title":{},"body":{"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{}}}],["called",{"_index":782,"title":{},"body":{"injectables/EventsService.html":{}}}],["case",{"_index":405,"title":{},"body":{"classes/CrudFilters.html":{}}}],["catch",{"_index":324,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/EventsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["check",{"_index":308,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{}}}],["checks",{"_index":772,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["class",{"_index":23,"title":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"classes/Hpa.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/QueryDto.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":137,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"classes/Hpa.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/QueryDto.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{},"overview.html":{}}}],["clean",{"_index":979,"title":{},"body":{"injectables/HpaService.html":{}}}],["cleanjsonstring",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleanjsonstring(value",{"_index":1323,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["closest",{"_index":510,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["cluster",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["clustermetric",{"_index":70,"title":{"classes/ClusterMetric.html":{}},"body":{"modules/AppModule.html":{},"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"coverage.html":{}}}],["clustermetric.name",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["clustermetricdocument",{"_index":160,"title":{},"body":{"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"miscellaneous/typealiases.html":{}}}],["clustermetrics",{"_index":290,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.cpu",{"_index":296,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.createdat",{"_index":294,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.id",{"_index":292,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.memory",{"_index":298,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.podcount",{"_index":300,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetrics.save",{"_index":302,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetricschema",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/ClusterMetric.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clustermetricscontroller",{"_index":53,"title":{"controllers/ClusterMetricsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"coverage.html":{}}}],["clustermetricsmodel",{"_index":247,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["clustermetricsservice",{"_index":36,"title":{"injectables/ClusterMetricsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"coverage.html":{},"overview.html":{}}}],["collected",{"_index":171,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/ScalingConditionsController.html":{}}}],["collectedreplicasetnames",{"_index":1144,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["collectedreplicasetnames.push(replicaset.metadata.name",{"_index":1146,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["collection",{"_index":187,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["commands",{"_index":1423,"title":{},"body":{"index.html":{}}}],["component",{"_index":635,"title":{},"body":{"classes/EventDto.html":{},"injectables/EventsService.html":{}}}],["condig",{"_index":918,"title":{},"body":{"injectables/HpaService.html":{}}}],["condition",{"_index":328,"title":{"classes/Condition.html":{}},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["condition.type",{"_index":1288,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditionmodel",{"_index":1259,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions",{"_index":348,"title":{},"body":{"classes/Condition.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["conditions.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["conditions.controller.ts",{"_index":1241,"title":{},"body":{"controllers/ScalingConditionsController.html":{},"coverage.html":{}}}],["conditions.controller.ts:23",{"_index":1244,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["conditions.controller.ts:52",{"_index":1243,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["conditions.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/ScalingConditionsController.html":{}}}],["conditions.service.ts",{"_index":1251,"title":{},"body":{"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["conditions.service.ts:13",{"_index":1258,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions.service.ts:27",{"_index":1264,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions.service.ts:36",{"_index":1260,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions.service.ts:46",{"_index":1262,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions.service.ts:54",{"_index":1265,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions.service.ts:72",{"_index":1267,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["conditions/scaling",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["conditionschema",{"_index":342,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.yml",{"_index":1446,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":891,"title":{},"body":{"controllers/HpaController.html":{},"injectables/HpaService.html":{}}}],["configurations",{"_index":759,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{}}}],["configured",{"_index":1444,"title":{},"body":{"index.html":{}}}],["connects",{"_index":1430,"title":{},"body":{"index.html":{}}}],["console.log('isnotrelated",{"_index":821,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log('isrelated",{"_index":819,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log('oldreplicasetid",{"_index":816,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(error",{"_index":326,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["console.log(event.name",{"_index":687,"title":{},"body":{"injectables/EventSetService.html":{}}}],["console.log(eventdto",{"_index":794,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(prometheusquery",{"_index":596,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["console.log(set",{"_index":685,"title":{},"body":{"injectables/EventSetService.html":{}}}],["consolelogger",{"_index":268,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/EventsService.html":{}}}],["const",{"_index":161,"title":{},"body":{"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"injectables/PrometheusMetricsService.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{}}}],["constructor",{"_index":242,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["constructor(@injectmodel(clustermetric.name",{"_index":276,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["constructor(@injectmodel(deploymentinformation.name",{"_index":520,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["constructor(@injectmodel(event.name",{"_index":792,"title":{},"body":{"injectables/EventsService.html":{}}}],["constructor(@injectmodel(hpa.name",{"_index":945,"title":{},"body":{"injectables/HpaService.html":{}}}],["constructor(@injectmodel(podinformation.name",{"_index":1099,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["constructor(@injectmodel(prometheusmetric.name",{"_index":1199,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["constructor(@injectmodel(scalingcondition.name",{"_index":1269,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["constructor(@injectmodel(set.name",{"_index":672,"title":{},"body":{"injectables/EventSetService.html":{}}}],["constructor(clustermetricsmodel",{"_index":243,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["constructor(conditionmodel",{"_index":1257,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["constructor(deploymentinformationmodel",{"_index":484,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["constructor(eventmodel",{"_index":738,"title":{},"body":{"injectables/EventsService.html":{}}}],["constructor(hpamodel",{"_index":911,"title":{},"body":{"injectables/HpaService.html":{}}}],["constructor(httpservice",{"_index":579,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["constructor(podinformationmodel",{"_index":1079,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["constructor(private",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{}}}],["constructor(prommodel",{"_index":1186,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["constructor(setmodel",{"_index":658,"title":{},"body":{"injectables/EventSetService.html":{}}}],["contain",{"_index":403,"title":{},"body":{"classes/CrudFilters.html":{}}}],["container",{"_index":1061,"title":{},"body":{"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["containerid",{"_index":354,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["containerinfo",{"_index":1115,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerinformation",{"_index":351,"title":{"classes/ContainerInformation.html":{}},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"coverage.html":{}}}],["containerinformation.push(containerinfo",{"_index":1124,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerinformationschema",{"_index":375,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containerstatus",{"_index":1114,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.containerid",{"_index":1116,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.image",{"_index":1117,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.laststate",{"_index":1118,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.name",{"_index":1119,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.ready",{"_index":1120,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.restartcount",{"_index":1121,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.started",{"_index":1122,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatus.state",{"_index":1123,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["containerstatuses",{"_index":1112,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["contains",{"_index":401,"title":{},"body":{"classes/CrudFilters.html":{}}}],["containss",{"_index":404,"title":{},"body":{"classes/CrudFilters.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"controllers/ScalingConditionsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{}}}],["controller('cluster",{"_index":207,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["controller('deployment",{"_index":469,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["controller('derivative",{"_index":568,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["controller('events",{"_index":709,"title":{},"body":{"controllers/EventsController.html":{}}}],["controller('hpa",{"_index":896,"title":{},"body":{"controllers/HpaController.html":{}}}],["controller('pod",{"_index":1066,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["controller('prometheus",{"_index":1168,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["controller('scaling",{"_index":1245,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["controller('set",{"_index":649,"title":{},"body":{"controllers/EventSetController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"controllers/ScalingConditionsController.html":{},"overview.html":{}}}],["converts",{"_index":784,"title":{},"body":{"injectables/EventsService.html":{}}}],["count",{"_index":177,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/EventDto.html":{},"classes/Set.html":{}}}],["count(kube_pod_info",{"_index":178,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["coverage",{"_index":1329,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":140,"title":{},"body":{"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["cpuusage",{"_index":311,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["create",{"_index":1442,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":141,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/ScalingCondition.html":{}}}],["createsetandaddevent",{"_index":657,"title":{},"body":{"injectables/EventSetService.html":{}}}],["createsetandaddevent(event",{"_index":663,"title":{},"body":{"injectables/EventSetService.html":{}}}],["crud",{"_index":384,"title":{},"body":{"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"classes/ListQueryDto.html":{}}}],["crudfilters",{"_index":379,"title":{"classes/CrudFilters.html":{}},"body":{"classes/CrudFilters.html":{},"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["crudsorting",{"_index":426,"title":{"classes/CrudSorting.html":{}},"body":{"classes/CrudSorting.html":{},"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":1048,"title":{},"body":{"classes/Pagination.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{}}}],["currentdate",{"_index":865,"title":{},"body":{"injectables/EventsService.html":{}}}],["currentevent",{"_index":585,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["currently",{"_index":173,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"index.html":{}}}],["currentmetric",{"_index":994,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetric.external.metric.name",{"_index":996,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetric.external.target.averagevalue",{"_index":1002,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetric.external.target.type",{"_index":997,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetric.external.target.value",{"_index":1003,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetricname",{"_index":995,"title":{},"body":{"injectables/HpaService.html":{}}}],["currentmetrics",{"_index":873,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{}}}],["d",{"_index":847,"title":{},"body":{"injectables/EventsService.html":{}}}],["data",{"_index":437,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"coverage.html":{}}}],["database",{"_index":232,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"index.html":{}}}],["date",{"_index":474,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["date().toisostring",{"_index":295,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/PodMetricsService.html":{}}}],["date(end)).gettime",{"_index":1211,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(end).gettime",{"_index":1218,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(event.createdat",{"_index":866,"title":{},"body":{"injectables/EventsService.html":{}}}],["date(from",{"_index":286,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["date(lastsavedcondition.lasttransitiontime",{"_index":1291,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["date(latestevent.createdat",{"_index":868,"title":{},"body":{"injectables/EventsService.html":{}}}],["date(start)).gettime",{"_index":1210,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(start).gettime",{"_index":1215,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(time)).gettime",{"_index":1223,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(time).gettime",{"_index":1226,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["date(timestamp",{"_index":1072,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["date(to",{"_index":288,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["date(value",{"_index":1312,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"classes/Event.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{}}}],["default",{"_index":516,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{}}}],["delete",{"_index":199,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["delete('/:id",{"_index":701,"title":{},"body":{"controllers/EventsController.html":{}}}],["deleteall",{"_index":696,"title":{},"body":{"controllers/EventsController.html":{}}}],["deleteallevents",{"_index":724,"title":{},"body":{"injectables/EventsService.html":{}}}],["deleteallsets",{"_index":641,"title":{},"body":{"controllers/EventSetController.html":{},"injectables/EventSetService.html":{}}}],["deleteeventbyid",{"_index":725,"title":{},"body":{"injectables/EventsService.html":{}}}],["deleteeventbyid(id",{"_index":744,"title":{},"body":{"injectables/EventsService.html":{}}}],["deleteone",{"_index":697,"title":{},"body":{"controllers/EventsController.html":{}}}],["deleteone(@body",{"_index":715,"title":{},"body":{"controllers/EventsController.html":{}}}],["deleteone(event",{"_index":700,"title":{},"body":{"controllers/EventsController.html":{}}}],["deletes",{"_index":743,"title":{},"body":{"injectables/EventsService.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1436,"title":{},"body":{"index.html":{}}}],["deployed",{"_index":1432,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1439,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["deployment.body.metadata.labels",{"_index":1134,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["deployment.body.status",{"_index":555,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deployment.metadata.name",{"_index":532,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deployment.metadata.namespace",{"_index":534,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deployment.ymlrunning",{"_index":1447,"title":{},"body":{"index.html":{}}}],["deploymentallreadysaved",{"_index":903,"title":{},"body":{"injectables/HpaService.html":{}}}],["deploymentallreadysaved(hpaconfig",{"_index":914,"title":{},"body":{"injectables/HpaService.html":{}}}],["deploymentblacklist",{"_index":545,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["deploymentblacklist.includes(deployment.metadata.name",{"_index":551,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["deploymentinformation",{"_index":112,"title":{"classes/DeploymentInformation.html":{}},"body":{"modules/AppModule.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"coverage.html":{}}}],["deploymentinformation.availablereplicas",{"_index":536,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformation.conditions",{"_index":538,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformation.name",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["deploymentinformation.replicas",{"_index":535,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformation.unavailablereplicas",{"_index":537,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformationcontroller",{"_index":58,"title":{"controllers/DeploymentInformationController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeploymentInformationController.html":{},"coverage.html":{}}}],["deploymentinformationdocument",{"_index":456,"title":{},"body":{"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"miscellaneous/typealiases.html":{}}}],["deploymentinformationdocument.save",{"_index":539,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformationmodel",{"_index":486,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentinformationschema",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/DeploymentInformation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deploymentinformationservice",{"_index":37,"title":{"injectables/DeploymentInformationService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["deploymentlist",{"_index":542,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["deploymentlist.body.items",{"_index":544,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["deploymentname",{"_index":344,"title":{},"body":{"classes/Condition.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"injectables/PodMetricsService.html":{},"classes/ScalingCondition.html":{}}}],["deployments",{"_index":492,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["deployments.push(deployment",{"_index":552,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["deploymentstatus",{"_index":554,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentstatus.availablereplicas",{"_index":557,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentstatus.conditions",{"_index":559,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentstatus.replicas",{"_index":556,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentstatus.unavailablereplicas",{"_index":558,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["deploymentsunfiltered",{"_index":501,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["derivative",{"_index":561,"title":{},"body":{"controllers/DerivativeController.html":{},"injectables/EventsService.html":{}}}],["derivative.service",{"_index":567,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["derivative/derivative.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["derivative/derivative.service",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["derivativecontroller",{"_index":52,"title":{"controllers/DerivativeController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DerivativeController.html":{},"coverage.html":{}}}],["derivativeservice",{"_index":38,"title":{"injectables/DerivativeService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"coverage.html":{},"overview.html":{}}}],["desc",{"_index":432,"title":{},"body":{"classes/CrudSorting.html":{}}}],["descending",{"_index":433,"title":{},"body":{"classes/CrudSorting.html":{}}}],["descrimintate",{"_index":991,"title":{},"body":{"injectables/HpaService.html":{}}}],["description",{"_index":167,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/Pagination.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"properties.html":{}}}],["details",{"_index":627,"title":{},"body":{"classes/EventDto.html":{}}}],["development",{"_index":1415,"title":{},"body":{"index.html":{}}}],["difference",{"_index":869,"title":{},"body":{"injectables/EventsService.html":{}}}],["directly",{"_index":1437,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1425,"title":{},"body":{"index.html":{}}}],["displaying",{"_index":695,"title":{},"body":{"controllers/EventsController.html":{}}}],["document",{"_index":156,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}}}],["documentation",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["doesdeploymentexist",{"_index":1004,"title":{},"body":{"injectables/HpaService.html":{}}}],["dont",{"_index":990,"title":{},"body":{"injectables/HpaService.html":{}}}],["download",{"_index":1421,"title":{},"body":{"index.html":{}}}],["dto/result.dto",{"_index":592,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["end",{"_index":420,"title":{},"body":{"classes/CrudFilters.html":{},"injectables/DerivativeService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["endpoint",{"_index":185,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"classes/EventDto.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{}}}],["endpoints",{"_index":170,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/ScalingConditionsController.html":{}}}],["ends",{"_index":418,"title":{},"body":{"classes/CrudFilters.html":{}}}],["endswith",{"_index":417,"title":{},"body":{"classes/CrudFilters.html":{}}}],["endswiths",{"_index":421,"title":{},"body":{"classes/CrudFilters.html":{}}}],["endunix",{"_index":1217,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["eq",{"_index":391,"title":{},"body":{"classes/CrudFilters.html":{}}}],["equal",{"_index":392,"title":{},"body":{"classes/CrudFilters.html":{}}}],["error",{"_index":325,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/EventsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["error(\"query",{"_index":1230,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["error(\"start",{"_index":1212,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["error(\"time",{"_index":1224,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["event",{"_index":64,"title":{"classes/Event.html":{}},"body":{"modules/AppModule.html":{},"classes/Event.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Set.html":{},"coverage.html":{}}}],["event._id",{"_index":798,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.createdat",{"_index":677,"title":{},"body":{"injectables/EventSetService.html":{},"injectables/EventsService.html":{}}}],["event.message",{"_index":801,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.metrictype",{"_index":806,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.metricvalue",{"_index":810,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.metricvalue.push(await",{"_index":808,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.name",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{}}}],["event.namespace",{"_index":675,"title":{},"body":{"injectables/EventSetService.html":{},"injectables/EventsService.html":{}}}],["event.namespace).then(function",{"_index":858,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.oldreplicasetid",{"_index":814,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.reason",{"_index":681,"title":{},"body":{"injectables/EventSetService.html":{},"injectables/EventsService.html":{}}}],["event.replicasize",{"_index":804,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.save",{"_index":823,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.scalingtype",{"_index":683,"title":{},"body":{"injectables/EventSetService.html":{},"injectables/EventsService.html":{}}}],["eventdocument",{"_index":623,"title":{},"body":{"classes/Event.html":{},"injectables/EventsService.html":{},"miscellaneous/typealiases.html":{}}}],["eventdto",{"_index":625,"title":{"classes/EventDto.html":{}},"body":{"classes/EventDto.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"coverage.html":{}}}],["eventdto.details",{"_index":795,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventdto.details.message",{"_index":802,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventdto.details.name",{"_index":799,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventdto.details.namespace",{"_index":800,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventdto.details.reason",{"_index":796,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventmodel",{"_index":741,"title":{},"body":{"injectables/EventsService.html":{}}}],["events",{"_index":694,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Set.html":{}}}],["events.service",{"_index":708,"title":{},"body":{"controllers/EventsController.html":{}}}],["events/events.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["events/events.service",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["eventschema",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/Event.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventscontroller",{"_index":50,"title":{"controllers/EventsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventsController.html":{},"coverage.html":{}}}],["eventsetcontroller",{"_index":51,"title":{"controllers/EventSetController.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventSetController.html":{},"coverage.html":{}}}],["eventsetservice",{"_index":39,"title":{"injectables/EventSetService.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["eventsservice",{"_index":40,"title":{"injectables/EventsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["eventtype",{"_index":628,"title":{},"body":{"classes/EventDto.html":{}}}],["exec",{"_index":289,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/ScalingConditionsService.html":{}}}],["exists",{"_index":1007,"title":{},"body":{"injectables/HpaService.html":{}}}],["expa",{"_index":1407,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{}}}],["exporter",{"_index":548,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/PodMetricsService.html":{}}}],["express",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":353,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{}}}],["external",{"_index":856,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{}}}],["extractmetrictype",{"_index":726,"title":{},"body":{"injectables/EventsService.html":{}}}],["extractmetrictype(event",{"_index":747,"title":{},"body":{"injectables/EventsService.html":{}}}],["extractreplicasize",{"_index":727,"title":{},"body":{"injectables/EventsService.html":{}}}],["extractreplicasize(event",{"_index":750,"title":{},"body":{"injectables/EventsService.html":{}}}],["extracts",{"_index":749,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{}}}],["extractscalingtype",{"_index":728,"title":{},"body":{"injectables/EventsService.html":{}}}],["extractscalingtype(event",{"_index":752,"title":{},"body":{"injectables/EventsService.html":{}}}],["f",{"_index":1445,"title":{},"body":{"index.html":{}}}],["false",{"_index":859,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{},"interfaces/ToNumberOptions.html":{}}}],["field",{"_index":386,"title":{},"body":{"classes/CrudFilters.html":{},"classes/CrudSorting.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["filter",{"_index":383,"title":{},"body":{"classes/CrudFilters.html":{}}}],["filterdeployments",{"_index":479,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["filterdeployments(deploymentsunfiltered",{"_index":487,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["filterresult",{"_index":204,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterresult(filters",{"_index":221,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":211,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"controllers/ScalingConditionsController.html":{},"miscellaneous/functions.html":{}}}],["filters.dto",{"_index":1035,"title":{},"body":{"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{}}}],["filters.dto.ts",{"_index":381,"title":{},"body":{"classes/CrudFilters.html":{},"coverage.html":{}}}],["filters.dto.ts:37",{"_index":423,"title":{},"body":{"classes/CrudFilters.html":{}}}],["filters.dto.ts:38",{"_index":424,"title":{},"body":{"classes/CrudFilters.html":{}}}],["filters.dto.ts:62",{"_index":425,"title":{},"body":{"classes/CrudFilters.html":{}}}],["find",{"_index":1283,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["findbyidanddelete(id",{"_index":836,"title":{},"body":{"injectables/EventsService.html":{}}}],["firstevent",{"_index":564,"title":{},"body":{"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Set.html":{}}}],["following",{"_index":495,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"index.html":{}}}],["format",{"_index":787,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["found",{"_index":937,"title":{},"body":{"injectables/HpaService.html":{}}}],["framework",{"_index":1414,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":497,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["function",{"_index":781,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["functions",{"_index":1396,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":195,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["get('/:namespace/:deploymentname/:timestamp",{"_index":463,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"controllers/PodMetricsController.html":{}}}],["get('latest",{"_index":647,"title":{},"body":{"controllers/EventSetController.html":{}}}],["get(@param('id",{"_index":1249,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["get(uid",{"_index":1242,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["getallclustermetrics",{"_index":234,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getalldeploymentinformation",{"_index":480,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["getallevents",{"_index":729,"title":{},"body":{"injectables/EventsService.html":{}}}],["getallhpaconfigurations",{"_index":904,"title":{},"body":{"injectables/HpaService.html":{}}}],["getallmetricvalues",{"_index":730,"title":{},"body":{"injectables/EventsService.html":{}}}],["getallmetricvalues(name",{"_index":757,"title":{},"body":{"injectables/EventsService.html":{}}}],["getallscalingconditions",{"_index":1252,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["getallsets",{"_index":642,"title":{},"body":{"controllers/EventSetController.html":{},"injectables/EventSetService.html":{}}}],["getclustercpuusage",{"_index":235,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclustermemoryusage",{"_index":236,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclustermetricbyid",{"_index":237,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclustermetricbyid(id",{"_index":252,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclustermetricsbetween",{"_index":238,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclustermetricsbetween(from",{"_index":256,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getclusterpodcount",{"_index":239,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["getdeploymentinformation",{"_index":461,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{}}}],["getdeploymentinformation(@param('namespace",{"_index":470,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["getdeploymentinformation(namespace",{"_index":462,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{}}}],["getdeploymentinformationbytime",{"_index":481,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["getdeploymentinformationbytime(deploymentname",{"_index":508,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["getdeployments",{"_index":482,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["getdeployments(namespace",{"_index":512,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["geteventbyid",{"_index":731,"title":{},"body":{"injectables/EventsService.html":{}}}],["geteventbyid(id",{"_index":762,"title":{},"body":{"injectables/EventsService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethpaconfigurationbydeploymentname",{"_index":905,"title":{},"body":{"injectables/HpaService.html":{}}}],["gethpaconfigurationbydeploymentname(deploymentname",{"_index":922,"title":{},"body":{"injectables/HpaService.html":{}}}],["gethpaconfigurationbyuid",{"_index":906,"title":{},"body":{"injectables/HpaService.html":{}}}],["gethpaconfigurationbyuid(uid",{"_index":924,"title":{},"body":{"injectables/HpaService.html":{}}}],["gethpametricqueries",{"_index":1181,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["getlatestevent",{"_index":732,"title":{},"body":{"injectables/EventsService.html":{}}}],["getlatestevent(name",{"_index":764,"title":{},"body":{"injectables/EventsService.html":{}}}],["getlatestscaleoutevent",{"_index":733,"title":{},"body":{"injectables/EventsService.html":{}}}],["getlatestscaleoutevent(name",{"_index":767,"title":{},"body":{"injectables/EventsService.html":{}}}],["getlatestset",{"_index":643,"title":{},"body":{"controllers/EventSetController.html":{},"injectables/EventSetService.html":{}}}],["getlatestset(@query('name')name",{"_index":650,"title":{},"body":{"controllers/EventSetController.html":{}}}],["getlatestset(name",{"_index":646,"title":{},"body":{"controllers/EventSetController.html":{},"injectables/EventSetService.html":{}}}],["getlist",{"_index":180,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["getlist(@query",{"_index":212,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["getlist(query",{"_index":182,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["getmetrics",{"_index":576,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["getmetrics(name",{"_index":583,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["getone",{"_index":181,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{}}}],["getone(@param('id",{"_index":225,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{}}}],["getone(id",{"_index":194,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{}}}],["getone(uid",{"_index":893,"title":{},"body":{"controllers/HpaController.html":{}}}],["getpodcontainerinformation",{"_index":1062,"title":{},"body":{"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["getpodcontainerinformation(@param('namespace",{"_index":1067,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["getpodcontainerinformation(namespace",{"_index":1063,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["getpodcontainerinformation(pod",{"_index":1084,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getpodsfromreplicaset",{"_index":1074,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getpodsfromreplicaset(namespace",{"_index":1086,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getpodsindeployment",{"_index":1075,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getpodsindeployment(deploymentname",{"_index":1089,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getprometheusmetricsfromto",{"_index":1156,"title":{},"body":{"controllers/PrometheusMetricsController.html":{}}}],["getprometheusmetricsfromto(@query",{"_index":1170,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["getprometheusmetricsfromto(query",{"_index":1157,"title":{},"body":{"controllers/PrometheusMetricsController.html":{}}}],["getpromql",{"_index":577,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["getpromql(metrictype",{"_index":588,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["getreplicasetofdeployment",{"_index":1076,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getreplicasetofdeployment(deploymentname",{"_index":1091,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getsavedpodinformation",{"_index":1077,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getsavedpodinformation(podname",{"_index":1093,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["getscalingconditionbyuid",{"_index":1253,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["getscalingconditionbyuid(uid",{"_index":1261,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["getscalingconditions",{"_index":1254,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["getscalingconditions(name",{"_index":1263,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["getting",{"_index":1406,"title":{"index.html":{}},"body":{}}],["given",{"_index":255,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/ScalingConditionsService.html":{},"miscellaneous/functions.html":{}}}],["grafana",{"_index":500,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["greater",{"_index":397,"title":{},"body":{"classes/CrudFilters.html":{}}}],["gt",{"_index":396,"title":{},"body":{"classes/CrudFilters.html":{}}}],["gte",{"_index":284,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"classes/CrudFilters.html":{}}}],["handeling",{"_index":168,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{}}}],["haspagination",{"_index":208,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"controllers/ScalingConditionsController.html":{}}}],["haspromql",{"_index":578,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["haspromql(metrictype",{"_index":590,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["hello",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["helper/cast.helper",{"_index":1032,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["here",{"_index":1422,"title":{},"body":{"index.html":{}}}],["host",{"_index":636,"title":{},"body":{"classes/EventDto.html":{}}}],["hpa",{"_index":73,"title":{"classes/Hpa.html":{}},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["hpa.createdat",{"_index":969,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.currentmetrics.map((metric",{"_index":1207,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["hpa.currentmetrics.push",{"_index":1000,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.deploymentname",{"_index":967,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.maxreplicas",{"_index":971,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.minreplicas",{"_index":973,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.name",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["hpa.namespace",{"_index":965,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.save",{"_index":976,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa.service",{"_index":895,"title":{},"body":{"controllers/HpaController.html":{}}}],["hpa.uid",{"_index":963,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpa/hpa.controller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["hpa/hpa.service",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["hpaconfig",{"_index":829,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{}}}],["hpaconfig.metadata.creationtimestamp.toisostring",{"_index":970,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.metadata.name",{"_index":968,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.metadata.namespace",{"_index":966,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.metadata.uid",{"_index":964,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.spec.maxreplicas",{"_index":972,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.spec.metrics",{"_index":954,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfig.spec.minreplicas",{"_index":974,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpaconfigs",{"_index":826,"title":{},"body":{"injectables/EventsService.html":{}}}],["hpaconfigs.currentmetrics",{"_index":830,"title":{},"body":{"injectables/EventsService.html":{}}}],["hpaconfigurations",{"_index":932,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpacontroller",{"_index":54,"title":{"controllers/HpaController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HpaController.html":{},"coverage.html":{}}}],["hpadocument",{"_index":884,"title":{},"body":{"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"injectables/PrometheusMetricsService.html":{},"miscellaneous/typealiases.html":{}}}],["hpalist",{"_index":950,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpalist.body.items",{"_index":952,"title":{},"body":{"injectables/HpaService.html":{}}}],["hpametricqueries",{"_index":1201,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["hpametricqueries.includes(query",{"_index":1203,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["hpamodel",{"_index":913,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["hpaschema",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hpaservice",{"_index":41,"title":{"injectables/HpaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"coverage.html":{},"overview.html":{}}}],["http://prometheus",{"_index":316,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["httpmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["httpservice",{"_index":245,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["id",{"_index":142,"title":{},"body":{"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["identifier",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["if(latestevent",{"_index":813,"title":{},"body":{"injectables/EventsService.html":{}}}],["if(query.metricquery",{"_index":1171,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["image",{"_index":355,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["implementation",{"_index":980,"title":{},"body":{"injectables/HpaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{}}}],["import(\"mongoose\").document",{"_index":977,"title":{},"body":{"injectables/HpaService.html":{}}}],["import(\"mongoose\").types.objectid",{"_index":978,"title":{},"body":{"injectables/HpaService.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["included",{"_index":398,"title":{},"body":{"classes/CrudFilters.html":{}}}],["includes",{"_index":465,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{}}}],["incoming",{"_index":785,"title":{},"body":{"injectables/EventsService.html":{}}}],["indeed",{"_index":309,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{}}}],["information",{"_index":460,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["information.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["information.controller.ts",{"_index":459,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"coverage.html":{}}}],["information.controller.ts:22",{"_index":464,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["information.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/DeploymentInformationController.html":{},"injectables/EventsService.html":{}}}],["information.service.ts",{"_index":475,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"coverage.html":{}}}],["information.service.ts:112",{"_index":503,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:12",{"_index":485,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:24",{"_index":502,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:35",{"_index":509,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:51",{"_index":514,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:78",{"_index":513,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information.service.ts:93",{"_index":489,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["information/deployment",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"coverage.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AppService.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":269,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["injectmodel(hpa.name",{"_index":1200,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["install",{"_index":1427,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1420,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1435,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1438,"title":{},"body":{"index.html":{}}}],["interface",{"_index":436,"title":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"interfaces/ToNumberOptions.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":438,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"interfaces/ToNumberOptions.html":{},"overview.html":{}}}],["interval",{"_index":275,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["interval(300000",{"_index":265,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["isboolean",{"_index":1018,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["isdate",{"_index":1019,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["ishpametricquery",{"_index":1182,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["ishpametricquery(query",{"_index":1189,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["isnumber",{"_index":1020,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["isnumberstring",{"_index":1021,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["isoptional",{"_index":1012,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["isoptional()@isboolean",{"_index":1014,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["isrelated",{"_index":734,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelated(event",{"_index":770,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbyderivative",{"_index":735,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbyderivative(event",{"_index":774,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbyscalingtype",{"_index":736,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbyscalingtype(event",{"_index":776,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbytime",{"_index":737,"title":{},"body":{"injectables/EventsService.html":{}}}],["isrelatedbytime(event",{"_index":778,"title":{},"body":{"injectables/EventsService.html":{}}}],["item",{"_index":198,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/Pagination.html":{},"controllers/ScalingConditionsController.html":{}}}],["items",{"_index":188,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/Pagination.html":{},"controllers/ScalingConditionsController.html":{}}}],["join",{"_index":1139,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["json",{"_index":638,"title":{},"body":{"classes/EventDto.html":{}}}],["json.parse(value",{"_index":1325,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["jsonobj",{"_index":1324,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["k8s",{"_index":518,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["k8s.kubeconfig",{"_index":517,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["k8s.v1deployment",{"_index":488,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["k8s.v2beta2horizontalpodautoscaler",{"_index":915,"title":{},"body":{"injectables/HpaService.html":{},"injectables/ScalingConditionsService.html":{}}}],["k8s.v2beta2metricspec",{"_index":927,"title":{},"body":{"injectables/HpaService.html":{}}}],["k8sapi",{"_index":540,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["k8sapi.listhorizontalpodautoscalerforallnamespaces",{"_index":951,"title":{},"body":{"injectables/HpaService.html":{},"injectables/ScalingConditionsService.html":{}}}],["k8sapi.listnamespaceddeployment(namespace",{"_index":543,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["k8sapi.listnamespacedpod(namespace",{"_index":1129,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["k8sapi.listnamespacedreplicaset(namespace",{"_index":1141,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["k8sapi.readnamespaceddeployment(deploymentname",{"_index":553,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["key",{"_index":938,"title":{},"body":{"injectables/HpaService.html":{}}}],["key.includes('query",{"_index":993,"title":{},"body":{"injectables/HpaService.html":{}}}],["key.includes(currentmetricname",{"_index":998,"title":{},"body":{"injectables/HpaService.html":{}}}],["key}=${labels[key",{"_index":1138,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["kind",{"_index":634,"title":{},"body":{"classes/EventDto.html":{}}}],["kube",{"_index":317,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["kubectl",{"_index":1441,"title":{},"body":{"index.html":{}}}],["kubernetes",{"_index":476,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"index.html":{}}}],["kubernetes/client",{"_index":372,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"dependencies.html":{}}}],["kubernetesconfig",{"_index":478,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["labels",{"_index":637,"title":{},"body":{"classes/EventDto.html":{},"injectables/PodMetricsService.html":{}}}],["labelselector",{"_index":1135,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["last",{"_index":310,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["lastevent",{"_index":565,"title":{},"body":{"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"classes/Set.html":{}}}],["lastsavedcondition",{"_index":1285,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["lastsavedscalingcondition",{"_index":1281,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["lastsavedscalingcondition.conditions.find((c",{"_index":1286,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["laststate",{"_index":356,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["lasttransitiontime",{"_index":331,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{}}}],["lastvaluefrom",{"_index":273,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["lastvaluefrom(this.getmetrics(name",{"_index":603,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["lastvaluefrom(this.httpservice.get(prometheusurl",{"_index":320,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["lastvaluefrom(this.httpservice.get(url).pipe",{"_index":1221,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["latest",{"_index":766,"title":{},"body":{"injectables/EventsService.html":{}}}],["latestdate",{"_index":867,"title":{},"body":{"injectables/EventsService.html":{}}}],["latestdate.gettime",{"_index":871,"title":{},"body":{"injectables/EventsService.html":{}}}],["latestevent",{"_index":584,"title":{},"body":{"injectables/DerivativeService.html":{},"injectables/EventsService.html":{}}}],["latestevent._id",{"_index":815,"title":{},"body":{"injectables/EventsService.html":{}}}],["less",{"_index":395,"title":{},"body":{"classes/CrudFilters.html":{}}}],["license",{"_index":1462,"title":{},"body":{"properties.html":{}}}],["limit(1",{"_index":1110,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["list",{"_index":493,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"miscellaneous/functions.html":{}}}],["listquerydto",{"_index":183,"title":{"classes/ListQueryDto.html":{}},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{}}}],["literal",{"_index":262,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"classes/EventDto.html":{}}}],["locally",{"_index":1417,"title":{},"body":{"index.html":{}}}],["lt",{"_index":394,"title":{},"body":{"classes/CrudFilters.html":{}}}],["lte",{"_index":287,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"classes/CrudFilters.html":{},"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["map",{"_index":271,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["map(key",{"_index":1137,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["map(response",{"_index":322,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["match",{"_index":987,"title":{},"body":{"injectables/HpaService.html":{}}}],["matching",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currentdate.gettime",{"_index":870,"title":{},"body":{"injectables/EventsService.html":{}}}],["max",{"_index":1305,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["maxreplicas",{"_index":874,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{}}}],["maybe",{"_index":989,"title":{},"body":{"injectables/HpaService.html":{}}}],["memory",{"_index":143,"title":{},"body":{"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["memoryusage",{"_index":313,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["message",{"_index":332,"title":{},"body":{"classes/Condition.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"classes/ScalingCondition.html":{}}}],["metadata",{"_index":929,"title":{},"body":{"injectables/HpaService.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["metric",{"_index":254,"title":{"classes/Metric.html":{}},"body":{"injectables/ClusterMetricsService.html":{},"interfaces/Data.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"coverage.html":{}}}],["metric.type",{"_index":959,"title":{},"body":{"injectables/HpaService.html":{}}}],["metricname",{"_index":885,"title":{},"body":{"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PrometheusMetric.html":{}}}],["metricquery",{"_index":1166,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["metrics",{"_index":166,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["metrics.controller",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["metrics.controller.ts",{"_index":164,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["metrics.controller.ts:19",{"_index":1064,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["metrics.controller.ts:27",{"_index":1158,"title":{},"body":{"controllers/PrometheusMetricsController.html":{}}}],["metrics.controller.ts:31",{"_index":184,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["metrics.controller.ts:5",{"_index":1232,"title":{},"body":{"classes/QueryDto.html":{}}}],["metrics.controller.ts:6",{"_index":1233,"title":{},"body":{"classes/QueryDto.html":{}}}],["metrics.controller.ts:62",{"_index":196,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["metrics.controller.ts:7",{"_index":1231,"title":{},"body":{"classes/QueryDto.html":{}}}],["metrics.controller.ts:8",{"_index":1234,"title":{},"body":{"classes/QueryDto.html":{}}}],["metrics.service",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/EventsService.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["metrics.service.ts",{"_index":227,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"coverage.html":{}}}],["metrics.service.ts:111",{"_index":263,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:119",{"_index":1083,"title":{},"body":{"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:13",{"_index":1080,"title":{},"body":{"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:132",{"_index":1090,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:141",{"_index":1196,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:145",{"_index":1088,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:15",{"_index":246,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:165",{"_index":1092,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:24",{"_index":1095,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:25",{"_index":248,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:34",{"_index":253,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:35",{"_index":1188,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:45",{"_index":257,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:54",{"_index":266,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:57",{"_index":1194,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:58",{"_index":1082,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:68",{"_index":250,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:76",{"_index":1094,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["metrics.service.ts:84",{"_index":251,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics.service.ts:91",{"_index":1085,"title":{},"body":{"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["metrics.service.ts:97",{"_index":260,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["metrics/cluster",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"coverage.html":{}}}],["metrics/pod",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"coverage.html":{}}}],["metrics/prometheus",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["metricschema",{"_index":887,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metrictype",{"_index":581,"title":{},"body":{"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/Set.html":{}}}],["metricvalue",{"_index":608,"title":{},"body":{"classes/Event.html":{},"injectables/EventsService.html":{}}}],["metricvalues",{"_index":828,"title":{},"body":{"injectables/EventsService.html":{}}}],["metricvalues.push(metricvalue",{"_index":832,"title":{},"body":{"injectables/EventsService.html":{}}}],["min",{"_index":1096,"title":{},"body":{"injectables/PodMetricsService.html":{},"interfaces/ToNumberOptions.html":{}}}],["minikube",{"_index":1443,"title":{},"body":{"index.html":{}}}],["minreplicas",{"_index":875,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{}}}],["minutes",{"_index":941,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{}}}],["miscellaneous",{"_index":1395,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1450,"title":{},"body":{"index.html":{}}}],["model",{"_index":244,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["module",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":32,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["mongo",{"_index":549,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["mongodb",{"_index":499,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"index.html":{}}}],["mongodb.default.svc.cluster.local:27017/events",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb://mongo",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":159,"title":{},"body":{"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"injectables/PrometheusMetricsService.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forfeature",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot('mongodb://mongo",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["mongooseschema",{"_index":157,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{}}}],["mongooseschema.types.objectid",{"_index":149,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{}}}],["more",{"_index":956,"title":{},"body":{"injectables/HpaService.html":{}}}],["name",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":345,"title":{},"body":{"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{}}}],["namespace}).sort",{"_index":690,"title":{},"body":{"injectables/EventSetService.html":{}}}],["namspace",{"_index":1097,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["nan",{"_index":848,"title":{},"body":{"injectables/EventsService.html":{}}}],["nbetween",{"_index":408,"title":{},"body":{"classes/CrudFilters.html":{}}}],["ncontains",{"_index":402,"title":{},"body":{"classes/CrudFilters.html":{}}}],["ncontainss",{"_index":407,"title":{},"body":{"classes/CrudFilters.html":{}}}],["ne",{"_index":393,"title":{},"body":{"classes/CrudFilters.html":{}}}],["need",{"_index":1419,"title":{},"body":{"index.html":{}}}],["negativegradient",{"_index":599,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["nendswith",{"_index":419,"title":{},"body":{"classes/CrudFilters.html":{}}}],["nendswiths",{"_index":422,"title":{},"body":{"classes/CrudFilters.html":{}}}],["nestjs",{"_index":1413,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"injectables/PrometheusMetricsService.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"dependencies.html":{}}}],["new",{"_index":285,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["newvalue",{"_index":1315,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["nin",{"_index":400,"title":{},"body":{"classes/CrudFilters.html":{}}}],["nnull",{"_index":410,"title":{},"body":{"classes/CrudFilters.html":{}}}],["node",{"_index":373,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{},"dependencies.html":{}}}],["node.js",{"_index":1411,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1426,"title":{},"body":{"index.html":{}}}],["nstartswith",{"_index":413,"title":{},"body":{"classes/CrudFilters.html":{}}}],["nstartswiths",{"_index":416,"title":{},"body":{"classes/CrudFilters.html":{}}}],["null",{"_index":409,"title":{},"body":{"classes/CrudFilters.html":{},"injectables/EventsService.html":{}}}],["number",{"_index":368,"title":{},"body":{"classes/ContainerInformation.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number.isnan(newvalue",{"_index":1319,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["number.parseint(value",{"_index":1316,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["object.entries(hpaconfig.metadata.annotations",{"_index":992,"title":{},"body":{"injectables/HpaService.html":{}}}],["object.keys(labels",{"_index":1136,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["objects",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":587,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["older",{"_index":1289,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["oldreplicasetid",{"_index":609,"title":{},"body":{"classes/Event.html":{}}}],["one",{"_index":746,"title":{},"body":{"injectables/EventsService.html":{},"injectables/HpaService.html":{},"index.html":{}}}],["operation",{"_index":385,"title":{},"body":{"classes/CrudFilters.html":{},"classes/CrudSorting.html":{}}}],["operator",{"_index":387,"title":{},"body":{"classes/CrudFilters.html":{},"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["operators",{"_index":390,"title":{},"body":{"classes/CrudFilters.html":{}}}],["optional",{"_index":191,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["opts",{"_index":1314,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["opts.default",{"_index":1320,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["opts.max",{"_index":1322,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["opts.min",{"_index":1321,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["order",{"_index":428,"title":{},"body":{"classes/CrudSorting.html":{}}}],["orders",{"_index":429,"title":{},"body":{"classes/CrudSorting.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":1458,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1373,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1053,"title":{},"body":{"classes/Pagination.html":{}}}],["pagesize",{"_index":1051,"title":{},"body":{"classes/Pagination.html":{},"interfaces/ToNumberOptions.html":{}}}],["paginate",{"_index":1047,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination",{"_index":209,"title":{"classes/Pagination.html":{}},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"classes/Pagination.html":{},"controllers/ScalingConditionsController.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagination.current",{"_index":223,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["pagination.dto",{"_index":1033,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["pagination.pagesize",{"_index":224,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["param",{"_index":200,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["param('deploymentname",{"_index":471,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"controllers/PodMetricsController.html":{}}}],["param('id",{"_index":716,"title":{},"body":{"controllers/EventsController.html":{}}}],["param('timestamp",{"_index":472,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"controllers/PodMetricsController.html":{}}}],["parameters",{"_index":190,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"miscellaneous/functions.html":{}}}],["parseint(event.message.match(regexreplicasize).pop",{"_index":849,"title":{},"body":{"injectables/EventsService.html":{}}}],["patch",{"_index":201,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["per",{"_index":1052,"title":{},"body":{"classes/Pagination.html":{}}}],["pod",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["pod.metadata.name",{"_index":1105,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["pod.metadata.namespace",{"_index":1106,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["pod.status.containerstatuses",{"_index":1113,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podcount",{"_index":144,"title":{},"body":{"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{}}}],["podinformation",{"_index":109,"title":{"classes/PodInformation.html":{}},"body":{"modules/AppModule.html":{},"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"coverage.html":{}}}],["podinformation.name",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["podinformation.save",{"_index":1107,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podinformation[0",{"_index":1111,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podinformationdocument",{"_index":374,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"miscellaneous/typealiases.html":{}}}],["podinformationmodel",{"_index":1081,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podinformationschema",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["podlist",{"_index":1068,"title":{},"body":{"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["podlist.body.items",{"_index":1131,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podlist.push(pod",{"_index":1102,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podmetrics",{"_index":1070,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["podmetrics.push(podinformation.containerinformation",{"_index":1073,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["podmetricscontroller",{"_index":56,"title":{"controllers/PodMetricsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PodMetricsController.html":{},"coverage.html":{}}}],["podmetricsservice",{"_index":42,"title":{"injectables/PodMetricsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"coverage.html":{},"overview.html":{}}}],["podname",{"_index":377,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["pods",{"_index":1065,"title":{},"body":{"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{}}}],["podsindeployment",{"_index":1130,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["podsindeployment.push(pod",{"_index":1133,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["position",{"_index":1050,"title":{},"body":{"classes/Pagination.html":{}}}],["positivegradient",{"_index":601,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["positivepercentage",{"_index":602,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["post",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["prefix",{"_index":165,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/DerivativeController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"controllers/ScalingConditionsController.html":{}}}],["private",{"_index":277,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["process.env.prometheus_url",{"_index":315,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["production",{"_index":1452,"title":{},"body":{"index.html":{}}}],["project",{"_index":1408,"title":{},"body":{"index.html":{}}}],["promehteus",{"_index":1159,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"index.html":{}}}],["promehtheus",{"_index":958,"title":{},"body":{"injectables/HpaService.html":{}}}],["prometheus",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"dependencies.html":{}}}],["prometheus.default.svc.cluster.local",{"_index":598,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["prometheus:9090",{"_index":318,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["prometheusmetric",{"_index":100,"title":{"classes/PrometheusMetric.html":{}},"body":{"modules/AppModule.html":{},"classes/PrometheusMetric.html":{},"injectables/PrometheusMetricsService.html":{},"coverage.html":{}}}],["prometheusmetric.name",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["prometheusmetricdocument",{"_index":1154,"title":{},"body":{"classes/PrometheusMetric.html":{},"injectables/PrometheusMetricsService.html":{},"miscellaneous/typealiases.html":{}}}],["prometheusmetricschema",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/PrometheusMetric.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prometheusmetricscontroller",{"_index":57,"title":{"controllers/PrometheusMetricsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["prometheusmetricsservice",{"_index":43,"title":{"injectables/PrometheusMetricsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"coverage.html":{},"overview.html":{}}}],["prometheusquery",{"_index":305,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{}}}],["prometheusservice",{"_index":739,"title":{},"body":{"injectables/EventsService.html":{}}}],["prometheusurl",{"_index":314,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["promise",{"_index":249,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/EventsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"injectables/ScalingConditionsService.html":{}}}],["prommodel",{"_index":1187,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["prop",{"_index":146,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}}}],["prop({_id",{"_index":877,"title":{},"body":{"classes/Hpa.html":{},"classes/PodInformation.html":{},"classes/ScalingCondition.html":{}}}],["prop({type",{"_index":150,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{}}}],["properly",{"_index":1429,"title":{},"body":{"index.html":{}}}],["properties",{"_index":139,"title":{"properties.html":{}},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"properties.html":{}}}],["provide",{"_index":1179,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":1010,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["queriedat",{"_index":1148,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["queries",{"_index":264,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["query",{"_index":192,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DerivativeController.html":{},"controllers/EventSetController.html":{},"controllers/EventsController.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"dependencies.html":{}}}],["query('firstevent')firstevent",{"_index":571,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["query('lastevent')lastevent",{"_index":572,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["query('namespace",{"_index":651,"title":{},"body":{"controllers/EventSetController.html":{}}}],["query('namespace')namespace",{"_index":570,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["query).pipe",{"_index":321,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["query.dto",{"_index":203,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["query.dto.ts",{"_index":1009,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:12",{"_index":1015,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["query.dto.ts:16",{"_index":1016,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["query.dto.ts:20",{"_index":1017,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["query.dto.ts:24",{"_index":1013,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["query.end",{"_index":1173,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["query.filters",{"_index":216,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["query.haspagination",{"_index":213,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["query.pagination",{"_index":214,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["query.replace(/\\\\/g",{"_index":1228,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["query.sort",{"_index":215,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["query.start",{"_index":1172,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["query.step",{"_index":1174,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["querydto",{"_index":1165,"title":{"classes/QueryDto.html":{}},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["querying",{"_index":1180,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["queryprometheus",{"_index":240,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["queryprometheus(query",{"_index":1191,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["queryprometheus(undefined",{"_index":261,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["queryprometheustime",{"_index":1183,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["queryprometheustime(query",{"_index":1192,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["queryprometheustimerange",{"_index":1184,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["queryprometheustimerange(query",{"_index":1193,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["querys",{"_index":935,"title":{},"body":{"injectables/HpaService.html":{}}}],["range",{"_index":1162,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["readonly",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/ClusterMetricsController.html":{},"controllers/DeploymentInformationController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/PodMetricsController.html":{},"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{}}}],["ready",{"_index":357,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["reason",{"_index":333,"title":{},"body":{"classes/Condition.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}}}],["received",{"_index":783,"title":{},"body":{"injectables/EventsService.html":{}}}],["receivenewadaptionevent",{"_index":698,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["receivenewadaptionevent(@body",{"_index":710,"title":{},"body":{"controllers/EventsController.html":{}}}],["receivenewadaptionevent(eventdto",{"_index":705,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["receives",{"_index":723,"title":{},"body":{"injectables/EventsService.html":{}}}],["receiving",{"_index":721,"title":{},"body":{"injectables/EventsService.html":{}}}],["recieve",{"_index":707,"title":{},"body":{"controllers/EventsController.html":{}}}],["recommended",{"_index":1434,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":755,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexexternalmetric",{"_index":855,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexmetrictype",{"_index":853,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexmetrictypeexternalmetric",{"_index":857,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexmetrictypescalein",{"_index":850,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexreplicasize",{"_index":846,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexscalein",{"_index":840,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexscalein.test(event.message",{"_index":843,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexscaleout",{"_index":838,"title":{},"body":{"injectables/EventsService.html":{}}}],["regexscaleout.test(event.message",{"_index":842,"title":{},"body":{"injectables/EventsService.html":{}}}],["regularly",{"_index":267,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["related",{"_index":773,"title":{},"body":{"injectables/EventsService.html":{}}}],["relates",{"_index":1049,"title":{},"body":{"classes/Pagination.html":{}}}],["relationtime",{"_index":863,"title":{},"body":{"injectables/EventsService.html":{}}}],["removes",{"_index":490,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["replica",{"_index":504,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/PodMetricsService.html":{}}}],["replicas",{"_index":445,"title":{},"body":{"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{}}}],["replicaset",{"_index":1145,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasetlist",{"_index":1140,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasetlist.body.items",{"_index":1143,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasetname",{"_index":1125,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasetnames",{"_index":1087,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasetnames.includes(pod.metadata.ownerreferences[0].name",{"_index":1132,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasets",{"_index":1142,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["replicasize",{"_index":610,"title":{},"body":{"classes/Event.html":{},"injectables/EventsService.html":{}}}],["requested",{"_index":1190,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["res.body.items",{"_index":1275,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolution",{"_index":1163,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["resource",{"_index":189,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["response.data",{"_index":323,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["rest",{"_index":1409,"title":{},"body":{"index.html":{}}}],["restartcount",{"_index":358,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["result",{"_index":281,"title":{"interfaces/Result.html":{}},"body":{"injectables/ClusterMetricsService.html":{},"interfaces/Data.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"coverage.html":{}}}],["result.data.data.result.length",{"_index":605,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["result.data.data.result.pop().values",{"_index":606,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["result.data.result",{"_index":327,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["result.data.result.pop().value",{"_index":1227,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["result.data.result.pop().values",{"_index":1222,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["result.map((hpa",{"_index":1206,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["result.pop().value[1",{"_index":312,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["resultdto",{"_index":441,"title":{"interfaces/ResultDto.html":{}},"body":{"interfaces/Data.html":{},"injectables/DerivativeService.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"coverage.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":440,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{}}}],["retrieve",{"_index":186,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/Pagination.html":{},"controllers/ScalingConditionsController.html":{}}}],["retrievemetrics",{"_index":241,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["retrieves",{"_index":230,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["retrievescalingconditions",{"_index":1255,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["retrieving",{"_index":228,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["return",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":1424,"title":{},"body":{"index.html":{}}}],["rule",{"_index":1160,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["run",{"_index":1418,"title":{},"body":{"index.html":{}}}],["running",{"_index":1416,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":274,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/PrometheusMetricsService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":272,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["same",{"_index":1284,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["sanitizer",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1290,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["saved",{"_index":920,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["savedeploymentinformation",{"_index":483,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["savedhpaconfigurations",{"_index":902,"title":{},"body":{"injectables/HpaService.html":{}}}],["saveexternalhpametadata",{"_index":907,"title":{},"body":{"injectables/HpaService.html":{}}}],["saveexternalhpametadata(metric",{"_index":926,"title":{},"body":{"injectables/HpaService.html":{}}}],["savehpametadata",{"_index":908,"title":{},"body":{"injectables/HpaService.html":{}}}],["savehpametadata(hpaconfigurations",{"_index":930,"title":{},"body":{"injectables/HpaService.html":{}}}],["savepodinformation",{"_index":1078,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["saveprometheusqueryinformation",{"_index":909,"title":{},"body":{"injectables/HpaService.html":{}}}],["saveprometheusqueryinformation(hpaconfig",{"_index":933,"title":{},"body":{"injectables/HpaService.html":{}}}],["saves",{"_index":515,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["savescalingconditions",{"_index":1256,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["savescalingconditions(scalingcondition",{"_index":1266,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["saving",{"_index":477,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["scaled",{"_index":761,"title":{},"body":{"injectables/EventsService.html":{}}}],["scalein",{"_index":844,"title":{},"body":{"injectables/EventsService.html":{}}}],["scaleout",{"_index":769,"title":{},"body":{"injectables/EventsService.html":{}}}],["scaling",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["scalingcondition",{"_index":90,"title":{"classes/ScalingCondition.html":{}},"body":{"modules/AppModule.html":{},"classes/Condition.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["scalingcondition.metadata.uid",{"_index":1282,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["scalingcondition.name",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["scalingcondition.status.conditions",{"_index":1280,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["scalingconditiondocument",{"_index":341,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"injectables/ScalingConditionsService.html":{},"miscellaneous/typealiases.html":{}}}],["scalingconditions",{"_index":1273,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["scalingconditions.foreach(async",{"_index":1276,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["scalingconditionschema",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/Condition.html":{},"classes/ScalingCondition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalingconditionscontroller",{"_index":55,"title":{"controllers/ScalingConditionsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{}}}],["scalingconditionsservice",{"_index":44,"title":{"injectables/ScalingConditionsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{},"overview.html":{}}}],["scalingconditionstatusconditions",{"_index":1279,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["scalingtype",{"_index":611,"title":{},"body":{"classes/Event.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"classes/Set.html":{}}}],["schedulemodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}}}],["schema/adaptionevent.schema",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/clustermetric.schema",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/deploymentinformation.schema",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/hpa.schema",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/podinformation.schema",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/prometheusmetric.schema",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/scalingconditions.schema",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["schema/set.schema",{"_index":670,"title":{},"body":{"injectables/EventSetService.html":{}}}],["schemafactory",{"_index":155,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{},"classes/Set.html":{}}}],["schemafactory.createforclass(clustermetric",{"_index":162,"title":{},"body":{"classes/ClusterMetric.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(condition",{"_index":343,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(containerinformation",{"_index":376,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(deploymentinformation",{"_index":457,"title":{},"body":{"classes/DeploymentInformation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(event",{"_index":624,"title":{},"body":{"classes/Event.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hpa",{"_index":889,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(metric",{"_index":888,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(podinformation",{"_index":378,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(prometheusmetric",{"_index":1155,"title":{},"body":{"classes/PrometheusMetric.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(scalingcondition",{"_index":350,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(set",{"_index":1302,"title":{},"body":{"classes/Set.html":{},"miscellaneous/variables.html":{}}}],["sensitive",{"_index":406,"title":{},"body":{"classes/CrudFilters.html":{}}}],["service",{"_index":172,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["set",{"_index":76,"title":{"classes/Set.html":{}},"body":{"modules/AppModule.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"classes/Set.html":{},"coverage.html":{}}}],["set.controller",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["set.controller.ts",{"_index":640,"title":{},"body":{"controllers/EventSetController.html":{},"coverage.html":{}}}],["set.controller.ts:15",{"_index":645,"title":{},"body":{"controllers/EventSetController.html":{}}}],["set.controller.ts:20",{"_index":644,"title":{},"body":{"controllers/EventSetController.html":{}}}],["set.controller.ts:9",{"_index":648,"title":{},"body":{"controllers/EventSetController.html":{}}}],["set.count",{"_index":679,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.events.push(event",{"_index":684,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.firstevent",{"_index":676,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.lastevent",{"_index":678,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.name",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventSetService.html":{}}}],["set.namespace",{"_index":674,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.reason",{"_index":680,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.save",{"_index":686,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.scalingtype",{"_index":682,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/EventSetController.html":{},"injectables/EventsService.html":{}}}],["set.service.ts",{"_index":655,"title":{},"body":{"injectables/EventSetService.html":{},"coverage.html":{}}}],["set.service.ts:12",{"_index":664,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service.ts:26",{"_index":662,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service.ts:36",{"_index":668,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service.ts:40",{"_index":667,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service.ts:44",{"_index":666,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set.service.ts:8",{"_index":659,"title":{},"body":{"injectables/EventSetService.html":{}}}],["set/event",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"coverage.html":{}}}],["set/schema/set.schema",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["set/schema/set.schema.ts",{"_index":1292,"title":{},"body":{"classes/Set.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["set/schema/set.schema.ts:10",{"_index":1298,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:13",{"_index":1299,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:16",{"_index":1295,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:19",{"_index":1296,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:22",{"_index":1293,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:25",{"_index":1300,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:28",{"_index":1301,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:31",{"_index":1297,"title":{},"body":{"classes/Set.html":{}}}],["set/schema/set.schema.ts:34",{"_index":1294,"title":{},"body":{"classes/Set.html":{}}}],["setdocument",{"_index":669,"title":{},"body":{"injectables/EventSetService.html":{},"classes/Set.html":{},"miscellaneous/typealiases.html":{}}}],["setmodel",{"_index":660,"title":{},"body":{"injectables/EventSetService.html":{}}}],["setschema",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/Set.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["single",{"_index":197,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["size",{"_index":505,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{}}}],["sort",{"_index":210,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"classes/CrudSorting.html":{},"injectables/DeploymentInformationService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"injectables/PodMetricsService.html":{},"controllers/ScalingConditionsController.html":{}}}],["sorting",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorting.dto",{"_index":1034,"title":{},"body":{"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{}}}],["sorting.dto.ts",{"_index":427,"title":{},"body":{"classes/CrudSorting.html":{},"coverage.html":{}}}],["sorting.dto.ts:14",{"_index":434,"title":{},"body":{"classes/CrudSorting.html":{}}}],["sorting.dto.ts:15",{"_index":435,"title":{},"body":{"classes/CrudSorting.html":{}}}],["sortingactions",{"_index":1328,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["sortresult",{"_index":205,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortresult(sort",{"_index":220,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["sortresult(sortingactions",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{}}}],["spec",{"_index":988,"title":{},"body":{"injectables/HpaService.html":{}}}],["specific",{"_index":511,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["src/.../adaptionevent.schema.ts",{"_index":1469,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cast.helper.ts",{"_index":1398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../clustermetric.schema.ts",{"_index":1467,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../deploymentinformation.schema.ts",{"_index":1468,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../hpa.schema.ts",{"_index":1470,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../list.helper.ts",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../podinformation.schema.ts",{"_index":1471,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../prometheusmetric.schema.ts",{"_index":1472,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../result.dto.ts",{"_index":1475,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../scalingconditions.schema.ts",{"_index":1473,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../set.schema.ts",{"_index":1474,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cluster",{"_index":163,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"coverage.html":{}}}],["src/deployment",{"_index":458,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"coverage.html":{}}}],["src/derivative/derivative.controller.ts",{"_index":560,"title":{},"body":{"controllers/DerivativeController.html":{},"coverage.html":{}}}],["src/derivative/derivative.controller.ts:9",{"_index":566,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["src/derivative/derivative.service.ts",{"_index":575,"title":{},"body":{"injectables/DerivativeService.html":{},"coverage.html":{}}}],["src/derivative/derivative.service.ts:10",{"_index":586,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["src/derivative/derivative.service.ts:22",{"_index":582,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["src/derivative/derivative.service.ts:44",{"_index":591,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["src/derivative/derivative.service.ts:53",{"_index":589,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["src/derivative/derivative.service.ts:7",{"_index":580,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["src/derivative/dto/result.dto.ts",{"_index":439,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/dto/crud",{"_index":380,"title":{},"body":{"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{}}}],["src/dto/event.dto",{"_index":788,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/dto/event.dto.ts",{"_index":626,"title":{},"body":{"classes/EventDto.html":{},"coverage.html":{}}}],["src/dto/event.dto.ts:15",{"_index":631,"title":{},"body":{"classes/EventDto.html":{}}}],["src/dto/event.dto.ts:16",{"_index":632,"title":{},"body":{"classes/EventDto.html":{}}}],["src/dto/event.dto.ts:2",{"_index":629,"title":{},"body":{"classes/EventDto.html":{}}}],["src/dto/event.dto.ts:3",{"_index":630,"title":{},"body":{"classes/EventDto.html":{}}}],["src/dto/list",{"_index":202,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"classes/ListQueryDto.html":{},"controllers/ScalingConditionsController.html":{},"coverage.html":{}}}],["src/dto/pagination.dto",{"_index":1306,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["src/dto/pagination.dto.ts",{"_index":1046,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["src/dto/pagination.dto.ts:7",{"_index":1054,"title":{},"body":{"classes/Pagination.html":{}}}],["src/dto/pagination.dto.ts:8",{"_index":1055,"title":{},"body":{"classes/Pagination.html":{}}}],["src/event",{"_index":639,"title":{},"body":{"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Set.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/events/events.controller.ts",{"_index":693,"title":{},"body":{"controllers/EventsController.html":{},"coverage.html":{}}}],["src/events/events.controller.ts:17",{"_index":706,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:31",{"_index":703,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:60",{"_index":702,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:68",{"_index":699,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:79",{"_index":704,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.service.ts",{"_index":720,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/events/events.service.ts:111",{"_index":768,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:125",{"_index":765,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:132",{"_index":756,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:140",{"_index":742,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:150",{"_index":745,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:162",{"_index":763,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:172",{"_index":753,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:19",{"_index":740,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:191",{"_index":751,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:206",{"_index":748,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:232",{"_index":771,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:259",{"_index":779,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:279",{"_index":775,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:293",{"_index":777,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:36",{"_index":780,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:94",{"_index":758,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/helper/cast.helper.ts",{"_index":1304,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/helper/list.helper",{"_index":206,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"controllers/EventsController.html":{},"controllers/HpaController.html":{},"controllers/ScalingConditionsController.html":{}}}],["src/helper/list.helper.ts",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/hpa/hpa.controller.ts",{"_index":890,"title":{},"body":{"controllers/HpaController.html":{},"coverage.html":{}}}],["src/hpa/hpa.controller.ts:22",{"_index":892,"title":{},"body":{"controllers/HpaController.html":{}}}],["src/hpa/hpa.controller.ts:49",{"_index":894,"title":{},"body":{"controllers/HpaController.html":{}}}],["src/hpa/hpa.service",{"_index":790,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/hpa/hpa.service.ts",{"_index":901,"title":{},"body":{"injectables/HpaService.html":{},"coverage.html":{}}}],["src/hpa/hpa.service.ts:121",{"_index":934,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:13",{"_index":943,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:14",{"_index":912,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:164",{"_index":916,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:26",{"_index":921,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:36",{"_index":925,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:49",{"_index":923,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:63",{"_index":939,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:78",{"_index":931,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/hpa/hpa.service.ts:97",{"_index":928,"title":{},"body":{"injectables/HpaService.html":{}}}],["src/main.ts",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pod",{"_index":791,"title":{},"body":{"injectables/EventsService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"coverage.html":{}}}],["src/prometheus",{"_index":789,"title":{},"body":{"injectables/EventsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"coverage.html":{}}}],["src/scaling",{"_index":1240,"title":{},"body":{"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"coverage.html":{}}}],["src/schema/adaptionevent.schema",{"_index":671,"title":{},"body":{"injectables/EventSetService.html":{},"injectables/EventsService.html":{},"classes/Set.html":{}}}],["src/schema/adaptionevent.schema.ts",{"_index":607,"title":{},"body":{"classes/Event.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/adaptionevent.schema.ts:12",{"_index":617,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:15",{"_index":618,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:18",{"_index":613,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:21",{"_index":614,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:24",{"_index":620,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:27",{"_index":621,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:30",{"_index":619,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:33",{"_index":622,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:36",{"_index":615,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:39",{"_index":616,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/adaptionevent.schema.ts:9",{"_index":612,"title":{},"body":{"classes/Event.html":{}}}],["src/schema/clustermetric.schema",{"_index":270,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["src/schema/clustermetric.schema.ts",{"_index":138,"title":{},"body":{"classes/ClusterMetric.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/clustermetric.schema.ts:12",{"_index":148,"title":{},"body":{"classes/ClusterMetric.html":{}}}],["src/schema/clustermetric.schema.ts:15",{"_index":147,"title":{},"body":{"classes/ClusterMetric.html":{}}}],["src/schema/clustermetric.schema.ts:18",{"_index":153,"title":{},"body":{"classes/ClusterMetric.html":{}}}],["src/schema/clustermetric.schema.ts:21",{"_index":154,"title":{},"body":{"classes/ClusterMetric.html":{}}}],["src/schema/clustermetric.schema.ts:9",{"_index":152,"title":{},"body":{"classes/ClusterMetric.html":{}}}],["src/schema/deploymentinformation.schema",{"_index":519,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["src/schema/deploymentinformation.schema.ts",{"_index":443,"title":{},"body":{"classes/DeploymentInformation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/deploymentinformation.schema.ts:10",{"_index":447,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:13",{"_index":451,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:16",{"_index":452,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:19",{"_index":450,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:22",{"_index":453,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:25",{"_index":448,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:28",{"_index":454,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/deploymentinformation.schema.ts:31",{"_index":449,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["src/schema/hpa.schema",{"_index":944,"title":{},"body":{"injectables/HpaService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["src/schema/hpa.schema.ts",{"_index":872,"title":{},"body":{"classes/Hpa.html":{},"classes/Metric.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/hpa.schema.ts:12",{"_index":1042,"title":{},"body":{"classes/Metric.html":{}}}],["src/schema/hpa.schema.ts:15",{"_index":1043,"title":{},"body":{"classes/Metric.html":{}}}],["src/schema/hpa.schema.ts:18",{"_index":1044,"title":{},"body":{"classes/Metric.html":{}}}],["src/schema/hpa.schema.ts:21",{"_index":1045,"title":{},"body":{"classes/Metric.html":{}}}],["src/schema/hpa.schema.ts:29",{"_index":883,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:32",{"_index":882,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:35",{"_index":879,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:38",{"_index":876,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:41",{"_index":880,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:44",{"_index":881,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:47",{"_index":878,"title":{},"body":{"classes/Hpa.html":{}}}],["src/schema/hpa.schema.ts:9",{"_index":1041,"title":{},"body":{"classes/Metric.html":{}}}],["src/schema/podinformation.schema",{"_index":1098,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["src/schema/podinformation.schema.ts",{"_index":352,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/podinformation.schema.ts:11",{"_index":360,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:14",{"_index":361,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:17",{"_index":362,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:20",{"_index":364,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:23",{"_index":365,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:26",{"_index":367,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:29",{"_index":369,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:32",{"_index":370,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:35",{"_index":371,"title":{},"body":{"classes/ContainerInformation.html":{}}}],["src/schema/podinformation.schema.ts:46",{"_index":1056,"title":{},"body":{"classes/PodInformation.html":{}}}],["src/schema/podinformation.schema.ts:49",{"_index":1059,"title":{},"body":{"classes/PodInformation.html":{}}}],["src/schema/podinformation.schema.ts:52",{"_index":1060,"title":{},"body":{"classes/PodInformation.html":{}}}],["src/schema/podinformation.schema.ts:55",{"_index":1058,"title":{},"body":{"classes/PodInformation.html":{}}}],["src/schema/podinformation.schema.ts:58",{"_index":1057,"title":{},"body":{"classes/PodInformation.html":{}}}],["src/schema/prometheusmetric.schema",{"_index":1198,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["src/schema/prometheusmetric.schema.ts",{"_index":1147,"title":{},"body":{"classes/PrometheusMetric.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/prometheusmetric.schema.ts:12",{"_index":1151,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["src/schema/prometheusmetric.schema.ts:15",{"_index":1150,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["src/schema/prometheusmetric.schema.ts:18",{"_index":1152,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["src/schema/prometheusmetric.schema.ts:21",{"_index":1153,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["src/schema/prometheusmetric.schema.ts:9",{"_index":1149,"title":{},"body":{"classes/PrometheusMetric.html":{}}}],["src/schema/scalingconditions.schema",{"_index":1268,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["src/schema/scalingconditions.schema.ts",{"_index":329,"title":{},"body":{"classes/Condition.html":{},"classes/ScalingCondition.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schema/scalingconditions.schema.ts:12",{"_index":340,"title":{},"body":{"classes/Condition.html":{}}}],["src/schema/scalingconditions.schema.ts:15",{"_index":339,"title":{},"body":{"classes/Condition.html":{}}}],["src/schema/scalingconditions.schema.ts:18",{"_index":336,"title":{},"body":{"classes/Condition.html":{}}}],["src/schema/scalingconditions.schema.ts:21",{"_index":338,"title":{},"body":{"classes/Condition.html":{}}}],["src/schema/scalingconditions.schema.ts:24",{"_index":337,"title":{},"body":{"classes/Condition.html":{}}}],["src/schema/scalingconditions.schema.ts:33",{"_index":1237,"title":{},"body":{"classes/ScalingCondition.html":{}}}],["src/schema/scalingconditions.schema.ts:36",{"_index":1238,"title":{},"body":{"classes/ScalingCondition.html":{}}}],["src/schema/scalingconditions.schema.ts:39",{"_index":1239,"title":{},"body":{"classes/ScalingCondition.html":{}}}],["src/schema/scalingconditions.schema.ts:42",{"_index":1236,"title":{},"body":{"classes/ScalingCondition.html":{}}}],["src/schema/scalingconditions.schema.ts:45",{"_index":1235,"title":{},"body":{"classes/ScalingCondition.html":{}}}],["src/schema/scalingconditions.schema.ts:9",{"_index":335,"title":{},"body":{"classes/Condition.html":{}}}],["start",{"_index":414,"title":{},"body":{"classes/CrudFilters.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"index.html":{}}}],["start:dev",{"_index":1451,"title":{},"body":{"index.html":{}}}],["start:devhowever",{"_index":1428,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":1453,"title":{},"body":{"index.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{}}}],["starts",{"_index":412,"title":{},"body":{"classes/CrudFilters.html":{}}}],["startswith",{"_index":411,"title":{},"body":{"classes/CrudFilters.html":{}}}],["startswiths",{"_index":415,"title":{},"body":{"classes/CrudFilters.html":{}}}],["startunix",{"_index":1214,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["state",{"_index":550,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["statements",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":334,"title":{},"body":{"classes/Condition.html":{},"classes/ContainerInformation.html":{},"interfaces/Data.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{}}}],["stauts",{"_index":507,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["step",{"_index":1167,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["step=15s",{"_index":595,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["stores",{"_index":231,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/EventsService.html":{}}}],["storing",{"_index":229,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/EventsService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["string(opts.default",{"_index":1317,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["substring",{"_index":981,"title":{},"body":{"injectables/HpaService.html":{}}}],["successfulrescale",{"_index":797,"title":{},"body":{"injectables/EventsService.html":{}}}],["sum(container_memory_usage_bytes",{"_index":176,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["sum(irate(container_cpu_usage_seconds_total[1m",{"_index":175,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["support",{"_index":1455,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":957,"title":{},"body":{"injectables/HpaService.html":{}}}],["svg",{"_index":1456,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":852,"title":{},"body":{"injectables/EventsService.html":{}}}],["targeted",{"_index":917,"title":{},"body":{"injectables/HpaService.html":{}}}],["targetvalue",{"_index":886,"title":{},"body":{"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{}}}],["tbd",{"_index":845,"title":{},"body":{"injectables/EventsService.html":{}}}],["test",{"_index":574,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["then((res",{"_index":1274,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.appservice.gethello",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["this.clustermetricsmodel",{"_index":291,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.clustermetricsmodel.find",{"_index":282,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.clustermetricsmodel.find().exec",{"_index":279,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.clustermetricsmodel.findbyid(id).exec",{"_index":280,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.clustermetricsservice.getallclustermetrics",{"_index":219,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["this.clustermetricsservice.getclustermetricbyid(id",{"_index":226,"title":{},"body":{"controllers/ClusterMetricsController.html":{}}}],["this.conditionmodel",{"_index":1278,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.conditionmodel.find().exec",{"_index":1272,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.conditionmodel.findone",{"_index":1271,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.deploymentallreadysaved(hpaconfig",{"_index":961,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.deploymentinformationmodel",{"_index":533,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["this.deploymentinformationmodel.find().exec",{"_index":523,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["this.deploymentinformationmodel.findone",{"_index":527,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["this.deploymentinformationservice.getdeploymentinformationbytime(deploymentname",{"_index":473,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["this.deploymentinformationservice.savedeploymentinformation",{"_index":825,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.derivativeservice.calculatederivative(name",{"_index":573,"title":{},"body":{"controllers/DerivativeController.html":{}}}],["this.eventmodel",{"_index":793,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.find().exec",{"_index":834,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.findbyid(id).exec",{"_index":837,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.findone",{"_index":833,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.remove().exec",{"_index":835,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventsetservice.addeventtolatestset(event",{"_index":820,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventsetservice.createsetandaddevent(event",{"_index":822,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventsetservice.deleteallsets",{"_index":654,"title":{},"body":{"controllers/EventSetController.html":{}}}],["this.eventsetservice.getallsets",{"_index":653,"title":{},"body":{"controllers/EventSetController.html":{}}}],["this.eventsetservice.getlatestset(name",{"_index":652,"title":{},"body":{"controllers/EventSetController.html":{}}}],["this.eventsservice.deleteallevents",{"_index":718,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.deleteeventbyid(id",{"_index":717,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.getallevents",{"_index":713,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.geteventbyid(id",{"_index":719,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.receivenewadaptionevent(eventdto",{"_index":711,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.extractmetrictype(event",{"_index":807,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.extractreplicasize(event",{"_index":805,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.extractscalingtype(event",{"_index":803,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.filterdeployments(deploymentsunfiltered",{"_index":530,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["this.getallmetricvalues(event.name",{"_index":811,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.getclustercpuusage",{"_index":297,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.getclustermemoryusage",{"_index":299,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.getclusterpodcount",{"_index":301,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.getdeploymentinformation(deployment.metadata.namespace",{"_index":531,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["this.getdeployments('default",{"_index":529,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["this.gethpametricqueries",{"_index":1202,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["this.getlatestevent(event.name",{"_index":812,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.getlatestset(event.name",{"_index":688,"title":{},"body":{"injectables/EventSetService.html":{}}}],["this.getpodcontainerinformation(pod",{"_index":1103,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.getpodsfromreplicaset(namespace",{"_index":1127,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.getpodsindeployment(deployment.metadata.name",{"_index":1101,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.getreplicasetofdeployment(deploymentname",{"_index":1126,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.hpamodel",{"_index":962,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.hpamodel.exists",{"_index":1005,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.hpamodel.find().exec",{"_index":947,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.hpamodel.find().exec().then((result",{"_index":1205,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["this.hpamodel.findone",{"_index":948,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.hpaservice.getallhpaconfigurations",{"_index":898,"title":{},"body":{"controllers/HpaController.html":{}}}],["this.hpaservice.gethpaconfigurationbydeploymentname(name",{"_index":827,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.hpaservice.gethpaconfigurationbyuid(uid",{"_index":900,"title":{},"body":{"controllers/HpaController.html":{}}}],["this.httpservice.get('http://localhost:9090",{"_index":597,"title":{},"body":{"injectables/DerivativeService.html":{}}}],["this.ishpametricquery(query",{"_index":1229,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["this.isrelated(event).then(function",{"_index":817,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.isrelatedbyderivative(event",{"_index":860,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.isrelatedbyscalingtype(event",{"_index":861,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.isrelatedbytime(event",{"_index":862,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.kubernetesconfig.loadfromdefault",{"_index":521,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"injectables/ScalingConditionsService.html":{}}}],["this.kubernetesconfig.makeapiclient(k8s.appsv1api",{"_index":541,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["this.kubernetesconfig.makeapiclient(k8s.autoscalingv2beta2api",{"_index":949,"title":{},"body":{"injectables/HpaService.html":{},"injectables/ScalingConditionsService.html":{}}}],["this.kubernetesconfig.makeapiclient(k8s.corev1api",{"_index":1128,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.podinformationmodel",{"_index":1104,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.podinformationmodel.find",{"_index":1109,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.podmetricsservice.getpodsindeployment(deployment",{"_index":1069,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["this.podmetricsservice.getsavedpodinformation(pod.metadata.name",{"_index":1071,"title":{},"body":{"controllers/PodMetricsController.html":{}}}],["this.podmetricsservice.savepodinformation",{"_index":824,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prometheusmetricsservice.queryprometheustime(query.metricquery",{"_index":1176,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["this.prometheusmetricsservice.queryprometheustimerange(query.metricquery",{"_index":1175,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"classes/QueryDto.html":{}}}],["this.prometheusservice.queryprometheus(event.metrictype)[1",{"_index":809,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.prometheusservice.queryprometheus(hpaconfig.query)[1",{"_index":831,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.queryprometheus",{"_index":306,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.retrievemetrics",{"_index":278,"title":{},"body":{"injectables/ClusterMetricsService.html":{}}}],["this.retrievescalingconditions",{"_index":1270,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.savedeploymentinformation",{"_index":522,"title":{},"body":{"injectables/DeploymentInformationService.html":{}}}],["this.savedhpaconfigurations.includes(uid",{"_index":1006,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.savedhpaconfigurations.push(uid",{"_index":1008,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.saveexternalhpametadata(metric",{"_index":960,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.savehpametadata(hpaconfigurations",{"_index":953,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.savepodinformation",{"_index":1100,"title":{},"body":{"injectables/PodMetricsService.html":{}}}],["this.saveprometheusqueryinformation(hpaconfig",{"_index":975,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.savescalingconditions(scalingcondition",{"_index":1277,"title":{},"body":{"injectables/ScalingConditionsService.html":{}}}],["this.scalingconditionsservice.getallscalingconditions",{"_index":1247,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["this.scalingconditionsservice.getscalingconditionbyuid(uid",{"_index":1250,"title":{},"body":{"controllers/ScalingConditionsController.html":{}}}],["this.setmodel",{"_index":673,"title":{},"body":{"injectables/EventSetService.html":{}}}],["this.setmodel.find().exec",{"_index":691,"title":{},"body":{"injectables/EventSetService.html":{}}}],["this.setmodel.findone({'name",{"_index":689,"title":{},"body":{"injectables/EventSetService.html":{}}}],["this.setmodel.remove().exec",{"_index":692,"title":{},"body":{"injectables/EventSetService.html":{}}}],["this.updatehpaconfigurations",{"_index":946,"title":{},"body":{"injectables/HpaService.html":{}}}],["this.verifyusedhparule(query",{"_index":1213,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["throw",{"_index":1177,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["thus",{"_index":1433,"title":{},"body":{"index.html":{}}}],["time",{"_index":466,"title":{},"body":{"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["timebias",{"_index":524,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["timestamp",{"_index":283,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["timestamp.setmilliseconds(timestamp.getmilliseconds",{"_index":526,"title":{},"body":{"injectables/DeploymentInformationService.html":{},"injectables/PodMetricsService.html":{}}}],["timestamps",{"_index":259,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["timeunix",{"_index":1225,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["tip",{"_index":633,"title":{},"body":{"classes/EventDto.html":{}}}],["toboolean",{"_index":1024,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toboolean(value",{"_index":1037,"title":{},"body":{"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["tocrudfilters",{"_index":1031,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tocrudfilters(value",{"_index":1040,"title":{},"body":{"classes/ListQueryDto.html":{},"miscellaneous/functions.html":{}}}],["tocrudsorting",{"_index":1030,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tocrudsorting(value",{"_index":1039,"title":{},"body":{"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["todate",{"_index":1028,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["todate(value",{"_index":1311,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["todo",{"_index":307,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/HpaService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["tolowercase",{"_index":1025,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tolowercase(value",{"_index":1307,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["tonumber",{"_index":1026,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tonumber(jsonobj.pagination.current",{"_index":1326,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["tonumber(jsonobj.pagination.pagesize",{"_index":1327,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["tonumber(value",{"_index":1313,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["tonumberoptions",{"_index":1303,"title":{"interfaces/ToNumberOptions.html":{}},"body":{"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tools",{"_index":1440,"title":{},"body":{"index.html":{}}}],["topagination",{"_index":1029,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["topagination(value",{"_index":1038,"title":{},"body":{"classes/ListQueryDto.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["transform",{"_index":1011,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["transform(({value",{"_index":1036,"title":{},"body":{"classes/ListQueryDto.html":{}}}],["transformer",{"_index":1023,"title":{},"body":{"classes/ListQueryDto.html":{},"dependencies.html":{}}}],["trim",{"_index":1027,"title":{},"body":{"classes/ListQueryDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["trim(value",{"_index":1309,"title":{},"body":{"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{}}}],["true",{"_index":347,"title":{},"body":{"classes/Condition.html":{},"classes/ContainerInformation.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/ScalingCondition.html":{},"interfaces/ToNumberOptions.html":{}}}],["try",{"_index":319,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DerivativeService.html":{},"injectables/EventsService.html":{},"injectables/PrometheusMetricsService.html":{}}}],["type",{"_index":145,"title":{},"body":{"classes/ClusterMetric.html":{},"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"interfaces/Data.html":{},"classes/DeploymentInformation.html":{},"controllers/DeploymentInformationController.html":{},"injectables/DeploymentInformationService.html":{},"controllers/DerivativeController.html":{},"injectables/DerivativeService.html":{},"classes/Event.html":{},"classes/EventDto.html":{},"controllers/EventSetController.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/ListQueryDto.html":{},"classes/Metric.html":{},"classes/Pagination.html":{},"classes/PodInformation.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{},"classes/Set.html":{},"interfaces/ToNumberOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1465,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":158,"title":{},"body":{"classes/ClusterMetric.html":{},"injectables/ClusterMetricsService.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"classes/Hpa.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{}}}],["types.array",{"_index":349,"title":{},"body":{"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"classes/ScalingCondition.html":{}}}],["types.objectid",{"_index":293,"title":{},"body":{"injectables/ClusterMetricsService.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/PodMetricsService.html":{}}}],["uid",{"_index":346,"title":{},"body":{"classes/Condition.html":{},"classes/Hpa.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"classes/Metric.html":{},"classes/ScalingCondition.html":{},"controllers/ScalingConditionsController.html":{},"injectables/ScalingConditionsService.html":{}}}],["unavailable",{"_index":468,"title":{},"body":{"controllers/DeploymentInformationController.html":{}}}],["unavailablereplicas",{"_index":446,"title":{},"body":{"classes/DeploymentInformation.html":{},"injectables/DeploymentInformationService.html":{}}}],["undefined",{"_index":151,"title":{},"body":{"classes/ClusterMetric.html":{},"classes/Condition.html":{},"classes/ContainerInformation.html":{},"classes/DeploymentInformation.html":{},"classes/Event.html":{},"classes/Hpa.html":{},"classes/Metric.html":{},"classes/PodInformation.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"classes/ScalingCondition.html":{}}}],["uniquequeries",{"_index":1204,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["uniquequeries.push(metric.query",{"_index":1208,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["unix",{"_index":1169,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["unknown",{"_index":193,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/DeploymentInformationService.html":{},"injectables/DerivativeService.html":{},"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/HpaController.html":{},"injectables/HpaService.html":{},"controllers/PodMetricsController.html":{},"injectables/PodMetricsService.html":{},"injectables/PrometheusMetricsService.html":{},"controllers/ScalingConditionsController.html":{}}}],["unlicensed",{"_index":1463,"title":{},"body":{"properties.html":{}}}],["updatehpaconfigurations",{"_index":910,"title":{},"body":{"injectables/HpaService.html":{}}}],["updates",{"_index":942,"title":{},"body":{"injectables/HpaService.html":{}}}],["url",{"_index":1219,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["usage",{"_index":174,"title":{},"body":{"controllers/ClusterMetricsController.html":{},"injectables/ClusterMetricsService.html":{}}}],["use",{"_index":388,"title":{},"body":{"classes/CrudFilters.html":{},"injectables/PrometheusMetricsService.html":{}}}],["used",{"_index":382,"title":{},"body":{"classes/CrudFilters.html":{},"classes/CrudSorting.html":{},"injectables/HpaService.html":{},"classes/Pagination.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["using",{"_index":1412,"title":{},"body":{"index.html":{}}}],["v",{"_index":818,"title":{},"body":{"injectables/EventsService.html":{}}}],["v1containerstate",{"_index":363,"title":{},"body":{"classes/ContainerInformation.html":{},"classes/PodInformation.html":{}}}],["v1deploymentcondition",{"_index":455,"title":{},"body":{"classes/DeploymentInformation.html":{}}}],["valid",{"_index":1209,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["validator",{"_index":1022,"title":{},"body":{"classes/ListQueryDto.html":{},"dependencies.html":{}}}],["value",{"_index":389,"title":{},"body":{"classes/CrudFilters.html":{},"interfaces/Data.html":{},"injectables/DeploymentInformationService.html":{},"injectables/EventsService.html":{},"injectables/HpaService.html":{},"injectables/PodMetricsService.html":{},"classes/PrometheusMetric.html":{},"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{},"injectables/ScalingConditionsService.html":{},"interfaces/ToNumberOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.replace(/(\\r\\n|\\n|\\r)/gm",{"_index":1001,"title":{},"body":{"injectables/HpaService.html":{}}}],["value.tolowercase",{"_index":1308,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["value.trim",{"_index":1310,"title":{},"body":{"interfaces/ToNumberOptions.html":{}}}],["values",{"_index":442,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Result.html":{},"interfaces/ResultDto.html":{}}}],["variable",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1476,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":984,"title":{},"body":{"injectables/HpaService.html":{}}}],["verify",{"_index":1197,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["verifyusedhparule",{"_index":1185,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["verifyusedhparule(query",{"_index":1195,"title":{},"body":{"injectables/PrometheusMetricsService.html":{}}}],["version",{"_index":1460,"title":{},"body":{"properties.html":{}}}],["via",{"_index":754,"title":{},"body":{"injectables/EventsService.html":{}}}],["void",{"_index":665,"title":{},"body":{"injectables/EventSetService.html":{},"controllers/EventsController.html":{},"injectables/HpaService.html":{}}}],["watch",{"_index":1449,"title":{},"body":{"index.html":{}}}],["within",{"_index":1161,"title":{},"body":{"controllers/PrometheusMetricsController.html":{},"injectables/PrometheusMetricsService.html":{},"classes/QueryDto.html":{}}}],["work",{"_index":983,"title":{},"body":{"injectables/HpaService.html":{},"index.html":{}}}],["world",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["written",{"_index":1410,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nClusterMetricsService\n\nClusterMetricsService\n\nAppModule -->\n\nClusterMetricsService->AppModule\n\n\n\n\n\nDeploymentInformationService\n\nDeploymentInformationService\n\nAppModule -->\n\nDeploymentInformationService->AppModule\n\n\n\n\n\nDerivativeService\n\nDerivativeService\n\nAppModule -->\n\nDerivativeService->AppModule\n\n\n\n\n\nEventSetService\n\nEventSetService\n\nAppModule -->\n\nEventSetService->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nHpaService\n\nHpaService\n\nAppModule -->\n\nHpaService->AppModule\n\n\n\n\n\nPodMetricsService\n\nPodMetricsService\n\nAppModule -->\n\nPodMetricsService->AppModule\n\n\n\n\n\nPrometheusMetricsService\n\nPrometheusMetricsService\n\nAppModule -->\n\nPrometheusMetricsService->AppModule\n\n\n\n\n\nScalingConditionsService\n\nScalingConditionsService\n\nAppModule -->\n\nScalingConditionsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ClusterMetricsService\n                        \n                        \n                            DeploymentInformationService\n                        \n                        \n                            DerivativeService\n                        \n                        \n                            EventSetService\n                        \n                        \n                            EventsService\n                        \n                        \n                            HpaService\n                        \n                        \n                            PodMetricsService\n                        \n                        \n                            PrometheusMetricsService\n                        \n                        \n                            ScalingConditionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            EventsController\n                        \n                        \n                            EventSetController\n                        \n                        \n                            DerivativeController\n                        \n                        \n                            ClusterMetricsController\n                        \n                        \n                            HpaController\n                        \n                        \n                            ScalingConditionsController\n                        \n                        \n                            PodMetricsController\n                        \n                        \n                            PrometheusMetricsController\n                        \n                        \n                            DeploymentInformationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EventsService } from './events/events.service';\nimport { EventsController } from './events/events.controller';\nimport { EventSetService } from './event-set/event-set.service';\nimport { EventSetController } from './event-set/event-set.controller';\nimport { Event, EventSchema } from './schema/adaptionEvent.schema';\nimport { ClusterMetric, ClusterMetricSchema } from './schema/clusterMetric.schema';\nimport { Hpa, HpaSchema } from './schema/hpa.schema';\nimport { Set, SetSchema } from './event-set/schema/set.schema';\nimport { DerivativeService } from './derivative/derivative.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { DerivativeController } from './derivative/derivative.controller';\nimport { HpaController } from './hpa/hpa.controller';\nimport { HpaService } from './hpa/hpa.service';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ScalingConditionsController } from './scaling-conditions/scaling-conditions.controller';\nimport { ScalingCondition, ScalingConditionSchema } from './schema/scalingConditions.schema';\nimport { ScalingConditionsService } from './scaling-conditions/scaling-conditions.service';\nimport { PodMetricsController } from './pod-metrics/pod-metrics.controller';\nimport { PodMetricsService } from './pod-metrics/pod-metrics.service';\nimport { PrometheusMetricsService } from './prometheus-metrics/prometheus-metrics.service';\nimport { PrometheusMetricsController } from './prometheus-metrics/prometheus-metrics.controller';\nimport { PrometheusMetric, PrometheusMetricSchema } from './schema/prometheusMetric.schema';\nimport { ClusterMetricsController } from './cluster-metrics/cluster-metrics.controller';\nimport { ClusterMetricsService } from './cluster-metrics/cluster-metrics.service';\nimport { DeploymentInformationService } from './deployment-information/deployment-information.service';\nimport { DeploymentInformationController } from './deployment-information/deployment-information.controller';\nimport { PodInformation, PodInformationSchema } from './schema/podInformation.schema';\nimport { DeploymentInformation, DeploymentInformationSchema } from './schema/deploymentInformation.schema';\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    MongooseModule.forRoot('mongodb://mongo-mongodb.default.svc.cluster.local:27017/events'),\n    MongooseModule.forFeature([\n      {\n        name: Event.name,\n        schema: EventSchema\n      },\n      {\n        name: Set.name,\n        schema: SetSchema\n      },\n      {\n        name: ClusterMetric.name,\n        schema: ClusterMetricSchema\n      },\n      {\n        name: Hpa.name,\n        schema: HpaSchema\n      },\n      {\n        name: ScalingCondition.name,\n        schema: ScalingConditionSchema\n      },\n      {\n        name: PrometheusMetric.name,\n        schema: PrometheusMetricSchema\n      },\n      {\n        name: PodInformation.name,\n        schema: PodInformationSchema\n      },\n      {\n        name: DeploymentInformation.name,\n        schema: DeploymentInformationSchema\n      }\n    ]), HttpModule\n  ],\n  controllers: [AppController, EventsController, EventSetController, DerivativeController, ClusterMetricsController, HpaController, ScalingConditionsController, PodMetricsController, PrometheusMetricsController, DeploymentInformationController],\n  providers: [AppService, EventsService, EventSetService, DerivativeService, ClusterMetricsService, HpaService, ScalingConditionsService, PodMetricsService, PrometheusMetricsService, DeploymentInformationService],\n})\nexport class AppModule { }\n//'mongodb://mongo-mongodb.default.svc.cluster.local:27017/events,'\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClusterMetric.html":{"url":"classes/ClusterMetric.html","title":"class - ClusterMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClusterMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/clusterMetric.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpu\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                memory\n                            \n                            \n                                podCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/clusterMetric.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/clusterMetric.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/clusterMetric.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/clusterMetric.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        podCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/clusterMetric.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document, Schema as MongooseSchema, Types } from \"mongoose\";\n\nexport type ClusterMetricDocument = ClusterMetric & Document;\n\n@Schema()\nexport class ClusterMetric {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    createdAt: string;\n\n    @Prop()\n    cpu: string;\n\n    @Prop()\n    memory: string;\n\n    @Prop()\n    podCount: string;\n\n}\n\nexport const ClusterMetricSchema = SchemaFactory.createForClass(ClusterMetric);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClusterMetricsController.html":{"url":"controllers/ClusterMetricsController.html","title":"controller - ClusterMetricsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClusterMetricsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cluster-metrics/cluster-metrics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cluster-metrics\n            \n\n\n            \n                Description\n            \n            \n                Controller handeling the API endpoints for the cluster metrics collected by the cluster metrics service\nCurrently collected metrics:\n\nCPU usage (sum(irate(container_cpu_usage_seconds_total[1m])))\nMemory usage (sum(container_memory_usage_bytes))\nPod count (count(kube_pod_info))\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getList\n                            \n                            \n                                    Async\n                                getOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(query: ListQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.controller.ts:31\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve a collection of items in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ListQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.controller.ts:62\n                \n            \n\n\n            \n                \n                    API endpoint to get single item in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Post, Query, Param, Patch } from '@nestjs/common';\nimport { ClusterMetricsService } from './cluster-metrics.service';\nimport { ListQueryDto } from 'src/dto/list-query.dto';\nimport { filterResult, sortResult } from 'src/helper/list.helper';\n\n/**\n * Controller handeling the API endpoints for the cluster metrics collected by the cluster metrics service\n * \n * Currently collected metrics:\n * - CPU usage (sum(irate(container_cpu_usage_seconds_total[1m])))\n * - Memory usage (sum(container_memory_usage_bytes))\n * - Pod count (count(kube_pod_info))\n * \n */\n@Controller('cluster-metrics')\nexport class ClusterMetricsController {\n    constructor(private readonly clusterMetricsService: ClusterMetricsService) { }\n\n\n    /**\n     * API endpoint to retrieve a collection of items in a resource\n     * \n     * \n     * @param hasPagination\n     * @param pagination\n     * @param sort\n     * @param filters\n     * @returns\n     */\n    @Get()\n    async getList(@Query() query: ListQueryDto) {\n        let hasPagination = query.hasPagination;\n        let pagination = query.pagination;\n        let sort = query.sort;\n        let filters = query.filters;\n\n\n        let allClusterMetrics = await this.clusterMetricsService.getAllClusterMetrics();\n\n\n\n        if (sort) {\n            allClusterMetrics = sortResult(sort, allClusterMetrics);\n        }\n        if (filters) {\n            allClusterMetrics = filterResult(filters, allClusterMetrics);\n        }\n        if (hasPagination) {\n            allClusterMetrics = allClusterMetrics.slice(pagination.current, pagination.current + pagination.pageSize);\n        }\n\n        return allClusterMetrics;\n    }\n\n    /**\n     * API endpoint to get single item in a resource\n     * \n     * @param id\n     * @returns\n     */\n    @Get('/:id')\n    async getOne(@Param('id') id: string) {\n        return this.clusterMetricsService.getClusterMetricById(id);\n    }\n\n\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClusterMetricsService.html":{"url":"injectables/ClusterMetricsService.html","title":"injectable - ClusterMetricsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClusterMetricsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cluster-metrics/cluster-metrics.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving and storing cluster metrics.\nRetrieves metrics from prometheus and stores them in the database every 5min\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllClusterMetrics\n                            \n                            \n                                    Async\n                                getClusterCPUUsage\n                            \n                            \n                                    Async\n                                getClusterMemoryUsage\n                            \n                            \n                                    Async\n                                getClusterMetricById\n                            \n                            \n                                    Async\n                                getClusterMetricsBetween\n                            \n                            \n                                    Async\n                                getClusterPodCount\n                            \n                            \n                                    Async\n                                queryPrometheus\n                            \n                            \n                                    Async\n                                retrieveMetrics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clusterMetricsModel: Model, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/cluster-metrics/cluster-metrics.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clusterMetricsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllClusterMetrics\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllClusterMetrics()\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:25\n                \n            \n\n\n            \n                \n                    Returns all cluster metrics from the database\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getClusterCPUUsage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClusterCPUUsage()\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:68\n                \n            \n\n\n            \n                \n                    Retrieves the cluster cpu usage from prometheus\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getClusterMemoryUsage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClusterMemoryUsage()\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:84\n                \n            \n\n\n            \n                \n                    Retrieves the cluster memory usage from prometheus\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getClusterMetricById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClusterMetricById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:34\n                \n            \n\n\n            \n                \n                    Returns the cluster metric with the given id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getClusterMetricsBetween\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClusterMetricsBetween(from: string, to: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:45\n                \n            \n\n\n            \n                \n                    Returns the cluster metrics in between the given timestamps\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getClusterPodCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClusterPodCount()\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:97\n                \n            \n\n\n            \n                \n                    Retrieves the cluster pod count from prometheus\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        queryPrometheus\n                        \n                    \n                \n            \n            \n                \n                    \n                    queryPrometheus(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:111\n                \n            \n\n\n            \n                \n                    Queries prometheus with the given query\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        retrieveMetrics\n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieveMetrics()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(300000)\n                \n            \n\n            \n                \n                    Defined in src/cluster-metrics/cluster-metrics.service.ts:54\n                \n            \n\n\n            \n                \n                    Regularly (every 5min) retrieves cluster metrics\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { ClusterMetric, ClusterMetricDocument } from 'src/schema/clusterMetric.schema';\nimport { HttpService } from '@nestjs/axios'\nimport { map } from 'rxjs/operators';\nimport { lastValueFrom } from 'rxjs';\nimport { Interval } from '@nestjs/schedule';\n\n/**\n * Service for retrieving and storing cluster metrics.\n * Retrieves metrics from prometheus and stores them in the database every 5min\n */\n@Injectable()\nexport class ClusterMetricsService {\n    constructor(@InjectModel(ClusterMetric.name) private clusterMetricsModel: Model, private httpService: HttpService) {\n        this.retrieveMetrics();\n    }\n\n    /**\n     * Returns all cluster metrics from the database\n     * \n     * @returns \n     */\n    async getAllClusterMetrics(): Promise {\n        return this.clusterMetricsModel.find().exec();\n    }\n\n    /**\n     * Returns the cluster metric with the given id\n     * @param id\n     * @returns\n     */\n    async getClusterMetricById(id: string): Promise {\n        return this.clusterMetricsModel.findById(id).exec();\n    }\n\n\n    /**\n     * Returns the cluster metrics in between the given timestamps\n     * @param from\n     * @param to\n     * @returns\n     */\n    async getClusterMetricsBetween(from: string, to: string): Promise {\n        let result = await this.clusterMetricsModel.find({ timestamp: { $gte: new Date(from), $lte: new Date(to) } }).exec();\n        return result;\n    }\n\n    /**\n     * Regularly (every 5min) retrieves cluster metrics\n     */\n    @Interval(300000)\n    async retrieveMetrics() {\n        const clusterMetrics = new this.clusterMetricsModel();\n        clusterMetrics.id = new Types.ObjectId();\n        clusterMetrics.createdAt = new Date().toISOString();\n        clusterMetrics.cpu = await this.getClusterCPUUsage();\n        clusterMetrics.memory = await this.getClusterMemoryUsage();\n        clusterMetrics.podCount = await this.getClusterPodCount();\n        clusterMetrics.save();\n    }\n\n    /**\n     * Retrieves the cluster cpu usage from prometheus\n     * @returns \n     */\n    async getClusterCPUUsage(): Promise {\n        const query = 'sum(irate(container_cpu_usage_seconds_total[1m]))';\n        const apiGateway = '/api/v1/query?query='\n        let prometheusQuery = apiGateway + query;\n\n        let result = await this.queryPrometheus({ query: prometheusQuery });\n\n        //TODO: Check if this is indeed the last query result\n        let cpuUsage = result.pop().value[1];\n        return cpuUsage;\n    }\n\n    /**\n     * Retrieves the cluster memory usage from prometheus\n     * @returns \n     */\n    async getClusterMemoryUsage(): Promise {\n        const query = 'sum(container_memory_usage_bytes)';\n        const apiGateway = '/api/v1/query?query='\n        let prometheusQuery = apiGateway + query;\n        let result = await this.queryPrometheus({ query: prometheusQuery });\n        let memoryUsage = result.pop().value[1];\n        return memoryUsage;\n    }\n\n    /**\n     * Retrieves the cluster pod count from prometheus\n     * @returns \n     */\n    async getClusterPodCount(): Promise {\n        const query = 'count(kube_pod_info)';\n        const apiGateway = '/api/v1/query?query='\n        let prometheusQuery = apiGateway + query;\n        let result = await this.queryPrometheus({ query: prometheusQuery });\n        let podCount = result.pop().value[1];\n        return podCount;\n    }\n\n    /**\n     * Queries prometheus with the given query\n     * @param query \n     * @returns \n     */\n    async queryPrometheus({ query }: { query: string; }): Promise> {\n        const prometheusUrl = process.env.PROMETHEUS_URL || 'http://prometheus-kube-prometheus-prometheus:9090';\n        let result;\n        try {\n            result = await lastValueFrom(this.httpService.get(prometheusUrl + query).pipe(\n                map(response => response.data)\n            ));\n        } catch (error) {\n            console.log(error)\n        }\n        return result.data.result;\n    }\n\n}    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/scalingConditions.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                lastTransitionTime\n                            \n                            \n                                message\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastTransitionTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type ScalingConditionDocument = ScalingCondition & Document;\n\n@Schema()\nexport class Condition {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    type: string;\n    \n    @Prop()\n    status: string;\n    \n    @Prop()\n    lastTransitionTime: string;\n    \n    @Prop()\n    reason: string;\n    \n    @Prop()\n    message: string;\n}\n\nexport const ConditionSchema = SchemaFactory.createForClass(Condition);\n\n@Schema()\nexport class ScalingCondition {\n\n    @Prop()\n    deploymentName: string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    uid: string;\n    \n    @Prop()\n    createdAt: string;\n\n    @Prop({ _id: true, type: [ConditionSchema] })\n    conditions: Types.Array;\n\n}\n\nexport const ScalingConditionSchema = SchemaFactory.createForClass(ScalingCondition);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContainerInformation.html":{"url":"classes/ContainerInformation.html","title":"class - ContainerInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContainerInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/podInformation.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                containerID\n                            \n                            \n                                image\n                            \n                            \n                                lastState\n                            \n                            \n                                name\n                            \n                            \n                                ready\n                            \n                            \n                                restartCount\n                            \n                            \n                                started\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     V1ContainerState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: V1ContainerState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restartCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        started\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     V1ContainerState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: V1ContainerState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { V1ContainerState } from \"@kubernetes/client-node\";\n\nexport type PodInformationDocument = PodInformation & Document;\n\n\n@Schema()\nexport class ContainerInformation extends Document {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    containerID: string;\n\n    @Prop({ type: String })\n    image: string;\n\n    @Prop({ type: V1ContainerState })\n    lastState: V1ContainerState;\n\n    @Prop({ type: String })\n    name: string;\n\n    @Prop({ type: Boolean })\n    ready: boolean;\n\n    @Prop({ type: Number })\n    restartCount: number;\n\n    @Prop({ type: Boolean })\n    started: boolean;\n\n    @Prop({ type: V1ContainerState })\n    status: V1ContainerState;\n\n}\nexport const ContainerInformationSchema = SchemaFactory.createForClass(ContainerInformation);\n\n\n\n\n@Schema()\nexport class PodInformation {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    podName: string;\n\n    @Prop()\n    createdAt: string;\n\n    @Prop({ _id: true, type: [ContainerInformationSchema] })\n    containerInformation: Types.Array;\n}\n\nexport const PodInformationSchema = SchemaFactory.createForClass(PodInformation);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudFilters.html":{"url":"classes/CrudFilters.html","title":"class - CrudFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/crud-filters.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Used to filter the results of a CRUD operation.\nField is the name of the field to filter.\nOperator is the operator to use for the filter.\nValue is the value to filter by.\nThe operators are:\n\n\n\nType\nDescription\n\n\n\n\neq\nEqual\n\n\nne\nNot Equal\n\n\nlt\nLess Than\n\n\ngt\nGreater Than\n\n\nlte\nLess Than or Equal to\n\n\ngte\nGreater Than or Equal to\n\n\nin\nIncluded in an array\n\n\nnin\nNot included in an array\n\n\ncontains\nContains\n\n\nncontains\nDoes not contain\n\n\ncontainss\nContains (case sensitive)\n\n\nncontainss\nDoes not contain (case sensitive)\n\n\nbetween\nBetween\n\n\nnbetween\nNot between\n\n\nnull\nIs null\n\n\nnnull\nIs not null\n\n\nstartswith\nStarts with\n\n\nnstartswith\nDoes not start with\n\n\nstartswiths\nStarts with (case sensitive)\n\n\nnstartswiths\nDoes not start with (case sensitive)\n\n\nendswith\nEnds with\n\n\nnendswith\nDoes not end with\n\n\nendswiths\nEnds with (case sensitive)\n\n\nnendswiths\nDoes not end with (case sensitive)\n\n\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                operator\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/crud-filters.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"eq\" | \"ne\" | \"lt\" | \"gt\" | \"lte\" | \"gte\" | \"in\" | \"nin\" | \"contains\" | \"ncontains\" | \"containss\" | \"ncontainss\" | \"between\" | \"nbetween\" | \"null\" | \"nnull\" | \"startswith\" | \"nstartswith\" | \"startswiths\" | \"nstartswiths\" | \"endswith\" | \"nendswith\" | \"endswiths\" | \"nendswiths\"\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/crud-filters.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/crud-filters.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CrudFilters {\n    field: string;\n    operator: \"eq\" |\n        \"ne\" |\n        \"lt\" |\n        \"gt\" |\n        \"lte\" |\n        \"gte\" |\n        \"in\" |\n        \"nin\" |\n        \"contains\" |\n        \"ncontains\" |\n        \"containss\" |\n        \"ncontainss\" |\n        \"between\" |\n        \"nbetween\" |\n        \"null\" |\n        \"nnull\" |\n        \"startswith\" |\n        \"nstartswith\" |\n        \"startswiths\" |\n        \"nstartswiths\" |\n        \"endswith\" |\n        \"nendswith\" |\n        \"endswiths\" |\n        \"nendswiths\";\n    value: any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudSorting.html":{"url":"classes/CrudSorting.html","title":"class - CrudSorting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudSorting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/crud-sorting.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Used to sort the results of a CRUD operation.\nField is the name of the field to sort by.\nOrder is the order to sort by.\nThe orders are:\n\n\n\nType\nDescription\n\n\n\n\nasc\nAscending order\n\n\ndesc\nDescending order\n\n\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/crud-sorting.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/crud-sorting.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CrudSorting {\n    field: string;\n    order: \"asc\" | \"desc\";\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/derivative/dto/result.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            resultType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         Result[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Result[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resultType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResultDto {\n    status: string;\n    data:   Data;\n}\n\nexport interface Data {\n    resultType: string;\n    result:     Result[];\n}\n\nexport interface Result {\n    metric: Metric;\n    values: Array;\n}\n\nexport interface Metric {\n}\n\nexport type Value = number | string;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeploymentInformation.html":{"url":"classes/DeploymentInformation.html","title":"class - DeploymentInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeploymentInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/deploymentInformation.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                availableReplicas\n                            \n                            \n                                conditions\n                            \n                            \n                                createdAt\n                            \n                            \n                                deploymentName\n                            \n                            \n                                namespace\n                            \n                            \n                                replicas\n                            \n                            \n                                unavailableReplicas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableReplicas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replicas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unavailableReplicas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/deploymentInformation.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { V1DeploymentCondition } from \"@kubernetes/client-node\";\n\nexport type DeploymentInformationDocument = DeploymentInformation & Document;\n\n@Schema()\nexport class DeploymentInformation {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    deploymentName: string;\n\n    @Prop({ type: String })\n    namespace: string;\n\n    @Prop({ type: String })\n    createdAt: string;\n\n    @Prop({ type: Number })\n    replicas: number;\n\n    @Prop({ type: Number })\n    availableReplicas: number;\n\n    @Prop({ type: Number })\n    unavailableReplicas: number;\n\n    @Prop({ type: Array })\n    conditions: Array;\n    \n\n}\n\nexport const DeploymentInformationSchema = SchemaFactory.createForClass(DeploymentInformation);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeploymentInformationController.html":{"url":"controllers/DeploymentInformationController.html","title":"controller - DeploymentInformationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeploymentInformationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deployment-information/deployment-information.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                deployment-information\n            \n\n\n            \n                Description\n            \n            \n                Controller for retrieving deployment information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDeploymentInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDeploymentInformation\n                        \n                    \n                \n            \n            \n                \ngetDeploymentInformation(namespace: string, deploymentName: string, timestamp: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:namespace/:deploymentName/:timestamp')\n                \n            \n\n            \n                \n                    Defined in src/deployment-information/deployment-information.controller.ts:22\n                \n            \n\n\n            \n                \n                    Returns the deployment information for the given deployment name and namespace at the given timestamp\nThe deployment information includes the id, the deployment name, the namespace, the time of information collection, the number of replicas, the number of available replicas, the number of unavailable replicas and the conditions.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timestamp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { DeploymentInformationService } from './deployment-information.service';\n\n/**\n * Controller for retrieving deployment information\n */\n@Controller('deployment-information')\nexport class DeploymentInformationController {\n    constructor(private readonly deploymentInformationService: DeploymentInformationService) { }\n\n    /**\n     * Returns the deployment information for the given deployment name and namespace at the given timestamp\n     * \n     * The deployment information includes the id, the deployment name, the namespace, the time of information collection, the number of replicas, the number of available replicas, the number of unavailable replicas and the conditions.\n     * \n     * @param namespace\n     * @param deploymentName\n     * @param timestamp\n     * @returns\n     */\n    @Get('/:namespace/:deploymentName/:timestamp')\n    getDeploymentInformation(@Param('namespace') namespace: string, @Param('deploymentName') deploymentName: string, @Param('timestamp') timestamp: string) {\n        let deploymentInformation = this.deploymentInformationService.getDeploymentInformationByTime(deploymentName, namespace, new Date());\n        return deploymentInformation;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeploymentInformationService.html":{"url":"injectables/DeploymentInformationService.html","title":"injectable - DeploymentInformationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeploymentInformationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/deployment-information/deployment-information.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving deployment information from the kubernetes API and saving it in the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kubernetesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterDeployments\n                            \n                            \n                                    Async\n                                getAllDeploymentInformation\n                            \n                            \n                                    Async\n                                getDeploymentInformation\n                            \n                            \n                                    Async\n                                getDeploymentInformationByTime\n                            \n                            \n                                    Async\n                                getDeployments\n                            \n                            \n                                    Async\n                                saveDeploymentInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deploymentInformationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/deployment-information/deployment-information.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deploymentInformationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterDeployments\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterDeployments(deploymentsUnfiltered: k8s.V1Deployment[])\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes blacklisted deployments from the list of deployments.\nThe blacklist includes the following deployments:\n\nthe backend and frontend of the application, mongodb, prometheus and grafana\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    deploymentsUnfiltered\n                                    \n                                            k8s.V1Deployment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        deployments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllDeploymentInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllDeploymentInformation()\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns all deployment information from the database.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDeploymentInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeploymentInformation(namespace: string, deploymentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:112\n                \n            \n\n\n            \n                \n                    Retrieves information about the replica size, currently active replicas and stauts of an deployment from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDeploymentInformationByTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeploymentInformationByTime(deploymentName: string, namespace: string, timestamp: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:35\n                \n            \n\n\n            \n                \n                    Returns the deployment information for a given deployment name in a given namespace closest to a specific time.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timestamp\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDeployments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeployments(namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:78\n                \n            \n\n\n            \n                \n                    Retrieves all deployments of a namespace from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveDeploymentInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveDeploymentInformation()\n                \n            \n\n\n            \n                \n                    Defined in src/deployment-information/deployment-information.service.ts:51\n                \n            \n\n\n            \n                \n                    Saves the deployment information in the database.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kubernetesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new k8s.KubeConfig()\n                    \n                \n                    \n                        \n                                Defined in src/deployment-information/deployment-information.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport * as k8s from '@kubernetes/client-node';\nimport { DeploymentInformation, DeploymentInformationDocument } from 'src/schema/deploymentInformation.schema';\n\n/**\n * Service for retrieving deployment information from the kubernetes API and saving it in the database.\n */\n@Injectable()\nexport class DeploymentInformationService {\n    private kubernetesConfig = new k8s.KubeConfig();\n\n    constructor(@InjectModel(DeploymentInformation.name) private deploymentInformationModel: Model) {\n        this.kubernetesConfig.loadFromDefault();\n        this.saveDeploymentInformation();\n    }\n\n    /**\n     * Returns all deployment information from the database.\n     * \n     * @returns\n     */\n    async getAllDeploymentInformation() {\n        return this.deploymentInformationModel.find().exec();\n    }\n\n    /**\n     * Returns the deployment information for a given deployment name in a given namespace closest to a specific time.\n     * \n     * @param deploymentName\n     * @param namespace\n     * @returns\n     */\n    async getDeploymentInformationByTime(deploymentName: string, namespace: string, timestamp: Date) {\n        const timeBias = 240000;\n        timestamp.setMilliseconds(timestamp.getMilliseconds() + timeBias);\n        return this.deploymentInformationModel.findOne\n            ({\n                deploymentName: deploymentName,\n                namespace: namespace,\n                createdAt: { $lte: timestamp }\n            }).sort({ createdAt: -1 }).exec();\n    }\n\n    /**\n     * Saves the deployment information in the database.\n     * \n     * @returns\n     */\n    async saveDeploymentInformation() {\n        const deploymentsUnfiltered = await this.getDeployments('default');\n        const deployments = this.filterDeployments(deploymentsUnfiltered);\n            \n        for (const deployment of deployments) {\n            const deploymentInformation = await this.getDeploymentInformation(deployment.metadata.namespace, deployment.metadata.name);\n            const deploymentInformationDocument = new this.deploymentInformationModel({\n                _id: new Types.ObjectId(),\n                deploymentName: deployment.metadata.name,\n                namespace: deployment.metadata.namespace,\n                createdAt: new Date().toISOString(),\n                replicas: deploymentInformation.replicas,\n                availableReplicas: deploymentInformation.availableReplicas,\n                unavailableReplicas: deploymentInformation.unavailableReplicas,\n                conditions: deploymentInformation.conditions,\n            });\n            await deploymentInformationDocument.save();\n        }\n    }\n\n    /**\n     * Retrieves all deployments of a namespace from the kubernetes API.\n     * \n     * @param namespace\n     * @returns\n     * \n     */\n    async getDeployments(namespace: string) {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AppsV1Api);\n        const deploymentList = await k8sApi.listNamespacedDeployment(namespace);\n        return deploymentList.body.items;\n    }\n\n    /**\n     * Removes blacklisted deployments from the list of deployments.\n     * \n     * The blacklist includes the following deployments:\n     * - the backend and frontend of the application, mongodb, prometheus and grafana\n     * \n     * @param deploymentsUnfiltered deployments\n     * @returns \n     */\n    private filterDeployments(deploymentsUnfiltered: k8s.V1Deployment[]) {\n        const deploymentBlacklist = [\"ba\", \"ba-frontend\", \"blackbox-exporter-prometheus-blackbox-exporter\", \"mongo-mongodb\", \"prometheus-grafana\", \"prometheus-kube-prometheus-operator\", \"prometheus-kube-state-metrics\"]\n        const deployments = [];\n\n        for (const deployment of deploymentsUnfiltered) {\n            if (!deploymentBlacklist.includes(deployment.metadata.name)) {\n                deployments.push(deployment);\n            }\n        }\n        return deployments;\n    }\n\n    /**\n     * Retrieves information about the replica size, currently active replicas and stauts of an deployment from the kubernetes API.\n     * \n     * @param deploymentName\n     * @param namespace\n     * @returns\n     */\n    async getDeploymentInformation(namespace: string, deploymentName: string) {        \n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AppsV1Api);\n        const deployment = await k8sApi.readNamespacedDeployment(deploymentName, namespace);\n        const deploymentStatus = deployment.body.status;\n        const deploymentInformation = {\n            replicas: deploymentStatus.replicas,\n            availableReplicas: deploymentStatus.availableReplicas,\n            unavailableReplicas: deploymentStatus.unavailableReplicas,\n            conditions: deploymentStatus.conditions,\n        }\n        return deploymentInformation;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DerivativeController.html":{"url":"controllers/DerivativeController.html","title":"controller - DerivativeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DerivativeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/derivative/derivative.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                derivative\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateDerivative\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateDerivative\n                        \n                    \n                \n            \n            \n                \ncalculateDerivative(name: string, namespace: string, firstEvent: number, lastEvent: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/derivative/derivative.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { DerivativeService } from './derivative.service';\n\n@Controller('derivative')\nexport class DerivativeController {\n    constructor(private derivativeService : DerivativeService) {}\n\n    @Get()\n    calculateDerivative(@Query('name')name :string, @Query('namespace')namespace :string, @Query('firstEvent')firstEvent: number, @Query('lastEvent')lastEvent: number) {\n        return this.derivativeService.calculateDerivative(name, namespace, firstEvent, lastEvent, 'test');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DerivativeService.html":{"url":"injectables/DerivativeService.html","title":"injectable - DerivativeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DerivativeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/derivative/derivative.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateDerivative\n                            \n                            \n                                    Private\n                                getMetrics\n                            \n                            \n                                getPromQl\n                            \n                            \n                                hasPromQl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/derivative/derivative.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calculateDerivative\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateDerivative(name: string, namespace: string, lastEvent: number, firstEvent: number, metricType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/derivative/derivative.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metricType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMetrics\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMetrics(name: string, namespace: string, latestEvent: number, currentEvent: number, metricType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/derivative/derivative.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    latestEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentEvent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metricType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPromQl\n                        \n                    \n                \n            \n            \n                \ngetPromQl(metricType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/derivative/derivative.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metricType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPromQl\n                        \n                    \n                \n            \n            \n                \nhasPromQl(metricType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/derivative/derivative.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metricType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios'\nimport { ResultDto } from \"./dto/result.dto\";\nimport { lastValueFrom, Observable } from 'rxjs';\n\n@Injectable()\nexport class DerivativeService {\n    constructor(private httpService: HttpService) { }\n\n    private getMetrics(name: string, namespace: string, latestEvent: number, currentEvent: number, metricType: string): Observable {\n        let result: ResultDto;\n        let prometheusQuery = '/api/v1/query_range?query=sum(rate(container_cpu_usage_seconds_total{namespace=\"' + namespace + '\", pod=~\"' + name + '-.*\"}[1m]))&start=' + latestEvent + '&end=' + currentEvent + '&step=15s'\n        console.log(prometheusQuery)\n        try {\n            return this.httpService.get('http://localhost:9090' + prometheusQuery)\n        } catch (error) {\n            console.log(error)\n        }\n        \n        //prometheus-kube-prometheus-prometheus.default.svc.cluster.local\n    }\n    async calculateDerivative(name: string, namespace: string, lastEvent: number, firstEvent: number, metricType: string) {\n        let result;\n        let negativeGradient = 0;\n        let positiveGradient = 0;\n        let positivePercentage;\n        result = await lastValueFrom(this.getMetrics(name, namespace, lastEvent, firstEvent, metricType))\n        if (Array.isArray(result.data.data.result) && result.data.data.result.length) {\n            let metrics: Array = result.data.data.result.pop().values;\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/adaptionEvent.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                message\n                            \n                            \n                                metricType\n                            \n                            \n                                metricValue\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                oldReplicaSetId\n                            \n                            \n                                reason\n                            \n                            \n                                replicaSize\n                            \n                            \n                                scalingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldReplicaSetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replicaSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scalingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/adaptionEvent.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document, Schema as MongooseSchema } from \"mongoose\";\n\nexport type EventDocument = Event & Document;\n\n@Schema()\nexport class Event {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    name : string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    createdAt : string;\n\n    @Prop()\n    message : string;\n\n    @Prop()\n    reason : string;\n\n    @Prop()\n    replicaSize: number;\n\n    @Prop()\n    oldReplicaSetId: MongooseSchema.Types.ObjectId;\n\n    @Prop()\n    scalingType: string;\n\n    @Prop()\n    metricType: string;\n\n    @Prop()\n    metricValue: number[];\n\n}\n\nexport const EventSchema = SchemaFactory.createForClass(Event);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventDto.html":{"url":"classes/EventDto.html","title":"class - EventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/event.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                details\n                            \n                            \n                                endpoint\n                            \n                            \n                                eventType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/event.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/event.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/event.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/event.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EventDto {\n    createdAt: string;\n    details: {\n        message : string;\n        reason : string;\n        tip : string;\n        count : string;\n        kind : string;\n        name : string;\n        namespace : string;\n        component : string;\n        host : string;\n        labels: JSON;\n    }\n    endpoint: string;\n    eventType: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventSetController.html":{"url":"controllers/EventSetController.html","title":"controller - EventSetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventSetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event-set/event-set.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                set\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAllSets\n                            \n                            \n                                getAllSets\n                            \n                            \n                                getLatestSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAllSets\n                        \n                    \n                \n            \n            \n                \ndeleteAllSets()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/event-set/event-set.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSets\n                        \n                    \n                \n            \n            \n                \ngetAllSets()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/event-set/event-set.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestSet\n                        \n                    \n                \n            \n            \n                \ngetLatestSet(name: string, namespace: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('latest')\n                \n            \n\n            \n                \n                    Defined in src/event-set/event-set.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Query } from '@nestjs/common';\nimport { EventSetService } from './event-set.service';\n\n@Controller('set')\nexport class EventSetController {\n    constructor(private eventSetService: EventSetService) {}\n\n    @Get('latest')\n    getLatestSet(@Query('name')name :string,\n    @Query('namespace') namespace: string) {\n        return this.eventSetService.getLatestSet(name, namespace);\n    }\n\n    @Get()\n    getAllSets() {\n        return this.eventSetService.getAllSets();\n    }\n\n    @Delete()\n    deleteAllSets() {\n        return this.eventSetService.deleteAllSets();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventSetService.html":{"url":"injectables/EventSetService.html","title":"injectable - EventSetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventSetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event-set/event-set.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addEventToLatestSet\n                            \n                            \n                                createSetAndAddEvent\n                            \n                            \n                                deleteAllSets\n                            \n                            \n                                getAllSets\n                            \n                            \n                                    Async\n                                getLatestSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(setModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/event-set/event-set.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        setModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addEventToLatestSet\n                        \n                    \n                \n            \n            \n                \n                    \n                    addEventToLatestSet(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/event-set/event-set.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSetAndAddEvent\n                        \n                    \n                \n            \n            \n                \ncreateSetAndAddEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/event-set/event-set.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAllSets\n                        \n                    \n                \n            \n            \n                \ndeleteAllSets()\n                \n            \n\n\n            \n                \n                    Defined in src/event-set/event-set.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSets\n                        \n                    \n                \n            \n            \n                \ngetAllSets()\n                \n            \n\n\n            \n                \n                    Defined in src/event-set/event-set.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLatestSet\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatestSet(name: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/event-set/event-set.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { SetDocument } from './schema/set.schema';\nimport { Event } from 'src/schema/adaptionEvent.schema';\n\n@Injectable()\nexport class EventSetService {\n\n    constructor(@InjectModel(Set.name) private setModel: Model) {}\n\n    createSetAndAddEvent(event : Event) {\n        const set = new this.setModel();\n        set.name = event.name;\n        set.namespace = event.namespace;\n        set.firstEvent = event.createdAt;\n        set.lastEvent = event.createdAt;\n        set.count = 1;\n        set.reason = event.reason;\n        set.scalingType = event.scalingType;\n        set.events.push(event);\n        console.log(set);\n        set.save();\n    }\n\n    async addEventToLatestSet(event: Event) {\n        console.log(event.name + event.namespace)\n        const set = await this.getLatestSet(event.name, event.namespace);\n        console.log(set)\n        set.events.push(event);\n        set.count = set.count + 1;\n        set.lastEvent = event.createdAt;\n        set.save();\n    }\n\n    async getLatestSet(name: string, namespace: string) {\n        return this.setModel.findOne({'name' : name, 'namespace' : namespace}).sort({ 'lastEvent': -1 }).exec();\n    }\n\n    getAllSets() {\n        return this.setModel.find().exec();\n    }\n\n    deleteAllSets() {\n        return this.setModel.remove().exec();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController.html":{"url":"controllers/EventsController.html","title":"controller - EventsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                events\n            \n\n\n            \n                Description\n            \n            \n                Controller for retrieving and displaying events\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                getList\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                receiveNewAdaptionEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:68\n                \n            \n\n\n            \n                \n                    API endpoint to delete all items in a resource\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(event: any, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:60\n                \n            \n\n\n            \n                \n                    API endpoint to delete single item in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(query: ListQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:31\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve a collection of items in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ListQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:79\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve single item in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receiveNewAdaptionEvent\n                        \n                    \n                \n            \n            \n                \nreceiveNewAdaptionEvent(eventDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:17\n                \n            \n\n\n            \n                \n                    API endpoint to recieve new events from the kubernetes event exporter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { EventsService } from './events.service';\nimport { ListQueryDto } from 'src/dto/list-query.dto';\nimport { filterResult, sortResult } from 'src/helper/list.helper';\n\n/**\n * Controller for retrieving and displaying events\n */\n@Controller('events')\nexport class EventsController {\n  constructor(private readonly eventsService: EventsService) { }\n\n  /**\n   * API endpoint to recieve new events from the kubernetes event exporter\n   */ \n  @Post()\n  receiveNewAdaptionEvent(@Body() eventDto: any) {\n    this.eventsService.receiveNewAdaptionEvent(eventDto);\n  }\n\n  /**\n   * API endpoint to retrieve a collection of items in a resource\n   * \n   * @param hasPagination\n   * @param pagination\n   * @param sort\n   * @param filters\n   * @returns\n   */\n  @Get()\n  async getList(@Query() query: ListQueryDto) {\n    let hasPagination = query.hasPagination;\n    let pagination = query.pagination;\n    let sort = query.sort;\n    let filters = query.filters;\n\n    let allEvents = await this.eventsService.getAllEvents();\n\n    if (sort) {\n      allEvents = sortResult(sort, allEvents);\n    }\n    if (filters) {\n      allEvents = filterResult(filters, allEvents);\n    }\n    if (hasPagination) {\n      allEvents = allEvents.slice(pagination.current, pagination.current + pagination.pageSize);\n    }\n    return allEvents;\n\n  }\n\n  /**\n   * API endpoint to delete single item in a resource\n   * \n   * @param event\n   * @param id\n   * @returns\n   */\n  @Delete('/:id')\n  async deleteOne(@Body() event: any, @Param('id') id: string) {\n    this.eventsService.deleteEventById(id);\n  }\n\n  /**\n   * API endpoint to delete all items in a resource\n   */\n  @Delete()\n  async deleteAll() {\n    this.eventsService.deleteAllEvents();\n  }\n\n  /**\n   * API endpoint to retrieve single item in a resource\n   * \n   * @param id\n   * @returns\n   */\n  @Get('/:id')\n  async getOne(@Param('id') id: string) {\n    return this.eventsService.getEventById(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for receiving and storing adaption events.\nReceives events from the controller and stores them in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kubernetesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAllEvents\n                            \n                            \n                                    Async\n                                deleteEventById\n                            \n                            \n                                extractMetricType\n                            \n                            \n                                extractReplicaSize\n                            \n                            \n                                extractScalingType\n                            \n                            \n                                    Async\n                                getAllEvents\n                            \n                            \n                                    Async\n                                getAllMetricValues\n                            \n                            \n                                    Async\n                                getEventById\n                            \n                            \n                                    Async\n                                getLatestEvent\n                            \n                            \n                                    Async\n                                getLatestScaleOutEvent\n                            \n                            \n                                    Async\n                                isRelated\n                            \n                            \n                                    Async\n                                isRelatedByDerivative\n                            \n                            \n                                isRelatedByScalingType\n                            \n                            \n                                isRelatedByTime\n                            \n                            \n                                    Async\n                                receiveNewAdaptionEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventModel: Model, eventSetService: EventSetService, prometheusService: PrometheusMetricsService, hpaService: HpaService, podMetricsService: PodMetricsService, deploymentInformationService: DeploymentInformationService)\n                    \n                \n                        \n                            \n                                Defined in src/events/events.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventSetService\n                                                  \n                                                        \n                                                                        EventSetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prometheusService\n                                                  \n                                                        \n                                                                        PrometheusMetricsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hpaService\n                                                  \n                                                        \n                                                                        HpaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        podMetricsService\n                                                  \n                                                        \n                                                                        PodMetricsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deploymentInformationService\n                                                  \n                                                        \n                                                                        DeploymentInformationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteAllEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAllEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:140\n                \n            \n\n\n            \n                \n                    Deletes all events from the database\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteEventById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEventById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:150\n                \n            \n\n\n            \n                \n                    Deletes one event from the database by its id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractMetricType\n                        \n                    \n                \n            \n            \n                \nextractMetricType(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:206\n                \n            \n\n\n            \n                \n                    Extracts the metric type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the metric type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractReplicaSize\n                        \n                    \n                \n            \n            \n                \nextractReplicaSize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:191\n                \n            \n\n\n            \n                \n                    Extracts the replica size\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the replica size\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractScalingType\n                        \n                    \n                \n            \n            \n                \nextractScalingType(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:172\n                \n            \n\n\n            \n                \n                    Extracts the scaling type via regex\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the scaling type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        All events from the database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllMetricValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllMetricValues(name: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:94\n                \n            \n\n\n            \n                \n                    Returns metric value for all hpa configurations applied to the component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the scaled component\n\n                                    \n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        namespace of the event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEventById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:162\n                \n            \n\n\n            \n                \n                    Returns one event by its id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLatestEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatestEvent(name: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:125\n                \n            \n\n\n            \n                \n                    Returns the latest event from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the scaled component\n\n                                    \n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        namespace of the event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLatestScaleOutEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatestScaleOutEvent(name: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:111\n                \n            \n\n\n            \n                \n                    Returns the latest event from the database with the scaling type \"scaleOut\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the scaled component\n\n                                    \n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        namespace of the event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRelated\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRelated(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:232\n                \n            \n\n\n            \n                \n                    Checks if a event is related to the latest event\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRelatedByDerivative\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRelatedByDerivative(event: Event, latestEvent: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:279\n                \n            \n\n\n            \n                \n                    Checks if events are related by derivative\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    latestEvent\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRelatedByScalingType\n                        \n                    \n                \n            \n            \n                \nisRelatedByScalingType(event: Event, latestEvent: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:293\n                \n            \n\n\n            \n                \n                    Checks if events are related by scaling type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    latestEvent\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRelatedByTime\n                        \n                    \n                \n            \n            \n                \nisRelatedByTime(event: Event, latestEvent: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:259\n                \n            \n\n\n            \n                \n                    Checks if events are related by time\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    latestEvent\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        receiveNewAdaptionEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    receiveNewAdaptionEvent(eventDto: EventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:36\n                \n            \n\n\n            \n                \n                    This function is called when a event is received by the controller. It converts the incoming event to a better format\nand checks if the events is related.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventDto\n                                    \n                                                EventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kubernetesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new k8s.KubeConfig()\n                    \n                \n                    \n                        \n                                Defined in src/events/events.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { EventDto } from 'src/dto/event.dto';\nimport { EventSetService } from 'src/event-set/event-set.service';\nimport { Event, EventDocument } from 'src/schema/adaptionEvent.schema';\nimport * as k8s from '@kubernetes/client-node';\nimport { PrometheusMetricsService } from 'src/prometheus-metrics/prometheus-metrics.service';\nimport { HpaService } from 'src/hpa/hpa.service';\nimport { PodMetricsService } from 'src/pod-metrics/pod-metrics.service';\nimport { DeploymentInformationService } from 'src/deployment-information/deployment-information.service';\n\n/**\n * Service for receiving and storing adaption events.\n * Receives events from the controller and stores them in the database\n */\n@Injectable()\nexport class EventsService {\n    private kubernetesConfig = new k8s.KubeConfig();\n\n    constructor(@InjectModel(Event.name) private eventModel: Model, \n                private eventSetService: EventSetService, \n                private prometheusService: PrometheusMetricsService, \n                private hpaService: HpaService,\n                private podMetricsService: PodMetricsService,\n                private deploymentInformationService: DeploymentInformationService) { \n        this.kubernetesConfig.loadFromDefault();\n    }\n\n    /**\n     * This function is called when a event is received by the controller. It converts the incoming event to a better format \n     * and checks if the events is related.\n     * \n     * @param eventDto \n     */\n    async receiveNewAdaptionEvent(eventDto: EventDto) {\n        let isRelated: boolean;\n        const event = new this.eventModel();\n        \n        console.log(eventDto);\n        \n        if (eventDto.details == null)\n            return;\n\n        if (eventDto.details.reason === 'SuccessfulRescale') {\n            event._id = new Types.ObjectId();\n            event.createdAt = new Date().toISOString();\n            event.name = eventDto.details.name;\n            event.namespace = eventDto.details.namespace;\n            event.reason = eventDto.details.reason;\n            event.message = eventDto.details.message;\n            event.scalingType = this.extractScalingType(event);\n            event.replicaSize = this.extractReplicaSize(event);\n            event.metricType = this.extractMetricType(event);\n\n            if (event.scalingType == \"scaleOut\") {\n                event.metricValue.push(await this.prometheusService.queryPrometheus(event.metricType)[1]);\n            } else {\n                event.metricValue = await this.getAllMetricValues(event.name, event.namespace);\n            }\n\n            const latestEvent = await this.getLatestEvent(event.name, event.namespace);\n            if(latestEvent !== null) {\n                event.oldReplicaSetId= latestEvent._id;\n                console.log('oldReplicaSetId: ' + latestEvent._id);\n            }\n\n            await this.isRelated(event).then(function (v) { isRelated = v })\n            if (isRelated) {\n                console.log('isRelated')\n                this.eventSetService.addEventToLatestSet(event);\n            } else {\n                console.log('isNotRelated')\n                this.eventSetService.createSetAndAddEvent(event);\n            }\n            event.save();\n\n            this.podMetricsService.savePodInformation();\n            this.deploymentInformationService.saveDeploymentInformation();\n            \n        }\n\n\n\n    }\n\n    /**\n     * Returns metric value for all hpa configurations applied to the component\n     * \n     * @param name name of the scaled component\n     * @param namespace namespace of the event\n     * @returns\n     */\n    async getAllMetricValues(name: string, namespace: string): Promise {\n        const hpaConfigs = await this.hpaService.getHpaConfigurationByDeploymentName(name, namespace);\n        let metricValues = [];\n        for (const hpaConfig of hpaConfigs.currentMetrics) {\n            const metricValue = await this.prometheusService.queryPrometheus(hpaConfig.query)[1];\n            metricValues.push(metricValue);\n        }\n        return metricValues;\n    }\n\n    /**\n     * Returns the latest event from the database with the scaling type \"scaleOut\"\n     * \n     * @param name name of the scaled component\n     * @param namespace namespace of the event\n     * @returns\n     */\n    async getLatestScaleOutEvent(name: string, namespace: string): Promise {\n        return this.eventModel.findOne\n            ({ 'name': name, 'namespace': namespace, 'scalingType': 'scaleOut' })\n            .sort({ 'createdAt': -1 })\n            .exec();\n    }\n\n    /**\n     * Returns the latest event from the database\n     * \n     * @param name name of the scaled component\n     * @param namespace namespace of the event\n     * @returns \n     */\n    async getLatestEvent(name: string, namespace: string): Promise {\n        return this.eventModel.findOne({ 'name': name, 'namespace': namespace }).sort({ 'createdAt': -1 }).exec();\n    }\n    /**\n     * \n     * @returns All events from the database\n     */\n    async getAllEvents(): Promise {\n        return this.eventModel.find().exec();\n    }\n    /**\n     * Deletes all events from the database\n     * \n     * @returns \n     */\n    async deleteAllEvents() {\n        return this.eventModel.remove().exec();\n    }\n\n    /**\n     * Deletes one event from the database by its id\n     * \n     * @param id\n     * @returns\n     */\n    async deleteEventById(id: string) {\n        return this.eventModel\n            .findByIdAndDelete(id)\n            .exec();\n    }\n\n    /**\n     * Returns one event by its id\n     * \n     * @param id\n     * @returns\n     */\n    async getEventById(id: string): Promise {\n        return this.eventModel.findById(id).exec();\n    }\n\n    /**\n     * Extracts the scaling type via regex\n     * \n     * @param event \n     * @returns the scaling type\n     */\n    extractScalingType(event: Event): string {\n        let regexScaleOut = /(above)/g;\n        let regexScaleIn = /(below)/g;\n        let scalingType = '';\n        if (regexScaleOut.test(event.message)) {\n            scalingType = 'scaleOut'\n        } else if (regexScaleIn.test(event.message)) {\n            scalingType = 'scaleIn'\n        } else {\n            scalingType = 'TBD'\n        }\n        return scalingType;\n    }\n    /**\n     * Extracts the replica size\n     * \n     * @param event \n     * @returns the replica size\n     */\n    extractReplicaSize(event: Event): number {\n        let regexReplicaSize = /New size\\: (\\d+)/;\n        let replicaSize = NaN;\n        try {\n            replicaSize = parseInt(event.message.match(regexReplicaSize).pop());\n        } catch (error) {\n\n        }\n        return replicaSize;\n    }\n    /**\n     * Extracts the metric type\n     * @param event \n     * @returns the metric type\n     */\n    extractMetricType(event: Event): string {\n        let regexMetricTypeScaleIn = /(reason: All metrics below target)/\n        let regexMetricType = /reason: (.*) metrics above target/;\n        let regexExternalMetric = /external metric/;\n        let regexMetricTypeExternalMetric = /(? {\n        let latestEvent: Event;\n        let isRelatedByDerivative: boolean;\n        await this.getLatestEvent(event.name, event.namespace).then(function (v) { latestEvent = v });\n        if (latestEvent === null) {\n            return false\n        }\n        await this.isRelatedByDerivative(event, latestEvent)\n        if (!this.isRelatedByScalingType(event, latestEvent)) {\n            return false;\n        } \n        if (!this.isRelatedByTime(event, latestEvent)) {\n            return false\n        }    \n        if (this.isRelatedByDerivative(event, latestEvent)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Checks if events are related by time\n     * @param event \n     * @param latestEvent \n     * @returns \n     */\n    isRelatedByTime(event: Event, latestEvent: Event): boolean {\n        let relationTime = 300000;\n        if (latestEvent === null) {\n            return false;\n        }\n        const currentDate = new Date(event.createdAt);\n        const latestDate = new Date(latestEvent.createdAt)\n        let difference = Math.abs(currentDate.getTime() - latestDate.getTime());\n        if (difference \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hpa.html":{"url":"classes/Hpa.html","title":"class - Hpa","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hpa\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/hpa.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                currentMetrics\n                            \n                            \n                                deploymentName\n                            \n                            \n                                maxReplicas\n                            \n                            \n                                minReplicas\n                            \n                            \n                                namespace\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMetrics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({_id: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxReplicas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minReplicas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type HpaDocument = Hpa & Document;\n\n@Schema()\nexport class Metric extends Document {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    metricName: string;\n\n    @Prop({ type: String })\n    query: string;\n\n    @Prop({ type: String })\n    targetValue: string;\n\n    @Prop({ type: String })\n    type: string;\n}\n\nexport const MetricSchema = SchemaFactory.createForClass(Metric);\n\n@Schema()\nexport class Hpa {\n    @Prop()\n    uid: string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    deploymentName: string;\n\n    @Prop()\n    createdAt: string;\n\n    @Prop()\n    maxReplicas: number;\n\n    @Prop()\n    minReplicas: number;\n\n    @Prop({ _id: true, type: [MetricSchema] })\n    currentMetrics: Types.Array;\n\n}\nexport const HpaSchema = SchemaFactory.createForClass(Hpa);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HpaController.html":{"url":"controllers/HpaController.html","title":"controller - HpaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HpaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hpa/hpa.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                hpa\n            \n\n\n            \n                Description\n            \n            \n                Controller handeling the API endpoints for the hpa configuration collected by the hpa service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getList\n                            \n                            \n                                    Async\n                                getOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(query: ListQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/hpa/hpa.controller.ts:22\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve a collection of items in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ListQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/hpa/hpa.controller.ts:49\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve single item in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { ListQueryDto } from 'src/dto/list-query.dto';\nimport { filterResult, sortResult } from 'src/helper/list.helper';\nimport { HpaService } from './hpa.service';\n\n/**\n * Controller handeling the API endpoints for the hpa configuration collected by the hpa service\n */\n@Controller('hpa')\nexport class HpaController {\n    constructor(private readonly hpaService: HpaService) { }\n\n    /**\n     * API endpoint to retrieve a collection of items in a resource\n     * @param hasPagination\n     * @param pagination\n     * @param sort\n     * @param filters\n     * @returns\n     */\n    @Get()\n    async getList(@Query() query: ListQueryDto) {\n        let hasPagination = query.hasPagination;\n        let pagination = query.pagination;\n        let sort = query.sort;\n        let filters = query.filters;\n\n        let allHpa = await this.hpaService.getAllHpaConfigurations();\n\n        if (sort) {\n            allHpa = sortResult(sort, allHpa);\n        }\n        if (filters) {\n            allHpa = filterResult(filters, allHpa);\n        }\n        if (hasPagination) {\n            allHpa = allHpa.slice(pagination.current, pagination.current + pagination.pageSize);\n        }\n\n        return allHpa;\n    }\n\n    /**\n     * API endpoint to retrieve single item in a resource\n     * @param id\n     * @returns\n     */\n    @Get('/:id')\n    async getOne(@Param('id') uid: string) {\n        return await this.hpaService.getHpaConfigurationByUid(uid);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HpaService.html":{"url":"injectables/HpaService.html","title":"injectable - HpaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HpaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hpa/hpa.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving hpa configurations from the kubernetes API and saving it in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kubernetesConfig\n                            \n                            \n                                    Private\n                                savedHpaConfigurations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deploymentAllreadySaved\n                            \n                            \n                                    Async\n                                getAllHpaConfigurations\n                            \n                            \n                                    Async\n                                getHpaConfigurationByDeploymentName\n                            \n                            \n                                    Async\n                                getHpaConfigurationByUid\n                            \n                            \n                                    Private\n                                    Async\n                                saveExternalHpaMetadata\n                            \n                            \n                                    Private\n                                    Async\n                                saveHpaMetadata\n                            \n                            \n                                    Private\n                                savePrometheusQueryInformation\n                            \n                            \n                                    Async\n                                updateHpaConfigurations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hpaModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/hpa/hpa.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hpaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        deploymentAllreadySaved\n                        \n                    \n                \n            \n            \n                \n                    \n                    deploymentAllreadySaved(hpaConfig: k8s.V2beta2HorizontalPodAutoscaler)\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:164\n                \n            \n\n\n            \n                \n                    Checks if the deployment targeted by the hpa condig is already saved in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hpaConfig\n                                    \n                                            k8s.V2beta2HorizontalPodAutoscaler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllHpaConfigurations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllHpaConfigurations()\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:26\n                \n            \n\n\n            \n                \n                    Returns all hpa configurations in the cluster from the kubernetes api\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHpaConfigurationByDeploymentName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHpaConfigurationByDeploymentName(deploymentName: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:49\n                \n            \n\n\n            \n                \n                    Returns the hpa configuration for a given deployment name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHpaConfigurationByUid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHpaConfigurationByUid(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:36\n                \n            \n\n\n            \n                \n                    Returns the hpa configuration for a given uid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        saveExternalHpaMetadata\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveExternalHpaMetadata(metric: k8s.V2beta2MetricSpec, hpaConfig: k8s.V2beta2HorizontalPodAutoscaler)\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:97\n                \n            \n\n\n            \n                \n                    Saves the external hpa metadata from the kubernetes api when a prometheus metric is used for scaling\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metric\n                                    \n                                                k8s.V2beta2MetricSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hpaConfig\n                                    \n                                            k8s.V2beta2HorizontalPodAutoscaler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        saveHpaMetadata\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveHpaMetadata(hpaConfigurations: k8s.V2beta2HorizontalPodAutoscaler[])\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:78\n                \n            \n\n\n            \n                \n                    Saves the hpa metadata in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hpaConfigurations\n                                    \n                                            k8s.V2beta2HorizontalPodAutoscaler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        savePrometheusQueryInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    savePrometheusQueryInformation(hpaConfig: k8s.V2beta2HorizontalPodAutoscaler, hpa)\n                \n            \n\n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:121\n                \n            \n\n\n            \n                \n                    Extracts prometheus querys from annotation when metric name is found in key value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hpaConfig\n                                    \n                                            k8s.V2beta2HorizontalPodAutoscaler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    hpa\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Database model\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateHpaConfigurations\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHpaConfigurations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(300000)\n                \n            \n\n            \n                \n                    Defined in src/hpa/hpa.service.ts:63\n                \n            \n\n\n            \n                \n                    Regularly (every 5 minutes) checks the hpa configurations in the cluster and updates the database\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kubernetesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new k8s.KubeConfig()\n                    \n                \n                    \n                        \n                                Defined in src/hpa/hpa.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        savedHpaConfigurations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/hpa/hpa.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Hpa, HpaDocument } from 'src/schema/hpa.schema';\nimport * as k8s from '@kubernetes/client-node';\nimport { Interval } from '@nestjs/schedule';\n\n/**\n * Service for retrieving hpa configurations from the kubernetes API and saving it in the database\n */\n@Injectable()\nexport class HpaService {\n    private kubernetesConfig = new k8s.KubeConfig();\n    private savedHpaConfigurations: Array = [];\n\n    constructor(@InjectModel(Hpa.name) private hpaModel: Model) {\n        this.kubernetesConfig.loadFromDefault();\n        this.updateHpaConfigurations();\n    }\n\n    /**\n     * Returns all hpa configurations in the cluster from the kubernetes api\n     * \n     * @returns\n     */\n    async getAllHpaConfigurations() {\n        return this.hpaModel.find().exec();\n    }\n\n    /**\n     * Returns the hpa configuration for a given uid\n     * \n     * @param uid\n     * @returns\n     */\n    async getHpaConfigurationByUid(uid: string) {\n        return this.hpaModel.findOne\n            ({\n                uid: uid\n            }).exec();\n    }\n\n    /**\n     * Returns the hpa configuration for a given deployment name\n     * \n     * @param deploymentName\n     * @returns\n     */\n    async getHpaConfigurationByDeploymentName(deploymentName: string, namespace: string) {\n        return this.hpaModel.findOne\n            ({\n                deploymentName: deploymentName,\n                namespace: namespace\n            }).exec();\n    }\n\n    /**\n     * Regularly (every 5 minutes) checks the hpa configurations in the cluster and updates the database\n     * \n     * @returns\n     */\n    @Interval(300000)\n    async updateHpaConfigurations() {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AutoscalingV2beta2Api);\n        const hpaList = await k8sApi.listHorizontalPodAutoscalerForAllNamespaces();\n        const hpaConfigurations = hpaList.body.items;\n        this.saveHpaMetadata(hpaConfigurations);\n\n    }\n\n\n    /**\n     * Saves the hpa metadata in the database\n     * \n     * @param hpaConfigurations \n     * @returns\n     */\n    private async saveHpaMetadata(hpaConfigurations: k8s.V2beta2HorizontalPodAutoscaler[]) {\n        for (let hpaConfig of hpaConfigurations) {\n            for (const metric of hpaConfig.spec.metrics) {\n                //TODO: Add more metric types currently only supports promehtheus external metrics\n                if (metric.type === 'External') {\n                    await this.saveExternalHpaMetadata(metric, hpaConfig);\n                }\n            }\n        }\n    }\n\n    /**\n     * Saves the external hpa metadata from the kubernetes api when a prometheus metric is used for scaling\n     * \n     * @param metric \n     * @param hpa \n     * @param hpaConfig \n     * @returns\n     */\n    private async saveExternalHpaMetadata(metric: k8s.V2beta2MetricSpec, hpaConfig: k8s.V2beta2HorizontalPodAutoscaler) {\n\n        if (await this.deploymentAllreadySaved(hpaConfig)) {\n            return;\n        }\n\n        const hpa = new this.hpaModel();\n        hpa.uid = hpaConfig.metadata.uid;\n        hpa.namespace = hpaConfig.metadata.namespace;\n        hpa.deploymentName = hpaConfig.metadata.name;\n        hpa.createdAt = hpaConfig.metadata.creationTimestamp.toISOString();\n        hpa.maxReplicas = hpaConfig.spec.maxReplicas;\n        hpa.minReplicas = hpaConfig.spec.minReplicas;\n        this.savePrometheusQueryInformation(hpaConfig, hpa);\n\n        hpa.save();\n    }\n\n    /**\n     * Extracts prometheus querys from annotation when metric name is found in key value\n     * \n     * @param hpaConfig\n     * @param hpa: Database model\n     */ \n    private savePrometheusQueryInformation(hpaConfig: k8s.V2beta2HorizontalPodAutoscaler, hpa: Hpa & import(\"mongoose\").Document & { _id: import(\"mongoose\").Types.ObjectId; }) {\n        //TODO: Not a clean implementation -> if for some reason one metric name is a substring of another metric name it will not work\n        //                                 -> if for some reason the metric name includes the substring \"query\" it will not work\n        //                                 -> also not verified if the annotations always match with the spec metrics\n        //TODO: Maybe dont descrimintate between metric scaling type?                                \n        for (const [key, value] of Object.entries(hpaConfig.metadata.annotations)) {\n            if (key.includes('query')) {\n                for (const currentMetric of hpaConfig.spec.metrics) {\n                    const currentMetricName = currentMetric.external.metric.name;\n                    const scalingType = currentMetric.external.target.type;\n                    if (key.includes(currentMetricName)) {\n                        if (scalingType === 'AverageValue') {\n                            hpa.currentMetrics.push(\n                                {\n                                    metricName: currentMetricName,\n                                    query: value.replace(/(\\r\\n|\\n|\\r)/gm, \"\"),\n                                    targetValue: currentMetric.external.target.averageValue,\n                                    type: currentMetric.external.target.type,\n                                }\n                            );\n                        }\n                        else {\n                            hpa.currentMetrics.push(\n                                {\n                                    metricName: currentMetricName,\n                                    query: value.replace(/(\\r\\n|\\n|\\r)/gm, \"\"),\n                                    targetValue: currentMetric.external.target.value,\n                                    type: currentMetric.external.target.type,\n                                }\n                            );\n                        }\n                    }\n\n                }\n            }\n        }\n    }\n\n    /**\n     * Checks if the deployment targeted by the hpa condig is already saved in the database\n     * \n     * @param hpaConfig\n     */ \n    private async deploymentAllreadySaved(hpaConfig: k8s.V2beta2HorizontalPodAutoscaler) {\n        const uid = hpaConfig.metadata.uid;\n        const doesDeploymentExist = await this.hpaModel.exists({ uid: uid });\n        if (doesDeploymentExist || this.savedHpaConfigurations.includes(uid)) {\n            //TODO: Check if new metrics exists for this deployment\n            return true;\n        }\n        this.savedHpaConfigurations.push(uid);\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListQueryDto.html":{"url":"classes/ListQueryDto.html","title":"class - ListQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/list-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                hasPagination\n                            \n                            \n                                    Public\n                                pagination\n                            \n                            \n                                    Public\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CrudFilters[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/list-query.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasPagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/list-query.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/list-query.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CrudSorting[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dto/list-query.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsDate, IsNumber, IsNumberString, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { toBoolean, toLowerCase, toNumber, trim, toDate, toPagination, toCrudSorting, toCrudFilters } from '../helper/cast.helper';\nimport { Pagination } from './pagination.dto';\nimport { CrudSorting } from './crud-sorting.dto';\nimport { CrudFilters } from './crud-filters.dto';\n\nexport class ListQueryDto {\n    @Transform(({value}) => toBoolean(value))\n    @IsOptional()\n    @IsBoolean()\n    public hasPagination: boolean;\n\n    @Transform(({value}) => toPagination(value))\n    @IsOptional()\n    public pagination: Pagination;\n\n    @Transform(({value}) => toCrudSorting(value))\n    @IsOptional()\n    public sort: CrudSorting[];\n\n    @Transform(({value}) => toCrudFilters(value))\n    @IsOptional()\n    public filters: CrudFilters[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/hpa.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                metricName\n                            \n                            \n                                query\n                            \n                            \n                                targetValue\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/hpa.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type HpaDocument = Hpa & Document;\n\n@Schema()\nexport class Metric extends Document {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    metricName: string;\n\n    @Prop({ type: String })\n    query: string;\n\n    @Prop({ type: String })\n    targetValue: string;\n\n    @Prop({ type: String })\n    type: string;\n}\n\nexport const MetricSchema = SchemaFactory.createForClass(Metric);\n\n@Schema()\nexport class Hpa {\n    @Prop()\n    uid: string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    deploymentName: string;\n\n    @Prop()\n    createdAt: string;\n\n    @Prop()\n    maxReplicas: number;\n\n    @Prop()\n    minReplicas: number;\n\n    @Prop({ _id: true, type: [MetricSchema] })\n    currentMetrics: Types.Array;\n\n}\nexport const HpaSchema = SchemaFactory.createForClass(Hpa);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/pagination.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Used to paginate the results of a query.\nCurrent is the current item to retrieve (relates to position in array).\nPageSize is the number of items per page.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/pagination.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto/pagination.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Pagination {\n    current: number;\n    pageSize: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PodInformation.html":{"url":"classes/PodInformation.html","title":"class - PodInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PodInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/podInformation.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                containerInformation\n                            \n                            \n                                createdAt\n                            \n                            \n                                namespace\n                            \n                            \n                                podName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerInformation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({_id: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        podName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/podInformation.schema.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { V1ContainerState } from \"@kubernetes/client-node\";\n\nexport type PodInformationDocument = PodInformation & Document;\n\n\n@Schema()\nexport class ContainerInformation extends Document {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    containerID: string;\n\n    @Prop({ type: String })\n    image: string;\n\n    @Prop({ type: V1ContainerState })\n    lastState: V1ContainerState;\n\n    @Prop({ type: String })\n    name: string;\n\n    @Prop({ type: Boolean })\n    ready: boolean;\n\n    @Prop({ type: Number })\n    restartCount: number;\n\n    @Prop({ type: Boolean })\n    started: boolean;\n\n    @Prop({ type: V1ContainerState })\n    status: V1ContainerState;\n\n}\nexport const ContainerInformationSchema = SchemaFactory.createForClass(ContainerInformation);\n\n\n\n\n@Schema()\nexport class PodInformation {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    podName: string;\n\n    @Prop()\n    createdAt: string;\n\n    @Prop({ _id: true, type: [ContainerInformationSchema] })\n    containerInformation: Types.Array;\n}\n\nexport const PodInformationSchema = SchemaFactory.createForClass(PodInformation);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PodMetricsController.html":{"url":"controllers/PodMetricsController.html","title":"controller - PodMetricsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PodMetricsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pod-metrics/pod-metrics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pod-metrics\n            \n\n\n            \n                Description\n            \n            \n                Controller handeling the API endpoints for the pod container metrics collected by the pod metrics service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPodContainerInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPodContainerInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodContainerInformation(namespace: string, deployment: string, timestamp: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:namespace/:deploymentName/:timestamp')\n                \n            \n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.controller.ts:19\n                \n            \n\n\n            \n                \n                    Returns information about the container of all pods in a namespace and deployment at a given timestamp\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deployment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timestamp\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { PodMetricsService } from './pod-metrics.service';\n\n/**\n * Controller handeling the API endpoints for the pod container metrics collected by the pod metrics service.\n */\n@Controller('pod-metrics')\nexport class PodMetricsController {\n    constructor(private readonly podMetricsService: PodMetricsService) { }\n\n    /**\n    * Returns information about the container of all pods in a namespace and deployment at a given timestamp\n    * \n    * @param namespace\n    * @param deployment\n    * @param timestamp\n    */\n    @Get('/:namespace/:deploymentName/:timestamp')\n    async getPodContainerInformation(@Param('namespace') namespace: string, @Param('deploymentName') deployment: string, @Param('timestamp') timestamp: string) {\n        let podList = await this.podMetricsService.getPodsInDeployment(deployment, namespace);\n        let podMetrics = [];\n        for (const pod of podList) {\n            let podInformation = await this.podMetricsService.getSavedPodInformation(pod.metadata.name, namespace, new Date(timestamp));\n            podMetrics.push(podInformation.containerInformation);\n        }\n\n        return podMetrics;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PodMetricsService.html":{"url":"injectables/PodMetricsService.html","title":"injectable - PodMetricsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PodMetricsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pod-metrics/pod-metrics.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving pod information from the kubernetes API and saving it in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kubernetesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterDeployments\n                            \n                            \n                                    Async\n                                getDeployments\n                            \n                            \n                                    Async\n                                getPodContainerInformation\n                            \n                            \n                                    Private\n                                    Async\n                                getPodsFromReplicaSet\n                            \n                            \n                                    Async\n                                getPodsInDeployment\n                            \n                            \n                                    Async\n                                getReplicaSetOfDeployment\n                            \n                            \n                                    Async\n                                getSavedPodInformation\n                            \n                            \n                                    Async\n                                savePodInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(podInformationModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/pod-metrics/pod-metrics.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        podInformationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterDeployments\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterDeployments(deploymentsUnfiltered: k8s.V1Deployment[])\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:58\n                \n            \n\n\n            \n                \n                    Removes blacklisted deployments from the list of deployments.\nThe blacklist includes the following deployments:\n\nthe backend and frontend of the application, mongodb, prometheus and grafana\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    deploymentsUnfiltered\n                                    \n                                            k8s.V1Deployment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        deployments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDeployments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeployments(namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:119\n                \n            \n\n\n            \n                \n                    Retrieves all deployments of a namespace from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPodContainerInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodContainerInformation(pod: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:91\n                \n            \n\n\n            \n                \n                    Retrieves information about the container of a pod from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pod\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPodsFromReplicaSet\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodsFromReplicaSet(namespace: string, replicaSetNames: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:145\n                \n            \n\n\n            \n                \n                    Retrieves the pods of a replica set from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replicaSetNames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPodsInDeployment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPodsInDeployment(deploymentName: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:132\n                \n            \n\n\n            \n                \n                    Retrieves the all pods of a replica set from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getReplicaSetOfDeployment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReplicaSetOfDeployment(deploymentName: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:165\n                \n            \n\n\n            \n                \n                    Retrieves the replica set of a deployment from the kubernetes API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deploymentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSavedPodInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSavedPodInformation(podName: string, namespace: string, timestamp: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieves the saved information about a pod from the database closest to a specific time.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    podName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timestamp\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        savePodInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    savePodInformation()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(300000)\n                \n            \n\n            \n                \n                    Defined in src/pod-metrics/pod-metrics.service.ts:24\n                \n            \n\n\n            \n                \n                    Saves regularly (every 5 min) the pod information in the namspace default in the database.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kubernetesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new k8s.KubeConfig()\n                    \n                \n                    \n                        \n                                Defined in src/pod-metrics/pod-metrics.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as k8s from '@kubernetes/client-node';\nimport { PodInformation, PodInformationDocument } from 'src/schema/podInformation.schema';\nimport { Model, Types } from 'mongoose';\nimport { Interval } from '@nestjs/schedule';\n\n/**\n * Service for retrieving pod information from the kubernetes API and saving it in the database\n */\n@Injectable()\nexport class PodMetricsService {\n    private kubernetesConfig = new k8s.KubeConfig();\n\n    constructor(@InjectModel(PodInformation.name) private podInformationModel: Model) {\n        this.kubernetesConfig.loadFromDefault();\n        this.savePodInformation();\n    }\n\n    /**\n     * Saves regularly (every 5 min) the pod information in the namspace default in the database.\n     */\n    @Interval(300000)\n    async savePodInformation() {\n        const deploymentsUnfiltered = await this.getDeployments('default');\n        const deployments = this.filterDeployments(deploymentsUnfiltered);\n\n        const podList = [];\n        for (const deployment of deployments) {\n            const pods = await this.getPodsInDeployment(deployment.metadata.name, 'default');\n            for (const pod of pods) {\n                podList.push(pod);\n            }\n        }\n\n        for (const pod of podList) {\n            const containerInformation = await this.getPodContainerInformation(pod);\n            const podInformation = new this.podInformationModel({\n                _id: new Types.ObjectId(),\n                podName: pod.metadata.name,\n                namespace: pod.metadata.namespace,\n                createdAt: new Date().toISOString(),\n                containerInformation: containerInformation\n            });\n            await podInformation.save();\n        }\n    }\n\n    /**\n     * Removes blacklisted deployments from the list of deployments.\n     * \n     * The blacklist includes the following deployments:\n     * - the backend and frontend of the application, mongodb, prometheus and grafana\n     * \n     * @param deploymentsUnfiltered deployments\n     * @returns \n     */\n    private filterDeployments(deploymentsUnfiltered: k8s.V1Deployment[]) {\n        const deploymentBlacklist = [\"ba\", \"ba-frontend\", \"blackbox-exporter-prometheus-blackbox-exporter\", \"mongo-mongodb\", \"prometheus-grafana\", \"prometheus-kube-prometheus-operator\", \"prometheus-kube-state-metrics\"]\n        const deployments = [];\n\n        for (const deployment of deploymentsUnfiltered) {\n            if (!deploymentBlacklist.includes(deployment.metadata.name)) {\n                deployments.push(deployment);\n            }\n        }\n        return deployments;\n    }\n\n    /**\n     * Retrieves the saved information about a pod from the database closest to a specific time.\n     * \n     * @param podName\n     * @param namespace\n     */\n    async getSavedPodInformation(podName: string, namespace: string, timestamp: Date) {\n        // add 4 minutes to the timestamp to get the closest information\n        const timeBias = 240000;\n        timestamp.setMilliseconds(timestamp.getMilliseconds() + timeBias);\n        const podInformation = await this.podInformationModel.find({ podName: podName, namespace: namespace, createdAt: { $lte: timestamp } }).sort({ createdAt: -1 }).limit(1);\n        return podInformation[0];\n    }\n\n    /**\n     * Retrieves information about the container of a pod from the kubernetes API.\n     * \n     * @param podName \n     * @param namespace \n     * @returns \n     */\n    async getPodContainerInformation(pod: any) {\n        const containerStatuses = pod.status.containerStatuses;\n        const containerInformation = [];\n\n        for (const containerStatus of containerStatuses) {\n            const containerInfo = {\n                containerID: containerStatus.containerID,\n                image: containerStatus.image,\n                lastState: containerStatus.lastState,\n                name: containerStatus.name,\n                ready: containerStatus.ready,\n                restartCount: containerStatus.restartCount,\n                started: containerStatus.started,\n                status: containerStatus.state,\n            }\n            containerInformation.push(containerInfo);\n        }\n        return containerInformation;\n\n    }\n\n    /**\n     * Retrieves all deployments of a namespace from the kubernetes API.\n     * \n     * @param namespace\n     * @returns\n     * \n     */\n    async getDeployments(namespace: string) {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AppsV1Api);\n        const deploymentList = await k8sApi.listNamespacedDeployment(namespace);\n        return deploymentList.body.items;\n    }\n\n    /**\n     * Retrieves the all pods of a replica set from the kubernetes API.\n     * \n     * @param deploymentName\n     * @param namespace\n     * @returns\n     */\n    async getPodsInDeployment(deploymentName: string, namespace: string) {\n        const replicaSetName = await this.getReplicaSetOfDeployment(deploymentName, namespace);\n        const pods = await this.getPodsFromReplicaSet(namespace, replicaSetName);\n        return pods;\n    }\n\n    /**\n     * Retrieves the pods of a replica set from the kubernetes API.\n     * \n     * @param namespace \n     * @param replicaSetNames \n     * @returns \n     */\n    private async getPodsFromReplicaSet(namespace: string, replicaSetNames: string[]) {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.CoreV1Api);\n        const podList = await k8sApi.listNamespacedPod(namespace);\n        const podsInDeployment = [];\n\n        for (const pod of podList.body.items) {\n            if (replicaSetNames.includes(pod.metadata.ownerReferences[0].name)) {\n                podsInDeployment.push(pod);\n            }\n        }\n        return podsInDeployment;\n    }\n\n    /**\n     * Retrieves the replica set of a deployment from the kubernetes API.\n     * \n     * @param deploymentName\n     * @param namespace\n     * @returns\n     */\n    async getReplicaSetOfDeployment(deploymentName: string, namespace: string) {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AppsV1Api);\n        const deployment = await k8sApi.readNamespacedDeployment(deploymentName, namespace);\n        const labels = deployment.body.metadata.labels;\n        const labelSelector = Object.keys(labels)\n            .map(key => `${key}=${labels[key]}`)\n            .join(',');\n        const replicaSetList = await k8sApi.listNamespacedReplicaSet(namespace, undefined, undefined, undefined, undefined, labelSelector);\n        const replicaSets = replicaSetList.body.items;\n        const collectedReplicaSetNames = [];\n        for (const replicaSet of replicaSets) {\n            collectedReplicaSetNames.push(replicaSet.metadata.name);\n        }\n\n\n        return collectedReplicaSetNames;\n    }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrometheusMetric.html":{"url":"classes/PrometheusMetric.html","title":"class - PrometheusMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrometheusMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/prometheusMetric.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                metricName\n                            \n                            \n                                queriedAt\n                            \n                            \n                                query\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseSchema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/prometheusMetric.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/prometheusMetric.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queriedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/prometheusMetric.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/prometheusMetric.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/prometheusMetric.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type PrometheusMetricDocument = PrometheusMetric & Document;\n\n@Schema()\nexport class PrometheusMetric {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop({ type: String })\n    queriedAt: string;\n\n    @Prop({ type: String })\n    metricName: string;\n\n    @Prop({ type: String })\n    query: string;\n\n    @Prop({ type: String })\n    value: string;\n\n}\n\nexport const PrometheusMetricSchema = SchemaFactory.createForClass(PrometheusMetric);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrometheusMetricsController.html":{"url":"controllers/PrometheusMetricsController.html","title":"controller - PrometheusMetricsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrometheusMetricsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prometheus-metrics/prometheus-metrics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                prometheus-metrics\n            \n\n\n            \n                Description\n            \n            \n                Controller handeling the API endpoint to query prometheus metrics\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPrometheusMetricsFromTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPrometheusMetricsFromTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrometheusMetricsFromTo(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.controller.ts:27\n                \n            \n\n\n            \n                \n                    Returns value of a promehteus metric used in a hpa scaling rule within a specific time range with a specific resolution\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Query } from '@nestjs/common';\nimport { PrometheusMetricsService } from './prometheus-metrics.service';\n\nclass QueryDto {\n  metricQuery: string;\n  start: string;\n  end: string;\n  step: string;\n}\n\n/**\n * Controller handeling the API endpoint to query prometheus metrics\n */\n@Controller('prometheus-metrics')\nexport class PrometheusMetricsController {\n    constructor(private readonly prometheusMetricsService: PrometheusMetricsService) { }\n\n    /**\n     * Returns value of a promehteus metric used in a hpa scaling rule within a specific time range with a specific resolution\n     * @param query\n     * @param start unix timestamp\n     * @param end unix timestamp\n     * @param step query resolution\n     * @returns\n     */\n    @Get()\n    async getPrometheusMetricsFromTo(@Query() query: any): Promise {\n        if(query.metricQuery && query.start && query.end && query.step) {\n            return this.prometheusMetricsService.queryPrometheusTimeRange(query.metricQuery, query.start, query.end, query.step);\n        }\n        else if(query.metricQuery && query.start) {\n            return this.prometheusMetricsService.queryPrometheusTime(query.metricQuery, query.start);\n        }\n        else {\n            throw new BadRequestException(\"Please provide metricQuery, start, end and step as query parameters\");\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrometheusMetricsService.html":{"url":"injectables/PrometheusMetricsService.html","title":"injectable - PrometheusMetricsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrometheusMetricsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prometheus-metrics/prometheus-metrics.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for querying prometheus metrics from the prometheus API\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHpaMetricQueries\n                            \n                            \n                                    Async\n                                isHpaMetricQuery\n                            \n                            \n                                    Async\n                                queryPrometheus\n                            \n                            \n                                    Async\n                                queryPrometheusTime\n                            \n                            \n                                    Async\n                                queryPrometheusTimeRange\n                            \n                            \n                                    Private\n                                    Async\n                                verifyUsedHpaRule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promModel: Model, hpaModel: Model, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/prometheus-metrics/prometheus-metrics.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hpaModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHpaMetricQueries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHpaMetricQueries()\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:35\n                \n            \n\n\n            \n                \n                    Queries the hpa database for current used metrics\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isHpaMetricQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHpaMetricQuery(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:25\n                \n            \n\n\n            \n                \n                    Checks if requested query is used within a hpa scaling rule\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        queryPrometheus\n                        \n                    \n                \n            \n            \n                \n                    \n                    queryPrometheus(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:119\n                \n            \n\n\n            \n                \n                    Queries Prometheus for the value of a metric used in a hpa scaling rule at the current time\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        queryPrometheusTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    queryPrometheusTime(query: string, time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:91\n                \n            \n\n\n            \n                \n                    Queries Prometheus for the value of a metric used in a hpa scaling rule at a specific time\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unix timestamp\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        queryPrometheusTimeRange\n                        \n                    \n                \n            \n            \n                \n                    \n                    queryPrometheusTimeRange(query: string, start: string, end: string, step: string)\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:57\n                \n            \n\n\n            \n                \n                    Queries Prometheus for the value of a metric used in a hpa scaling rule within a specific time range with a specific resolution\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    start\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unix timestamp\n\n                                    \n                                \n                                \n                                    end\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unix timestamp\n\n                                    \n                                \n                                \n                                    step\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        query resolution\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyUsedHpaRule\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyUsedHpaRule(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/prometheus-metrics/prometheus-metrics.service.ts:141\n                \n            \n\n\n            \n                \n                    Verify query is used within a hpa scaling rule\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { lastValueFrom, map } from 'rxjs';\nimport { Hpa, HpaDocument } from 'src/schema/hpa.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PrometheusMetric, PrometheusMetricDocument } from 'src/schema/prometheusMetric.schema';\n\n/**\n * Service for querying prometheus metrics from the prometheus API\n */ \n@Injectable()\nexport class PrometheusMetricsService {\n    constructor(@InjectModel(PrometheusMetric.name) private promModel: Model, \n                @InjectModel(Hpa.name) private hpaModel: Model, \n                private httpService: HttpService) {\n    }\n\n    /**\n     * Checks if requested query is used within a hpa scaling rule\n     * \n     * @param query\n     * @returns\n     */\n    async isHpaMetricQuery(query: string): Promise {\n        let hpaMetricQueries = await this.getHpaMetricQueries();\n        return hpaMetricQueries.includes(query);\n    }\n\n    /**\n     * Queries the hpa database for current used metrics \n     * \n     * @returns\n     */\n    async getHpaMetricQueries(): Promise {\n        let uniqueQueries = [...new Set()];\n        await this.hpaModel.find().exec().then((result) => {\n            result.map((hpa) => {\n                hpa.currentMetrics.map((metric) => {\n                    uniqueQueries.push(metric.query);\n                })\n            }\n        )});    \n        return uniqueQueries;\n    }\n\n\n    /**\n     * Queries Prometheus for the value of a metric used in a hpa scaling rule within a specific time range with a specific resolution\n     * \n     * @param query \n     * @param start unix timestamp\n     * @param end unix timestamp\n     * @param step query resolution\n     * @returns \n     */\n     async queryPrometheusTimeRange(query: string, start: string, end: string, step: string): Promise {\n\n        //Verify start and end are unix timestamps\n        let valid = (new Date(start)).getTime() > 0 && (new Date(end)).getTime() > 0;\n        if (!valid) {\n            throw new Error(\"Start and end must be unix timestamps\");\n        }\n\n        query = await this.verifyUsedHpaRule(query);\n\n        let result;\n        let startUnix = new Date(start).getTime() / 1000;\n        let endUnix = new Date(end).getTime() / 1000;\n        try {\n            const prometheusUrl = process.env.PROMETHEUS_URL || 'http://prometheus-kube-prometheus-prometheus:9090';\n            // TODO: use format string\n            const url = prometheusUrl + '/api/v1/query_range?query=' + query + '&start=' + startUnix + '&end=' + endUnix + '&step=' + step;\n            result = await lastValueFrom(this.httpService.get(url).pipe(\n                map(response => response.data)\n            ));\n        } catch (error) {\n            console.log(error)\n        }\n        return result.data.result.pop().values;\n     }\n\n\n    /**\n     * Queries Prometheus for the value of a metric used in a hpa scaling rule at a specific time\n     * \n     * @param query\n     * @param time unix timestamp\n     * @returns\n     */\n    async queryPrometheusTime(query: string, time: string): Promise {\n            \n        //Verify time is unix timestamp\n        let valid = (new Date(time)).getTime() > 0;\n        if (!valid) {\n            throw new Error(\"Time must be unix timestamp\");\n        }\n        query = await this.verifyUsedHpaRule(query);\n\n        let result;\n        let timeUnix = new Date(time).getTime() / 1000;\n        try {\n            const prometheusUrl = process.env.PROMETHEUS_URL || 'http://prometheus-kube-prometheus-prometheus:9090';\n            const url = prometheusUrl + '/api/v1/query?query=' + query + '&time=' + timeUnix;\n            result = await lastValueFrom(this.httpService.get(url).pipe(\n                map(response => response.data)\n            ));\n        } catch (error) {\n            console.log(error)\n        }\n        return result.data.result.pop().value;\n    }\n\n    /**\n     * Queries Prometheus for the value of a metric used in a hpa scaling rule at the current time\n     * @param query\n     * @returns\n     */\n    async queryPrometheus(query: string): Promise {\n        query = await this.verifyUsedHpaRule(query);\n        \n        let result;\n        try {\n            const prometheusUrl = process.env.PROMETHEUS_URL || 'http://prometheus-kube-prometheus-prometheus:9090';\n            const url = prometheusUrl + '/api/v1/query?query=' + query;\n            result = await lastValueFrom(this.httpService.get(url).pipe(\n                map(response => response.data)\n            ));\n        } catch (error) {\n            console.log(error)\n        }\n        return result.data.result.pop().value;\n    }\n\n    /**\n     * Verify query is used within a hpa scaling rule\n     * \n     * @param query \n     * @returns \n     */\n    private async verifyUsedHpaRule(query: string) {\n        query = query.replace(/\\\\/g, \"\");\n        let isHpaMetricQuery = await this.isHpaMetricQuery(query);\n        if (!isHpaMetricQuery) {\n            throw new Error(\"Query is not used within an hpa scaling rule\");\n        }\n        return query;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryDto.html":{"url":"classes/QueryDto.html","title":"class - QueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prometheus-metrics/prometheus-metrics.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                metricQuery\n                            \n                            \n                                start\n                            \n                            \n                                step\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/prometheus-metrics/prometheus-metrics.controller.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/prometheus-metrics/prometheus-metrics.controller.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/prometheus-metrics/prometheus-metrics.controller.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/prometheus-metrics/prometheus-metrics.controller.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, Controller, Get, Query } from '@nestjs/common';\nimport { PrometheusMetricsService } from './prometheus-metrics.service';\n\nclass QueryDto {\n  metricQuery: string;\n  start: string;\n  end: string;\n  step: string;\n}\n\n/**\n * Controller handeling the API endpoint to query prometheus metrics\n */\n@Controller('prometheus-metrics')\nexport class PrometheusMetricsController {\n    constructor(private readonly prometheusMetricsService: PrometheusMetricsService) { }\n\n    /**\n     * Returns value of a promehteus metric used in a hpa scaling rule within a specific time range with a specific resolution\n     * @param query\n     * @param start unix timestamp\n     * @param end unix timestamp\n     * @param step query resolution\n     * @returns\n     */\n    @Get()\n    async getPrometheusMetricsFromTo(@Query() query: any): Promise {\n        if(query.metricQuery && query.start && query.end && query.step) {\n            return this.prometheusMetricsService.queryPrometheusTimeRange(query.metricQuery, query.start, query.end, query.step);\n        }\n        else if(query.metricQuery && query.start) {\n            return this.prometheusMetricsService.queryPrometheusTime(query.metricQuery, query.start);\n        }\n        else {\n            throw new BadRequestException(\"Please provide metricQuery, start, end and step as query parameters\");\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Result.html":{"url":"interfaces/Result.html","title":"interface - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/derivative/dto/result.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metric\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metric\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metric:         Metric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metric\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResultDto {\n    status: string;\n    data:   Data;\n}\n\nexport interface Data {\n    resultType: string;\n    result:     Result[];\n}\n\nexport interface Result {\n    metric: Metric;\n    values: Array;\n}\n\nexport interface Metric {\n}\n\nexport type Value = number | string;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResultDto.html":{"url":"interfaces/ResultDto.html","title":"interface - ResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/derivative/dto/result.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResultDto {\n    status: string;\n    data:   Data;\n}\n\nexport interface Data {\n    resultType: string;\n    result:     Result[];\n}\n\nexport interface Result {\n    metric: Metric;\n    values: Array;\n}\n\nexport interface Metric {\n}\n\nexport type Value = number | string;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScalingCondition.html":{"url":"classes/ScalingCondition.html","title":"class - ScalingCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScalingCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schema/scalingConditions.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                createdAt\n                            \n                            \n                                deploymentName\n                            \n                            \n                                namespace\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({_id: true, type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deploymentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schema/scalingConditions.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document, Schema as MongooseSchema, Types } from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type ScalingConditionDocument = ScalingCondition & Document;\n\n@Schema()\nexport class Condition {\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: MongooseSchema.Types.ObjectId\n\n    @Prop()\n    type: string;\n    \n    @Prop()\n    status: string;\n    \n    @Prop()\n    lastTransitionTime: string;\n    \n    @Prop()\n    reason: string;\n    \n    @Prop()\n    message: string;\n}\n\nexport const ConditionSchema = SchemaFactory.createForClass(Condition);\n\n@Schema()\nexport class ScalingCondition {\n\n    @Prop()\n    deploymentName: string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    uid: string;\n    \n    @Prop()\n    createdAt: string;\n\n    @Prop({ _id: true, type: [ConditionSchema] })\n    conditions: Types.Array;\n\n}\n\nexport const ScalingConditionSchema = SchemaFactory.createForClass(ScalingCondition);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ScalingConditionsController.html":{"url":"controllers/ScalingConditionsController.html","title":"controller - ScalingConditionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ScalingConditionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scaling-conditions/scaling-conditions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                scaling-conditions\n            \n\n\n            \n                Description\n            \n            \n                Controller handeling the API endpoints for the scaling conditions collected by the scaling conditions service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(uid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.controller.ts:52\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve single item in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(query: ListQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.controller.ts:23\n                \n            \n\n\n            \n                \n                    API endpoint to retrieve a collection of items in a resource\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ListQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Post, Query, Param, Patch } from '@nestjs/common';\nimport { ListQueryDto } from 'src/dto/list-query.dto';\nimport { filterResult, sortResult } from 'src/helper/list.helper';\nimport { ScalingConditionsService } from './scaling-conditions.service';\n\n/**\n * Controller handeling the API endpoints for the scaling conditions collected by the scaling conditions service.\n */ \n@Controller('scaling-conditions')\nexport class ScalingConditionsController {\n    constructor(private readonly scalingConditionsService: ScalingConditionsService) { }\n\n    /**\n     * API endpoint to retrieve a collection of items in a resource\n     * \n     * @param hasPagination\n     * @param pagination\n     * @param sort\n     * @param filters\n     * @returns\n     */\n    @Get()\n    async getList(@Query() query: ListQueryDto) {\n        let hasPagination = query.hasPagination;\n        let pagination = query.pagination;\n        let sort = query.sort;\n        let filters = query.filters;\n\n        let allScalingConditions = await this.scalingConditionsService.getAllScalingConditions();\n\n\n        if (sort) {\n            allScalingConditions = sortResult(sort, allScalingConditions);\n        }\n        if (filters) {\n            allScalingConditions = filterResult(filters, allScalingConditions);\n        }\n        if (hasPagination) {\n            allScalingConditions = allScalingConditions.slice(pagination.current, pagination.current + pagination.pageSize);\n        }\n\n        return allScalingConditions;\n    }\n\n    /**\n     * API endpoint to retrieve single item in a resource\n     * \n     * @param id\n     * @returns\n     */\n    @Get('/:id')\n    async get(@Param('id') uid: string) {\n        return this.scalingConditionsService.getScalingConditionByUid(uid);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScalingConditionsService.html":{"url":"injectables/ScalingConditionsService.html","title":"injectable - ScalingConditionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScalingConditionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scaling-conditions/scaling-conditions.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving scaling conditions from the kubernetes API and saving it in the database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                kubernetesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllScalingConditions\n                            \n                            \n                                    Async\n                                getScalingConditionByUid\n                            \n                            \n                                    Async\n                                getScalingConditions\n                            \n                            \n                                    Async\n                                retrieveScalingConditions\n                            \n                            \n                                    Private\n                                    Async\n                                saveScalingConditions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/scaling-conditions/scaling-conditions.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllScalingConditions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllScalingConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.service.ts:36\n                \n            \n\n\n            \n                \n                    Returns all scaling conditions\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getScalingConditionByUid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScalingConditionByUid(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.service.ts:46\n                \n            \n\n\n            \n                \n                    Retrieves a single scaling condition by uid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getScalingConditions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScalingConditions(name: string, namespace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.service.ts:27\n                \n            \n\n\n            \n                \n                    Returns the hpa scaling conditions for a given deployment\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the deployment\n\n                                    \n                                \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        namespace of the deployment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        retrieveScalingConditions\n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieveScalingConditions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(300000)\n                \n            \n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.service.ts:54\n                \n            \n\n\n            \n                \n                    Regularly (5min) retrieves the scaling conditions for all deployments\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        saveScalingConditions\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveScalingConditions(scalingCondition: k8s.V2beta2HorizontalPodAutoscaler)\n                \n            \n\n\n            \n                \n                    Defined in src/scaling-conditions/scaling-conditions.service.ts:72\n                \n            \n\n\n            \n                \n                    Saves the scaling conditions in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scalingCondition\n                                    \n                                            k8s.V2beta2HorizontalPodAutoscaler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        kubernetesConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new k8s.KubeConfig()\n                    \n                \n                    \n                        \n                                Defined in src/scaling-conditions/scaling-conditions.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as k8s from '@kubernetes/client-node';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ScalingCondition, ScalingConditionDocument } from 'src/schema/scalingConditions.schema';\nimport { Model } from 'mongoose';\nimport { Interval } from '@nestjs/schedule';\n\n/**\n * Service for retrieving scaling conditions from the kubernetes API and saving it in the database\n */\n@Injectable()\nexport class ScalingConditionsService {\n    private kubernetesConfig = new k8s.KubeConfig();\n\n    constructor(@InjectModel(ScalingCondition.name) private conditionModel: Model) {\n        this.kubernetesConfig.loadFromDefault();\n        this.retrieveScalingConditions();\n    }\n\n    /**\n     * Returns the hpa scaling conditions for a given deployment\n     * \n     * @param name name of the deployment\n     * @param namespace namespace of the deployment\n     * @returns\n     */\n    async getScalingConditions(name: string, namespace: string): Promise {\n        return this.conditionModel.findOne({ deployment: name, namespace: namespace }).exec();\n    }\n\n    /**\n     * Returns all scaling conditions\n     * \n     * @returns\n     */\n    async getAllScalingConditions(): Promise {\n        return this.conditionModel.find().exec();\n    }\n\n    /**\n     * Retrieves a single scaling condition by uid\n     * \n     * @param uid\n     * @returns\n     */\n    async getScalingConditionByUid(uid: string): Promise {\n        return this.conditionModel.findOne({ uid: uid }).exec();\n    }\n\n    /**\n     * Regularly (5min) retrieves the scaling conditions for all deployments\n     */\n    @Interval(300000)\n    async retrieveScalingConditions() {\n        const k8sApi = this.kubernetesConfig.makeApiClient(k8s.AutoscalingV2beta2Api);\n        let scalingConditions = await k8sApi.listHorizontalPodAutoscalerForAllNamespaces()\n            .then((res) => {\n                return res.body.items;\n            });\n\n        scalingConditions.forEach(async (scalingCondition) => {\n            this.saveScalingConditions(scalingCondition);\n        });\n    }\n\n\n    /**\n     * Saves the scaling conditions in the database\n     * \n     * @param scalingCondition\n     */\n    private async saveScalingConditions(scalingCondition: k8s.V2beta2HorizontalPodAutoscaler) {\n        const scalingConditionDocument = new this.conditionModel();\n\n        let scalingConditionStatusConditions = scalingCondition.status.conditions;\n        for (let condition of scalingConditionStatusConditions) {\n            let lastSavedScalingCondition = await this.conditionModel.findOne({ uid: scalingCondition.metadata.uid }).exec();\n\n            if (lastSavedScalingCondition) {\n                //find the condition in last saved condition with the same type\n                let lastSavedCondition = lastSavedScalingCondition.conditions.find((c) => c.type === condition.type);\n                if (lastSavedCondition) {\n                    //if the last saved condition is older than the current condition save the current condition\n                    if (new Date(lastSavedCondition.lastTransitionTime) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Set.html":{"url":"classes/Set.html","title":"class - Set","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Set\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event-set/schema/set.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                events\n                            \n                            \n                                firstEvent\n                            \n                            \n                                lastEvent\n                            \n                            \n                                metricType\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                reason\n                            \n                            \n                                scalingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Event[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scalingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/event-set/schema/set.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { Event } from 'src/schema/adaptionEvent.schema';\n\nexport type SetDocument = Set & Document;\n\n@Schema()\nexport class Set {\n    @Prop()\n    name : string;\n\n    @Prop()\n    namespace: string;\n\n    @Prop()\n    firstEvent : string;\n\n    @Prop()\n    lastEvent : string;\n\n    @Prop()\n    count : number;\n\n    @Prop()\n    reason : string;\n\n    @Prop()\n    scalingType: string;\n    \n    @Prop()\n    metricType: string;\n\n    @Prop()\n    events: Event[];\n\n}\n\nexport const SetSchema = SchemaFactory.createForClass(Set);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToNumberOptions.html":{"url":"interfaces/ToNumberOptions.html","title":"interface - ToNumberOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToNumberOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helper/cast.helper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CrudFilters } from \"src/dto/crud-filters.dto\";\nimport { CrudSorting } from \"src/dto/crud-sorting.dto\";\nimport { Pagination } from \"src/dto/pagination.dto\";\n\ninterface ToNumberOptions {\n    default?: number;\n    min?: number;\n    max?: number;\n}\n\nexport function toLowerCase(value: string): string {\n    return value.toLowerCase();\n}\n\nexport function trim(value: string): string {\n    return value.trim();\n}\n\nexport function toDate(value: string): Date {\n    return new Date(value);\n}\n\nexport function toBoolean(value: string): boolean {\n    value = value.toLowerCase();\n\n    return value === 'true' || value === '1' ? true : false;\n}\n\nexport function toNumber(value: string, opts: ToNumberOptions = {}): number {\n    let newValue: number = Number.parseInt(value || String(opts.default), 10);\n\n    if (Number.isNaN(newValue)) {\n        newValue = opts.default;\n    }\n\n    if (opts.min) {\n        if (newValue  opts.max) {\n            newValue = opts.max;\n        }\n    }\n\n    return newValue;\n}\n\nexport function toPagination(value: any): Pagination {\n    value = cleanJsonString(value);\n    let jsonObj = JSON.parse(value);\n\n    return {\n        current: toNumber(jsonObj.pagination.current, { default: 1, min: 0 }),\n        pageSize: toNumber(jsonObj.pagination.pageSize, { default: 10, min: 1, max: 1000 }),\n    };\n}\n\n\nexport function toCrudSorting(value: string): CrudSorting[] {\n    value = cleanJsonString(value);\n    let jsonObj = JSON.parse(value);\n\n    let sortingActions: CrudSorting[] = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cluster-metrics/cluster-metrics.controller.ts\n            \n            controller\n            ClusterMetricsController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/cluster-metrics/cluster-metrics.service.ts\n            \n            injectable\n            ClusterMetricsService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/deployment-information/deployment-information.controller.ts\n            \n            controller\n            DeploymentInformationController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/deployment-information/deployment-information.service.ts\n            \n            injectable\n            DeploymentInformationService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/derivative/derivative.controller.ts\n            \n            controller\n            DerivativeController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/derivative/derivative.service.ts\n            \n            injectable\n            DerivativeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/derivative/dto/result.dto.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/derivative/dto/result.dto.ts\n            \n            interface\n            Metric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/derivative/dto/result.dto.ts\n            \n            interface\n            Result\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/derivative/dto/result.dto.ts\n            \n            interface\n            ResultDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/crud-filters.dto.ts\n            \n            class\n            CrudFilters\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/dto/crud-sorting.dto.ts\n            \n            class\n            CrudSorting\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/dto/event.dto.ts\n            \n            class\n            EventDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/list-query.dto.ts\n            \n            class\n            ListQueryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dto/pagination.dto.ts\n            \n            class\n            Pagination\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/event-set/event-set.controller.ts\n            \n            controller\n            EventSetController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event-set/event-set.service.ts\n            \n            injectable\n            EventSetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/event-set/schema/set.schema.ts\n            \n            class\n            Set\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/event-set/schema/set.schema.ts\n            \n            variable\n            SetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events/events.controller.ts\n            \n            controller\n            EventsController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/events/events.service.ts\n            \n            injectable\n            EventsService\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            interface\n            ToNumberOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            cleanJsonString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toCrudFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toCrudSorting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            toPagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/cast.helper.ts\n            \n            function\n            trim\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/list.helper.ts\n            \n            function\n            filterResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/list.helper.ts\n            \n            function\n            sortResult\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/hpa/hpa.controller.ts\n            \n            controller\n            HpaController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/hpa/hpa.service.ts\n            \n            injectable\n            HpaService\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pod-metrics/pod-metrics.controller.ts\n            \n            controller\n            PodMetricsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/pod-metrics/pod-metrics.service.ts\n            \n            injectable\n            PodMetricsService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/prometheus-metrics/prometheus-metrics.controller.ts\n            \n            controller\n            PrometheusMetricsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/prometheus-metrics/prometheus-metrics.controller.ts\n            \n            class\n            QueryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prometheus-metrics/prometheus-metrics.service.ts\n            \n            injectable\n            PrometheusMetricsService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/scaling-conditions/scaling-conditions.controller.ts\n            \n            controller\n            ScalingConditionsController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/scaling-conditions/scaling-conditions.service.ts\n            \n            injectable\n            ScalingConditionsService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/schema/adaptionEvent.schema.ts\n            \n            class\n            Event\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/schema/adaptionEvent.schema.ts\n            \n            variable\n            EventSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/clusterMetric.schema.ts\n            \n            class\n            ClusterMetric\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/clusterMetric.schema.ts\n            \n            variable\n            ClusterMetricSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/deploymentInformation.schema.ts\n            \n            class\n            DeploymentInformation\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/schema/deploymentInformation.schema.ts\n            \n            variable\n            DeploymentInformationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/hpa.schema.ts\n            \n            class\n            Hpa\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/schema/hpa.schema.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/hpa.schema.ts\n            \n            variable\n            HpaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/hpa.schema.ts\n            \n            variable\n            MetricSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/podInformation.schema.ts\n            \n            class\n            ContainerInformation\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/schema/podInformation.schema.ts\n            \n            class\n            PodInformation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/podInformation.schema.ts\n            \n            variable\n            ContainerInformationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/podInformation.schema.ts\n            \n            variable\n            PodInformationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/prometheusMetric.schema.ts\n            \n            class\n            PrometheusMetric\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/prometheusMetric.schema.ts\n            \n            variable\n            PrometheusMetricSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/scalingConditions.schema.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schema/scalingConditions.schema.ts\n            \n            class\n            ScalingCondition\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/schema/scalingConditions.schema.ts\n            \n            variable\n            ConditionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schema/scalingConditions.schema.ts\n            \n            variable\n            ScalingConditionSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kubernetes/client-node : ^0.17.1\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^2.1.0\n        \n            class-sanitizer : ^1.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mongoose : ^6.0.11\n        \n            prometheus-query : ^3.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            cleanJsonString   (src/.../cast.helper.ts)\n                        \n                        \n                            filterResult   (src/.../list.helper.ts)\n                        \n                        \n                            sortResult   (src/.../list.helper.ts)\n                        \n                        \n                            toBoolean   (src/.../cast.helper.ts)\n                        \n                        \n                            toCrudFilters   (src/.../cast.helper.ts)\n                        \n                        \n                            toCrudSorting   (src/.../cast.helper.ts)\n                        \n                        \n                            toDate   (src/.../cast.helper.ts)\n                        \n                        \n                            toLowerCase   (src/.../cast.helper.ts)\n                        \n                        \n                            toNumber   (src/.../cast.helper.ts)\n                        \n                        \n                            toPagination   (src/.../cast.helper.ts)\n                        \n                        \n                            trim   (src/.../cast.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helper/cast.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanJsonString\n                        \n                    \n                \n            \n            \n                \ncleanJsonString(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toBoolean\n                        \n                    \n                \n            \n            \n                \ntoBoolean(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCrudFilters\n                        \n                    \n                \n            \n            \n                \ntoCrudFilters(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CrudFilters[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCrudSorting\n                        \n                    \n                \n            \n            \n                \ntoCrudSorting(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CrudSorting[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toDate\n                        \n                    \n                \n            \n            \n                \ntoDate(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLowerCase\n                        \n                    \n                \n            \n            \n                \ntoLowerCase(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toNumber\n                        \n                    \n                \n            \n            \n                \ntoNumber(value: string, opts: ToNumberOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                ToNumberOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPagination\n                        \n                    \n                \n            \n            \n                \ntoPagination(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Pagination\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trim\n                        \n                    \n                \n            \n            \n                \ntrim(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/helper/list.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterResult\n                        \n                    \n                \n            \n            \n                \nfilterResult(filters, list: any)\n                \n            \n\n\n\n\n            \n                \n                    Filters a list of objects based on the given filters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortResult\n                        \n                    \n                \n            \n            \n                \nsortResult(sortingActions, list: any)\n                \n            \n\n\n\n\n            \n                \n                    Sorts a list of objects based on the given sorting actions.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortingActions\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nExpa Backend\nAbout\nThis is the backend for the Expa project. It is a REST API written in Node.js using the NestJS framework. It is currently in development.\nRunning the backend locally\nTo run the backend locally, you need to have Node.js installed. You can download it from here. After you have installed Node.js, you can run the backend by running the following commands in the root directory of the project:\n$ npm install\n$ npm run start:devHowever the backend will not work properly as it connects to a MongoDB database and to Promehteus both deployed on a cluster.\nThus it is not recommended to run the backend locally. Instead, you can deploy the backend directly to the cluster following the instructions below.\nDeploying the backend to the cluster\nTo deploy the backend to the cluster you need to have the following tools installed:\n\nkubectl\n\nAnd you need a Kubernetes cluster. You can create one using Minikube.\nAfter you have installed and configured the tools, you can deploy the backend by running the following commands in the root directory of the project:\nkubectl create -f ba-config.yml\nkubectl create -f ba-deployment.ymlRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nClusterMetricsService\n\nClusterMetricsService\n\nAppModule -->\n\nClusterMetricsService->AppModule\n\n\n\n\n\nDeploymentInformationService\n\nDeploymentInformationService\n\nAppModule -->\n\nDeploymentInformationService->AppModule\n\n\n\n\n\nDerivativeService\n\nDerivativeService\n\nAppModule -->\n\nDerivativeService->AppModule\n\n\n\n\n\nEventSetService\n\nEventSetService\n\nAppModule -->\n\nEventSetService->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nHpaService\n\nHpaService\n\nAppModule -->\n\nHpaService->AppModule\n\n\n\n\n\nPodMetricsService\n\nPodMetricsService\n\nAppModule -->\n\nPodMetricsService->AppModule\n\n\n\n\n\nPrometheusMetricsService\n\nPrometheusMetricsService\n\nAppModule -->\n\nPrometheusMetricsService->AppModule\n\n\n\n\n\nScalingConditionsService\n\nScalingConditionsService\n\nAppModule -->\n\nScalingConditionsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ClusterMetricDocument   (src/.../clusterMetric.schema.ts)\n                        \n                        \n                            DeploymentInformationDocument   (src/.../deploymentInformation.schema.ts)\n                        \n                        \n                            EventDocument   (src/.../adaptionEvent.schema.ts)\n                        \n                        \n                            HpaDocument   (src/.../hpa.schema.ts)\n                        \n                        \n                            PodInformationDocument   (src/.../podInformation.schema.ts)\n                        \n                        \n                            PrometheusMetricDocument   (src/.../prometheusMetric.schema.ts)\n                        \n                        \n                            ScalingConditionDocument   (src/.../scalingConditions.schema.ts)\n                        \n                        \n                            SetDocument   (src/.../set.schema.ts)\n                        \n                        \n                            Value   (src/.../result.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schema/clusterMetric.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ClusterMetricDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/deploymentInformation.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DeploymentInformationDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/adaptionEvent.schema.ts\n    \n    \n        \n            \n                \n                    \n                    EventDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/hpa.schema.ts\n    \n    \n        \n            \n                \n                    \n                    HpaDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/podInformation.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PodInformationDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/prometheusMetric.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PrometheusMetricDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schema/scalingConditions.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ScalingConditionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/event-set/schema/set.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SetDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/derivative/dto/result.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        number | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ClusterMetricSchema   (src/.../clusterMetric.schema.ts)\n                        \n                        \n                            ConditionSchema   (src/.../scalingConditions.schema.ts)\n                        \n                        \n                            ContainerInformationSchema   (src/.../podInformation.schema.ts)\n                        \n                        \n                            DeploymentInformationSchema   (src/.../deploymentInformation.schema.ts)\n                        \n                        \n                            EventSchema   (src/.../adaptionEvent.schema.ts)\n                        \n                        \n                            HpaSchema   (src/.../hpa.schema.ts)\n                        \n                        \n                            MetricSchema   (src/.../hpa.schema.ts)\n                        \n                        \n                            PodInformationSchema   (src/.../podInformation.schema.ts)\n                        \n                        \n                            PrometheusMetricSchema   (src/.../prometheusMetric.schema.ts)\n                        \n                        \n                            ScalingConditionSchema   (src/.../scalingConditions.schema.ts)\n                        \n                        \n                            SetSchema   (src/.../set.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schema/clusterMetric.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ClusterMetricSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ClusterMetric)\n                    \n                \n\n\n        \n    \n\n    src/schema/scalingConditions.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConditionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Condition)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ScalingConditionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ScalingCondition)\n                    \n                \n\n\n        \n    \n\n    src/schema/podInformation.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ContainerInformationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ContainerInformation)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PodInformationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PodInformation)\n                    \n                \n\n\n        \n    \n\n    src/schema/deploymentInformation.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeploymentInformationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DeploymentInformation)\n                    \n                \n\n\n        \n    \n\n    src/schema/adaptionEvent.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Event)\n                    \n                \n\n\n        \n    \n\n    src/schema/hpa.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HpaSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Hpa)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetricSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Metric)\n                    \n                \n\n\n        \n    \n\n    src/schema/prometheusMetric.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PrometheusMetricSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PrometheusMetric)\n                    \n                \n\n\n        \n    \n\n    src/event-set/schema/set.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SetSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Set)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
